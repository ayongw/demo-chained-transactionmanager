[DEBUG] 2015-12-01 15:25:05,606(195) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ntext -> org.hibernate.type.NTextType@5824a83d  
[DEBUG] 2015-12-01 15:25:05,621(210) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@1a942c18  
[DEBUG] 2015-12-01 15:25:05,622(211) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1a942c18  
[DEBUG] 2015-12-01 15:25:05,623(212) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@63376bed  
[DEBUG] 2015-12-01 15:25:05,633(222) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@76a4ebf2  
[DEBUG] 2015-12-01 15:25:05,634(223) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@76a4ebf2  
[DEBUG] 2015-12-01 15:25:05,639(228) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nclob -> org.hibernate.type.NClobType@2af004b  
[DEBUG] 2015-12-01 15:25:05,640(229) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2af004b  
[DEBUG] 2015-12-01 15:25:05,641(230) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@563f38c4  
[DEBUG] 2015-12-01 15:25:05,643(232) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3e27ba32  
[DEBUG] 2015-12-01 15:25:05,646(235) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@58cbafc2  
[DEBUG] 2015-12-01 15:25:05,652(241) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@4be29ed9  
[DEBUG] 2015-12-01 15:25:05,653(242) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4be29ed9  
[DEBUG] 2015-12-01 15:25:05,654(243) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@33065d67  
[DEBUG] 2015-12-01 15:25:05,655(244) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7bba5817  
[DEBUG] 2015-12-01 15:25:05,656(245) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@75437611  
[DEBUG] 2015-12-01 15:25:05,656(245) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1c5920df  
[DEBUG] 2015-12-01 15:25:05,657(246) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@79e4c792  
[DEBUG] 2015-12-01 15:25:05,658(247) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4c60d6e9  
[DEBUG] 2015-12-01 15:25:05,659(248) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4a83a74a  
[DEBUG] 2015-12-01 15:25:05,660(249) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4b29d1d2  
[INFO ] 2015-12-01 15:25:05,699(288) org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66) –> [main] HCANN000001: Hibernate Commons Annotations {4.0.4.Final}  
[INFO ] 2015-12-01 15:25:05,710(299) org.hibernate.Version.logVersion(Version.java:41) –> [main] HHH000412: Hibernate Core {4.2.10.Final}  
[INFO ] 2015-12-01 15:25:05,715(304) org.hibernate.cfg.Environment.<clinit>(Environment.java:238) –> [main] HHH000206: hibernate.properties not found  
[INFO ] 2015-12-01 15:25:05,718(307) org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:345) –> [main] HHH000021: Bytecode provider name : javassist  
[DEBUG] 2015-12-01 15:25:05,737(326) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-12-01 15:25:05,738(327) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-12-01 15:25:05,740(329) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:25:05,741(330) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:25:05,745(334) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-12-01 15:25:05,746(335) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]  
[DEBUG] 2015-12-01 15:25:05,749(338) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-12-01 15:25:05,751(340) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-12-01 15:25:05,753(342) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-12-01 15:25:05,754(343) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-12-01 15:25:05,756(345) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-12-01 15:25:05,759(348) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-12-01 15:25:05,761(350) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-12-01 15:25:05,767(356) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-12-01 15:25:05,769(358) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]  
[DEBUG] 2015-12-01 15:25:05,821(410) org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) –> [main] Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].  
[DEBUG] 2015-12-01 15:25:05,857(446) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1781) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-12-01 15:25:06,259(848) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:121) –> [main] Database ->
       name : MySQL
    version : 5.6.22
      major : 5
      minor : 6  
[DEBUG] 2015-12-01 15:25:06,260(849) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:127) –> [main] Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[DEBUG] 2015-12-01 15:25:06,261(850) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:133) –> [main] JDBC version : 4.0  
[INFO ] 2015-12-01 15:25:06,296(885) org.hibernate.dialect.Dialect.<init>(Dialect.java:130) –> [main] HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-12-01 15:25:06,318(907) org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:120) –> [main] HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException  
[DEBUG] 2015-12-01 15:25:06,364(953) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:25:06,365(954) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:25:06,373(962) org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:534) –> [main] Binding entity from annotated class: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:25:06,418(1007) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}  
[DEBUG] 2015-12-01 15:25:06,423(1012) org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1118) –> [main] No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED  
[DEBUG] 2015-12-01 15:25:06,461(1050) org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:394) –> [main] Import with entity name TestEntity  
[DEBUG] 2015-12-01 15:25:06,471(1060) org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:564) –> [main] Bind entity com.it_sucre.entity.TestEntity on table test  
[DEBUG] 2015-12-01 15:25:06,525(1114) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=id, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:25:06,536(1125) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property id with lazy=false  
[DEBUG] 2015-12-01 15:25:06,541(1130) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for id  
[DEBUG] 2015-12-01 15:25:06,546(1135) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property id  
[DEBUG] 2015-12-01 15:25:06,553(1142) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=name, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:25:06,554(1143) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property name with lazy=false  
[DEBUG] 2015-12-01 15:25:06,555(1144) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for name  
[DEBUG] 2015-12-01 15:25:06,556(1145) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property name  
[DEBUG] 2015-12-01 15:25:06,560(1149) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for id  
[DEBUG] 2015-12-01 15:25:06,562(1151) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for name  
[DEBUG] 2015-12-01 15:25:06,564(1153) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:25:06,567(1156) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:25:06,569(1158) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:25:06,570(1159) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:25:06,570(1159) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:25:06,571(1160) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:25:06,571(1160) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:25:06,572(1161) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[DEBUG] 2015-12-01 15:25:06,592(1181) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:117) –> [main] Automatic flush during beforeCompletion(): disabled  
[DEBUG] 2015-12-01 15:25:06,594(1183) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:123) –> [main] Automatic session close at end of transaction: disabled  
[DEBUG] 2015-12-01 15:25:06,594(1183) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:134) –> [main] JDBC batch size: 15  
[DEBUG] 2015-12-01 15:25:06,595(1184) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:140) –> [main] JDBC batch updates for versioned data: disabled  
[DEBUG] 2015-12-01 15:25:06,595(1184) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:150) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-12-01 15:25:06,596(1185) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:156) –> [main] Wrap result sets: disabled  
[DEBUG] 2015-12-01 15:25:06,597(1186) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:162) –> [main] JDBC3 getGeneratedKeys(): enabled  
[DEBUG] 2015-12-01 15:25:06,600(1189) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:174) –> [main] multi-tenancy strategy : NONE  
[DEBUG] 2015-12-01 15:25:06,601(1190) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:180) –> [main] Connection release mode: auto  
[INFO ] 2015-12-01 15:25:06,602(1191) org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:68) –> [main] HHH000399: Using default transaction strategy (direct JDBC transactions)  
[DEBUG] 2015-12-01 15:25:06,607(1196) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Using BatchFetchStyle : LEGACY  
[DEBUG] 2015-12-01 15:25:06,607(1196) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:221) –> [main] Maximum outer join fetch depth: 2  
[DEBUG] 2015-12-01 15:25:06,608(1197) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:227) –> [main] Default batch fetch size: 1  
[DEBUG] 2015-12-01 15:25:06,608(1197) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:233) –> [main] Generate SQL with comments: disabled  
[DEBUG] 2015-12-01 15:25:06,609(1198) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:239) –> [main] Order SQL updates by primary key: disabled  
[DEBUG] 2015-12-01 15:25:06,609(1198) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Order SQL inserts for batching: disabled  
[DEBUG] 2015-12-01 15:25:06,610(1199) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Default null ordering: none  
[DEBUG] 2015-12-01 15:25:06,611(1200) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:584) –> [main] Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-12-01 15:25:06,635(1224) org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) –> [main] HHH000397: Using ASTQueryTranslatorFactory  
[DEBUG] 2015-12-01 15:25:06,636(1225) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:263) –> [main] Query language substitutions: {}  
[DEBUG] 2015-12-01 15:25:06,636(1225) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:269) –> [main] JPA-QL strict compliance: disabled  
[DEBUG] 2015-12-01 15:25:06,637(1226) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:277) –> [main] Second-level cache: enabled  
[DEBUG] 2015-12-01 15:25:06,637(1226) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:283) –> [main] Query cache: disabled  
[DEBUG] 2015-12-01 15:25:06,638(1227) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:524) –> [main] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory  
[DEBUG] 2015-12-01 15:25:06,640(1229) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:534) –> [main] org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.  
[DEBUG] 2015-12-01 15:25:06,641(1230) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:306) –> [main] Optimize cache for minimal puts: disabled  
[DEBUG] 2015-12-01 15:25:06,642(1231) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:321) –> [main] Structured second-level cache entries: disabled  
[DEBUG] 2015-12-01 15:25:06,643(1232) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:331) –> [main] Second-level cache direct-reference entries: disabled  
[DEBUG] 2015-12-01 15:25:06,643(1232) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:339) –> [main] Statistics: disabled  
[DEBUG] 2015-12-01 15:25:06,644(1233) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:345) –> [main] Deleted entity synthetic identifier rollback: disabled  
[DEBUG] 2015-12-01 15:25:06,645(1234) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:372) –> [main] Default entity-mode: pojo  
[DEBUG] 2015-12-01 15:25:06,646(1235) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:378) –> [main] Named query checking : enabled  
[DEBUG] 2015-12-01 15:25:06,647(1236) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:384) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): enabled  
[DEBUG] 2015-12-01 15:25:06,648(1237) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:402) –> [main] Allow initialization of lazy state outside session : : disabled  
[DEBUG] 2015-12-01 15:25:06,649(1238) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:412) –> [main] JTA Track by Thread: enabled  
[DEBUG] 2015-12-01 15:25:06,663(1252) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Building session factory  
[DEBUG] 2015-12-01 15:25:06,680(1269) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:280) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-12-01 15:25:06,681(1270) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:281) –> [main] Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=D:\Java\jdk1.8.0_40\jre\bin, java.vm.version=25.40-b25, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\Java\workspace\demo-chained-transactionmanager, java.runtime.version=1.8.0_40-b26, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=thread, java.endorsed.dirs=D:\Java\jdk1.8.0_40\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\奇点之~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8.1, sun.jnu.encoding=GBK, java.library.path=D:\Java\jdk1.8.0_40\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/jdk1.8.0_40/bin/../jre/bin/server;D:/Java/jdk1.8.0_40/bin/../jre/bin;D:/Java/jdk1.8.0_40/bin/../jre/lib/amd64;D:\Java\jdk1.8.0_40/bin;D:\Java\jdk1.8.0_40/lib/dt.jar;D:\Java\jdk1.8.0_40/lib/tools.jar;D:\__ENV__\apache-maven-3.2.1/bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__ENV__\apache-tomcat-7.0.57\bin;D:\__ENV__\apache-tomcat-7.0.57\jre;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\TortoiseSVN\bin;D:\__ENV__\eclipse;;., hibernate.connection.datasource=org.apache.commons.dbcp.BasicDataSource@3724af13, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=6.3, user.home=C:\Users\奇点之光08老师, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=奇点之光08老师, java.class.path=D:\Java\workspace\demo-chained-transactionmanager\target\test-classes;D:\Java\workspace\demo-chained-transactionmanager\target\classes;D:\__ENV__\repo\ch\qos\logback\logback-core\0.9.28\logback-core-0.9.28.jar;D:\__ENV__\repo\ch\qos\logback\logback-classic\0.9.28\logback-classic-0.9.28.jar;D:\__ENV__\repo\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;D:\__ENV__\repo\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;D:\__ENV__\repo\org\slf4j\slf4j-api\1.7.7\slf4j-api-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-jdk14\1.7.7\slf4j-jdk14-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-log4j12\1.7.7\slf4j-log4j12-1.7.7.jar;D:\__ENV__\repo\mysql\mysql-connector-java\5.1.26\mysql-connector-java-5.1.26.jar;D:\__ENV__\repo\log4j\log4j\1.2.14\log4j-1.2.14.jar;D:\__ENV__\repo\org\springframework\data\spring-data-commons\1.8.0.RELEASE\spring-data-commons-1.8.0.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\slf4j\jcl-over-slf4j\1.7.7\jcl-over-slf4j-1.7.7.jar;D:\__ENV__\repo\org\springframework\spring-context\3.2.4.RELEASE\spring-context-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-aop\3.2.4.RELEASE\spring-aop-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-expression\3.2.4.RELEASE\spring-expression-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-oxm\3.2.4.RELEASE\spring-oxm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\__ENV__\repo\org\springframework\spring-web\3.2.4.RELEASE\spring-web-3.2.4.RELEASE.jar;D:\__ENV__\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\__ENV__\repo\org\springframework\spring-webmvc\3.2.4.RELEASE\spring-webmvc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-orm\3.2.4.RELEASE\spring-orm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-jdbc\3.2.4.RELEASE\spring-jdbc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-tx\3.2.4.RELEASE\spring-tx-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-test\3.2.4.RELEASE\spring-test-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\__ENV__\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\__ENV__\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\__ENV__\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\__ENV__\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-validator\4.2.0.Final\hibernate-validator-4.2.0.Final.jar;D:\__ENV__\repo\javax\validation\validation-api\1.0.0.GA\validation-api-1.0.0.GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-core\4.2.10.Final\hibernate-core-4.2.10.Final.jar;D:\__ENV__\repo\antlr\antlr\2.7.7\antlr-2.7.7.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.1.Final\jboss-transaction-api_1.1_spec-1.0.1.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpcore\4.3.1\httpcore-4.3.1.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpclient\4.3.1\httpclient-4.3.1.jar;D:\__ENV__\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\__ENV__\repo\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpmime\4.3.1\httpmime-4.3.1.jar;D:\__ENV__\repo\redis\clients\jedis\2.7.2\jedis-2.7.2.jar;D:\__ENV__\repo\org\apache\commons\commons-pool2\2.3\commons-pool2-2.3.jar;D:\__ENV__\repo\javax\persistence\persistence-api\1.0.2\persistence-api-1.0.2.jar;D:\__ENV__\repo\org\ansj\ansj_seg\0.9\ansj_seg-0.9.jar;D:\__ENV__\repo\org\ansj\tree_split\1.0.1\tree_split-1.0.1.jar;D:\__ENV__\repo\org\apache\commons-lang3\commons-lang3\3.1\commons-lang3-3.1.jar;D:\__ENV__\repo\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;D:\__ENV__\repo\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;D:\__ENV__\repo\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;D:\__ENV__\repo\commons-io\commons-io\2.4\commons-io-2.4.jar;D:\__ENV__\repo\commons-fileupload\commons-fileupload\1.2.2\commons-fileupload-1.2.2.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\__ENV__\repo\com\googlecode\xmemcached\xmemcached\1.4.1\xmemcached-1.4.1.jar;D:\__ENV__\repo\net\sf\json-lib\json-lib\2.4\json-lib-2.4-jdk15.jar;D:\__ENV__\repo\commons-beanutils\commons-beanutils\1.8.0\commons-beanutils-1.8.0.jar;D:\__ENV__\repo\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;D:\__ENV__\repo\net\sf\ezmorph\ezmorph\1.0.6\ezmorph-1.0.6.jar;D:\__ENV__\repo\org\mybatis\mybatis\3.1.1\mybatis-3.1.1.jar;D:\__ENV__\repo\org\mybatis\mybatis-spring\1.1.1\mybatis-spring-1.1.1.jar;D:\__ENV__\repo\junit\junit\4.11\junit-4.11.jar;D:\__ENV__\repo\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/358/1/.cp/;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/357/1/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.classLoader.application=sun.misc.Launcher$AppClassLoader@3b07d329, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=D:\Java\jdk1.8.0_40\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 61077 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -test com.it_sucre.service.HibernateServiceTest:test, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_40, java.ext.dirs=D:\Java\jdk1.8.0_40\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=D:\Java\jdk1.8.0_40\jre\lib\resources.jar;D:\Java\jdk1.8.0_40\jre\lib\rt.jar;D:\Java\jdk1.8.0_40\jre\lib\sunrsasign.jar;D:\Java\jdk1.8.0_40\jre\lib\jsse.jar;D:\Java\jdk1.8.0_40\jre\lib\jce.jar;D:\Java\jdk1.8.0_40\jre\lib\charsets.jar;D:\Java\jdk1.8.0_40\jre\lib\jfr.jar;D:\Java\jdk1.8.0_40\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}  
[DEBUG] 2015-12-01 15:25:06,987(1576) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[DEBUG] 2015-12-01 15:25:07,211(1800) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3604) –> [main] Static SQL for entity: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:25:07,213(1802) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3609) –> [main]  Version select: select id from test where id =?  
[DEBUG] 2015-12-01 15:25:07,218(1807) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3612) –> [main]  Snapshot select: select testentity_.id, testentity_.name as name2_0_ from test testentity_ where testentity_.id=?  
[DEBUG] 2015-12-01 15:25:07,222(1811) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3615) –> [main]  Insert 0: insert into test (name, id) values (?, ?)  
[DEBUG] 2015-12-01 15:25:07,223(1812) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3616) –> [main]  Update 0: update test set name=? where id=?  
[DEBUG] 2015-12-01 15:25:07,228(1817) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3617) –> [main]  Delete 0: delete from test where id=?  
[DEBUG] 2015-12-01 15:25:07,283(1872) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [NONE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:25:07,284(1873) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:25:07,286(1875) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:25:07,287(1876) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE_NOWAIT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:25:07,288(1877) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [FORCE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:25:07,289(1878) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? lock in share mode  
[DEBUG] 2015-12-01 15:25:07,289(1878) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_WRITE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:25:07,290(1879) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:25:07,291(1880) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:25:07,292(1881) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:25:07,305(1894) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:25:07,306(1895) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:25:07,401(1990) org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:62) –> [main] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1b28f282  
[DEBUG] 2015-12-01 15:25:07,402(1991) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:75) –> [main] Registering SessionFactory: 10c5e29e-3619-4b28-87f0-36131cc60ec5 (<unnamed>)  
[DEBUG] 2015-12-01 15:25:07,403(1992) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:82) –> [main] Not binding SessionFactory to JNDI, no JNDI name configured  
[DEBUG] 2015-12-01 15:25:07,404(1993) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:492) –> [main] Instantiated session factory  
[INFO ] 2015-12-01 15:25:07,420(2009) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:182) –> [main] HHH000228: Running hbm2ddl schema update  
[INFO ] 2015-12-01 15:25:07,421(2010) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:193) –> [main] HHH000102: Fetching database metadata  
[INFO ] 2015-12-01 15:25:07,428(2017) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:205) –> [main] HHH000396: Updating schema  
[DEBUG] 2015-12-01 15:25:07,429(2018) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:25:07,430(2019) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:25:07,431(2020) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:25:07,431(2020) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:25:07,432(2021) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:25:07,432(2021) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:25:07,433(2022) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:25:07,433(2022) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:25:07,434(2023) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:25:07,434(2023) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[INFO ] 2015-12-01 15:25:07,475(2064) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] HHH000261: Table found: Test.test  
[INFO ] 2015-12-01 15:25:07,476(2065) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:67) –> [main] HHH000037: Columns: [name, id]  
[INFO ] 2015-12-01 15:25:07,477(2066) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] HHH000108: Foreign keys: []  
[INFO ] 2015-12-01 15:25:07,478(2067) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:70) –> [main] HHH000126: Indexes: [primary]  
[DEBUG] 2015-12-01 15:25:07,479(2068) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-12-01 15:25:07,481(2070) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:242) –> [main] HHH000232: Schema update complete  
[DEBUG] 2015-12-01 15:25:07,487(2076) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1073) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-12-01 15:25:07,488(2077) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1096) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-12-01 15:25:07,503(2092) org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:110) –> [main] Statistics initialized [enabled=false]  
[DEBUG] 2015-12-01 15:25:07,548(2137) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@22e357dc  
[DEBUG] 2015-12-01 15:25:07,549(2138) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@22e357dc  
[DEBUG] 2015-12-01 15:25:07,550(2139) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@22e357dc  
[DEBUG] 2015-12-01 15:25:07,551(2140) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@48974e45  
[DEBUG] 2015-12-01 15:25:07,551(2140) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@57af006c  
[DEBUG] 2015-12-01 15:25:07,552(2141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@2fd1433e  
[DEBUG] 2015-12-01 15:25:07,552(2141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@37654521  
[DEBUG] 2015-12-01 15:25:07,553(2142) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@37654521  
[DEBUG] 2015-12-01 15:25:07,553(2142) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@37654521  
[DEBUG] 2015-12-01 15:25:07,554(2143) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@7ea9e1e2  
[DEBUG] 2015-12-01 15:25:07,555(2144) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@7ea9e1e2  
[DEBUG] 2015-12-01 15:25:07,555(2144) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7ea9e1e2  
[DEBUG] 2015-12-01 15:25:07,556(2145) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@14555e0a  
[DEBUG] 2015-12-01 15:25:07,556(2145) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@14555e0a  
[DEBUG] 2015-12-01 15:25:07,563(2152) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@14555e0a  
[DEBUG] 2015-12-01 15:25:07,571(2160) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@10d307f1  
[DEBUG] 2015-12-01 15:25:07,573(2162) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@10d307f1  
[DEBUG] 2015-12-01 15:25:07,575(2164) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@10d307f1  
[DEBUG] 2015-12-01 15:25:07,576(2165) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@1b1426f4  
[DEBUG] 2015-12-01 15:25:07,577(2166) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@1b1426f4  
[DEBUG] 2015-12-01 15:25:07,579(2168) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@1b1426f4  
[DEBUG] 2015-12-01 15:25:07,580(2169) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@2a54a73f  
[DEBUG] 2015-12-01 15:25:07,581(2170) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@2a54a73f  
[DEBUG] 2015-12-01 15:25:07,581(2170) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2a54a73f  
[DEBUG] 2015-12-01 15:25:07,586(2175) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@16610890  
[DEBUG] 2015-12-01 15:25:07,592(2181) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@16610890  
[DEBUG] 2015-12-01 15:25:07,594(2183) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@16610890  
[DEBUG] 2015-12-01 15:25:07,594(2183) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@28f2a10f  
[DEBUG] 2015-12-01 15:25:07,595(2184) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@28f2a10f  
[DEBUG] 2015-12-01 15:25:07,596(2185) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@20ccf40b  
[DEBUG] 2015-12-01 15:25:07,597(2186) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@20ccf40b  
[DEBUG] 2015-12-01 15:25:07,604(2193) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration string -> org.hibernate.type.StringType@6283d8b8  
[DEBUG] 2015-12-01 15:25:07,606(2195) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@6283d8b8  
[DEBUG] 2015-12-01 15:25:07,607(2196) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@a530d0a  
[DEBUG] 2015-12-01 15:25:07,608(2197) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4738a206  
[DEBUG] 2015-12-01 15:25:07,608(2197) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration url -> org.hibernate.type.UrlType@58695725  
[DEBUG] 2015-12-01 15:25:07,610(2199) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@58695725  
[DEBUG] 2015-12-01 15:25:07,610(2199) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration date -> org.hibernate.type.DateType@58d75e99  
[DEBUG] 2015-12-01 15:25:07,611(2200) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@58d75e99  
[DEBUG] 2015-12-01 15:25:07,614(2203) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration time -> org.hibernate.type.TimeType@e15b7e8  
[DEBUG] 2015-12-01 15:25:07,618(2207) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@e15b7e8  
[DEBUG] 2015-12-01 15:25:07,618(2207) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@485966cc  
[DEBUG] 2015-12-01 15:25:07,619(2208) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@485966cc  
[DEBUG] 2015-12-01 15:25:07,619(2208) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@485966cc  
[DEBUG] 2015-12-01 15:25:07,620(2209) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@57cf54e1  
[DEBUG] 2015-12-01 15:25:07,621(2210) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@3ee37e5a  
[DEBUG] 2015-12-01 15:25:07,622(2211) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3ee37e5a  
[DEBUG] 2015-12-01 15:25:07,623(2212) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3ee37e5a  
[DEBUG] 2015-12-01 15:25:07,627(2216) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@f0da945  
[DEBUG] 2015-12-01 15:25:07,646(2235) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@3e11f9e9  
[DEBUG] 2015-12-01 15:25:07,648(2237) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3e11f9e9  
[DEBUG] 2015-12-01 15:25:07,651(2240) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@4dbb42b7  
[DEBUG] 2015-12-01 15:25:07,652(2241) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4dbb42b7  
[DEBUG] 2015-12-01 15:25:07,653(2242) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@23c30a20  
[DEBUG] 2015-12-01 15:25:07,653(2242) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@23c30a20  
[DEBUG] 2015-12-01 15:25:07,654(2243) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration class -> org.hibernate.type.ClassType@49049a04  
[DEBUG] 2015-12-01 15:25:07,655(2244) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@49049a04  
[DEBUG] 2015-12-01 15:25:07,656(2245) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@26e356f0  
[DEBUG] 2015-12-01 15:25:07,657(2246) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@26e356f0  
[DEBUG] 2015-12-01 15:25:07,658(2247) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1151e434  
[DEBUG] 2015-12-01 15:25:07,660(2249) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@428640fa  
[DEBUG] 2015-12-01 15:25:07,660(2249) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@6bd61f98  
[DEBUG] 2015-12-01 15:25:07,661(2250) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@6bd61f98  
[DEBUG] 2015-12-01 15:25:07,661(2250) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@6bd61f98  
[DEBUG] 2015-12-01 15:25:07,662(2251) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@53aac487  
[DEBUG] 2015-12-01 15:25:07,662(2251) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@53aac487  
[DEBUG] 2015-12-01 15:25:07,663(2252) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@53aac487  
[DEBUG] 2015-12-01 15:25:07,666(2255) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration image -> org.hibernate.type.ImageType@2d52216b  
[DEBUG] 2015-12-01 15:25:07,669(2258) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@5a45133e  
[DEBUG] 2015-12-01 15:25:07,676(2265) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@5a45133e  
[DEBUG] 2015-12-01 15:25:07,677(2266) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@5a45133e  
[DEBUG] 2015-12-01 15:25:07,677(2266) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5d534f5d  
[DEBUG] 2015-12-01 15:25:07,678(2267) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5d534f5d  
[DEBUG] 2015-12-01 15:25:07,678(2267) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5d534f5d  
[DEBUG] 2015-12-01 15:25:07,680(2269) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration text -> org.hibernate.type.TextType@6221a451  
[DEBUG] 2015-12-01 15:25:07,680(2269) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ntext -> org.hibernate.type.NTextType@5824a83d  
[DEBUG] 2015-12-01 15:25:07,681(2270) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@1a942c18  
[DEBUG] 2015-12-01 15:25:07,681(2270) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1a942c18  
[DEBUG] 2015-12-01 15:25:07,683(2272) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@63376bed  
[DEBUG] 2015-12-01 15:25:07,683(2272) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@76a4ebf2  
[DEBUG] 2015-12-01 15:25:07,684(2273) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@76a4ebf2  
[DEBUG] 2015-12-01 15:25:07,685(2274) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nclob -> org.hibernate.type.NClobType@2af004b  
[DEBUG] 2015-12-01 15:25:07,685(2274) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2af004b  
[DEBUG] 2015-12-01 15:25:07,686(2275) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@563f38c4  
[DEBUG] 2015-12-01 15:25:07,686(2275) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3e27ba32  
[DEBUG] 2015-12-01 15:25:07,687(2276) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@58cbafc2  
[DEBUG] 2015-12-01 15:25:07,688(2277) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@4be29ed9  
[DEBUG] 2015-12-01 15:25:07,688(2277) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4be29ed9  
[DEBUG] 2015-12-01 15:25:07,689(2278) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5dda6f9  
[DEBUG] 2015-12-01 15:25:07,690(2279) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@54afd745  
[DEBUG] 2015-12-01 15:25:07,690(2279) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@fff25f1  
[DEBUG] 2015-12-01 15:25:07,691(2280) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@263f04ca  
[DEBUG] 2015-12-01 15:25:07,693(2282) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5a021cb9  
[DEBUG] 2015-12-01 15:25:07,694(2283) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@f31c0c6  
[DEBUG] 2015-12-01 15:25:07,695(2284) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4a9419d7  
[DEBUG] 2015-12-01 15:25:07,696(2285) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2e8ab815  
[DEBUG] 2015-12-01 15:25:07,697(2286) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-12-01 15:25:07,700(2289) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-12-01 15:25:07,701(2290) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:25:07,703(2292) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:25:07,703(2292) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-12-01 15:25:07,704(2293) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]  
[DEBUG] 2015-12-01 15:25:07,705(2294) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-12-01 15:25:07,706(2295) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-12-01 15:25:07,707(2296) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-12-01 15:25:07,720(2309) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-12-01 15:25:07,721(2310) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-12-01 15:25:07,722(2311) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-12-01 15:25:07,722(2311) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-12-01 15:25:07,723(2312) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-12-01 15:25:07,723(2312) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]  
[DEBUG] 2015-12-01 15:25:07,755(2344) org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) –> [main] Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].  
[DEBUG] 2015-12-01 15:25:07,759(2348) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1781) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-12-01 15:25:07,810(2399) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:121) –> [main] Database ->
       name : MySQL
    version : 5.6.22
      major : 5
      minor : 6  
[DEBUG] 2015-12-01 15:25:07,811(2400) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:127) –> [main] Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[DEBUG] 2015-12-01 15:25:07,811(2400) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:133) –> [main] JDBC version : 4.0  
[INFO ] 2015-12-01 15:25:07,817(2406) org.hibernate.dialect.Dialect.<init>(Dialect.java:130) –> [main] HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-12-01 15:25:07,819(2408) org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:120) –> [main] HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException  
[DEBUG] 2015-12-01 15:25:07,826(2415) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:25:07,826(2415) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:25:07,827(2416) org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:534) –> [main] Binding entity from annotated class: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:25:07,828(2417) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}  
[DEBUG] 2015-12-01 15:25:07,829(2418) org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1118) –> [main] No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED  
[DEBUG] 2015-12-01 15:25:07,832(2421) org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:394) –> [main] Import with entity name TestEntity  
[DEBUG] 2015-12-01 15:25:07,834(2423) org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:564) –> [main] Bind entity com.it_sucre.entity.TestEntity on table test  
[DEBUG] 2015-12-01 15:25:07,835(2424) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=id, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:25:07,836(2425) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property id with lazy=false  
[DEBUG] 2015-12-01 15:25:07,836(2425) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for id  
[DEBUG] 2015-12-01 15:25:07,837(2426) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property id  
[DEBUG] 2015-12-01 15:25:07,838(2427) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=name, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:25:07,839(2428) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property name with lazy=false  
[DEBUG] 2015-12-01 15:25:07,839(2428) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for name  
[DEBUG] 2015-12-01 15:25:07,841(2430) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property name  
[DEBUG] 2015-12-01 15:25:07,842(2431) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for id  
[DEBUG] 2015-12-01 15:25:07,843(2432) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for name  
[DEBUG] 2015-12-01 15:25:07,843(2432) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:25:07,844(2433) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:25:07,845(2434) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:25:07,846(2435) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:25:07,846(2435) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:25:07,847(2436) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:25:07,847(2436) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:25:07,848(2437) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[DEBUG] 2015-12-01 15:25:07,850(2439) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:117) –> [main] Automatic flush during beforeCompletion(): disabled  
[DEBUG] 2015-12-01 15:25:07,851(2440) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:123) –> [main] Automatic session close at end of transaction: disabled  
[DEBUG] 2015-12-01 15:25:07,851(2440) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:134) –> [main] JDBC batch size: 15  
[DEBUG] 2015-12-01 15:25:07,852(2441) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:140) –> [main] JDBC batch updates for versioned data: disabled  
[DEBUG] 2015-12-01 15:25:07,853(2442) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:150) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-12-01 15:25:07,853(2442) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:156) –> [main] Wrap result sets: disabled  
[DEBUG] 2015-12-01 15:25:07,854(2443) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:162) –> [main] JDBC3 getGeneratedKeys(): enabled  
[DEBUG] 2015-12-01 15:25:07,854(2443) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:174) –> [main] multi-tenancy strategy : NONE  
[DEBUG] 2015-12-01 15:25:07,855(2444) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:180) –> [main] Connection release mode: auto  
[INFO ] 2015-12-01 15:25:07,856(2445) org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:68) –> [main] HHH000399: Using default transaction strategy (direct JDBC transactions)  
[DEBUG] 2015-12-01 15:25:07,857(2446) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Using BatchFetchStyle : LEGACY  
[DEBUG] 2015-12-01 15:25:07,857(2446) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:221) –> [main] Maximum outer join fetch depth: 2  
[DEBUG] 2015-12-01 15:25:07,858(2447) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:227) –> [main] Default batch fetch size: 1  
[DEBUG] 2015-12-01 15:25:07,863(2452) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:233) –> [main] Generate SQL with comments: disabled  
[DEBUG] 2015-12-01 15:25:07,864(2453) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:239) –> [main] Order SQL updates by primary key: disabled  
[DEBUG] 2015-12-01 15:25:07,865(2454) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Order SQL inserts for batching: disabled  
[DEBUG] 2015-12-01 15:25:07,866(2455) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Default null ordering: none  
[DEBUG] 2015-12-01 15:25:07,867(2456) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:584) –> [main] Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-12-01 15:25:07,867(2456) org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) –> [main] HHH000397: Using ASTQueryTranslatorFactory  
[DEBUG] 2015-12-01 15:25:07,868(2457) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:263) –> [main] Query language substitutions: {}  
[DEBUG] 2015-12-01 15:25:07,869(2458) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:269) –> [main] JPA-QL strict compliance: disabled  
[DEBUG] 2015-12-01 15:25:07,869(2458) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:277) –> [main] Second-level cache: enabled  
[DEBUG] 2015-12-01 15:25:07,870(2459) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:283) –> [main] Query cache: disabled  
[DEBUG] 2015-12-01 15:25:07,870(2459) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:524) –> [main] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory  
[DEBUG] 2015-12-01 15:25:07,871(2460) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:534) –> [main] org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.  
[DEBUG] 2015-12-01 15:25:07,872(2461) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:306) –> [main] Optimize cache for minimal puts: disabled  
[DEBUG] 2015-12-01 15:25:07,873(2462) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:321) –> [main] Structured second-level cache entries: disabled  
[DEBUG] 2015-12-01 15:25:07,884(2473) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:331) –> [main] Second-level cache direct-reference entries: disabled  
[DEBUG] 2015-12-01 15:25:07,885(2474) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:339) –> [main] Statistics: disabled  
[DEBUG] 2015-12-01 15:25:07,886(2475) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:345) –> [main] Deleted entity synthetic identifier rollback: disabled  
[DEBUG] 2015-12-01 15:25:07,887(2476) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:372) –> [main] Default entity-mode: pojo  
[DEBUG] 2015-12-01 15:25:07,888(2477) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:378) –> [main] Named query checking : enabled  
[DEBUG] 2015-12-01 15:25:07,889(2478) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:384) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): enabled  
[DEBUG] 2015-12-01 15:25:07,891(2480) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:402) –> [main] Allow initialization of lazy state outside session : : disabled  
[DEBUG] 2015-12-01 15:25:07,892(2481) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:412) –> [main] JTA Track by Thread: enabled  
[DEBUG] 2015-12-01 15:25:07,894(2483) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Building session factory  
[DEBUG] 2015-12-01 15:25:07,896(2485) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:280) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-12-01 15:25:07,897(2486) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:281) –> [main] Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=D:\Java\jdk1.8.0_40\jre\bin, java.vm.version=25.40-b25, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\Java\workspace\demo-chained-transactionmanager, java.runtime.version=1.8.0_40-b26, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=thread, java.endorsed.dirs=D:\Java\jdk1.8.0_40\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\奇点之~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8.1, sun.jnu.encoding=GBK, java.library.path=D:\Java\jdk1.8.0_40\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/jdk1.8.0_40/bin/../jre/bin/server;D:/Java/jdk1.8.0_40/bin/../jre/bin;D:/Java/jdk1.8.0_40/bin/../jre/lib/amd64;D:\Java\jdk1.8.0_40/bin;D:\Java\jdk1.8.0_40/lib/dt.jar;D:\Java\jdk1.8.0_40/lib/tools.jar;D:\__ENV__\apache-maven-3.2.1/bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__ENV__\apache-tomcat-7.0.57\bin;D:\__ENV__\apache-tomcat-7.0.57\jre;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\TortoiseSVN\bin;D:\__ENV__\eclipse;;., hibernate.connection.datasource=org.apache.commons.dbcp.BasicDataSource@5528a42c, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=6.3, user.home=C:\Users\奇点之光08老师, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=奇点之光08老师, java.class.path=D:\Java\workspace\demo-chained-transactionmanager\target\test-classes;D:\Java\workspace\demo-chained-transactionmanager\target\classes;D:\__ENV__\repo\ch\qos\logback\logback-core\0.9.28\logback-core-0.9.28.jar;D:\__ENV__\repo\ch\qos\logback\logback-classic\0.9.28\logback-classic-0.9.28.jar;D:\__ENV__\repo\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;D:\__ENV__\repo\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;D:\__ENV__\repo\org\slf4j\slf4j-api\1.7.7\slf4j-api-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-jdk14\1.7.7\slf4j-jdk14-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-log4j12\1.7.7\slf4j-log4j12-1.7.7.jar;D:\__ENV__\repo\mysql\mysql-connector-java\5.1.26\mysql-connector-java-5.1.26.jar;D:\__ENV__\repo\log4j\log4j\1.2.14\log4j-1.2.14.jar;D:\__ENV__\repo\org\springframework\data\spring-data-commons\1.8.0.RELEASE\spring-data-commons-1.8.0.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\slf4j\jcl-over-slf4j\1.7.7\jcl-over-slf4j-1.7.7.jar;D:\__ENV__\repo\org\springframework\spring-context\3.2.4.RELEASE\spring-context-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-aop\3.2.4.RELEASE\spring-aop-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-expression\3.2.4.RELEASE\spring-expression-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-oxm\3.2.4.RELEASE\spring-oxm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\__ENV__\repo\org\springframework\spring-web\3.2.4.RELEASE\spring-web-3.2.4.RELEASE.jar;D:\__ENV__\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\__ENV__\repo\org\springframework\spring-webmvc\3.2.4.RELEASE\spring-webmvc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-orm\3.2.4.RELEASE\spring-orm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-jdbc\3.2.4.RELEASE\spring-jdbc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-tx\3.2.4.RELEASE\spring-tx-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-test\3.2.4.RELEASE\spring-test-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\__ENV__\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\__ENV__\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\__ENV__\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\__ENV__\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-validator\4.2.0.Final\hibernate-validator-4.2.0.Final.jar;D:\__ENV__\repo\javax\validation\validation-api\1.0.0.GA\validation-api-1.0.0.GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-core\4.2.10.Final\hibernate-core-4.2.10.Final.jar;D:\__ENV__\repo\antlr\antlr\2.7.7\antlr-2.7.7.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.1.Final\jboss-transaction-api_1.1_spec-1.0.1.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpcore\4.3.1\httpcore-4.3.1.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpclient\4.3.1\httpclient-4.3.1.jar;D:\__ENV__\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\__ENV__\repo\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpmime\4.3.1\httpmime-4.3.1.jar;D:\__ENV__\repo\redis\clients\jedis\2.7.2\jedis-2.7.2.jar;D:\__ENV__\repo\org\apache\commons\commons-pool2\2.3\commons-pool2-2.3.jar;D:\__ENV__\repo\javax\persistence\persistence-api\1.0.2\persistence-api-1.0.2.jar;D:\__ENV__\repo\org\ansj\ansj_seg\0.9\ansj_seg-0.9.jar;D:\__ENV__\repo\org\ansj\tree_split\1.0.1\tree_split-1.0.1.jar;D:\__ENV__\repo\org\apache\commons-lang3\commons-lang3\3.1\commons-lang3-3.1.jar;D:\__ENV__\repo\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;D:\__ENV__\repo\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;D:\__ENV__\repo\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;D:\__ENV__\repo\commons-io\commons-io\2.4\commons-io-2.4.jar;D:\__ENV__\repo\commons-fileupload\commons-fileupload\1.2.2\commons-fileupload-1.2.2.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\__ENV__\repo\com\googlecode\xmemcached\xmemcached\1.4.1\xmemcached-1.4.1.jar;D:\__ENV__\repo\net\sf\json-lib\json-lib\2.4\json-lib-2.4-jdk15.jar;D:\__ENV__\repo\commons-beanutils\commons-beanutils\1.8.0\commons-beanutils-1.8.0.jar;D:\__ENV__\repo\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;D:\__ENV__\repo\net\sf\ezmorph\ezmorph\1.0.6\ezmorph-1.0.6.jar;D:\__ENV__\repo\org\mybatis\mybatis\3.1.1\mybatis-3.1.1.jar;D:\__ENV__\repo\org\mybatis\mybatis-spring\1.1.1\mybatis-spring-1.1.1.jar;D:\__ENV__\repo\junit\junit\4.11\junit-4.11.jar;D:\__ENV__\repo\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/358/1/.cp/;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/357/1/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.classLoader.application=sun.misc.Launcher$AppClassLoader@3b07d329, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=D:\Java\jdk1.8.0_40\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 61077 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -test com.it_sucre.service.HibernateServiceTest:test, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_40, java.ext.dirs=D:\Java\jdk1.8.0_40\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=D:\Java\jdk1.8.0_40\jre\lib\resources.jar;D:\Java\jdk1.8.0_40\jre\lib\rt.jar;D:\Java\jdk1.8.0_40\jre\lib\sunrsasign.jar;D:\Java\jdk1.8.0_40\jre\lib\jsse.jar;D:\Java\jdk1.8.0_40\jre\lib\jce.jar;D:\Java\jdk1.8.0_40\jre\lib\charsets.jar;D:\Java\jdk1.8.0_40\jre\lib\jfr.jar;D:\Java\jdk1.8.0_40\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}  
[DEBUG] 2015-12-01 15:25:07,908(2497) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[DEBUG] 2015-12-01 15:25:07,915(2504) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3604) –> [main] Static SQL for entity: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:25:07,918(2507) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3609) –> [main]  Version select: select id from test where id =?  
[DEBUG] 2015-12-01 15:25:07,919(2508) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3612) –> [main]  Snapshot select: select testentity_.id, testentity_.name as name2_0_ from test testentity_ where testentity_.id=?  
[DEBUG] 2015-12-01 15:25:07,921(2510) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3615) –> [main]  Insert 0: insert into test (name, id) values (?, ?)  
[DEBUG] 2015-12-01 15:25:07,922(2511) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3616) –> [main]  Update 0: update test set name=? where id=?  
[DEBUG] 2015-12-01 15:25:07,923(2512) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3617) –> [main]  Delete 0: delete from test where id=?  
[DEBUG] 2015-12-01 15:25:07,924(2513) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [NONE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:25:07,925(2514) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:25:07,926(2515) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:25:07,927(2516) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE_NOWAIT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:25:07,930(2519) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [FORCE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:25:07,931(2520) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? lock in share mode  
[DEBUG] 2015-12-01 15:25:07,932(2521) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_WRITE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:25:07,933(2522) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:25:07,935(2524) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:25:07,935(2524) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:25:07,936(2525) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:25:07,937(2526) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:25:07,938(2527) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:75) –> [main] Registering SessionFactory: 5f51438e-bea1-4711-b343-389f5762b9cf (<unnamed>)  
[DEBUG] 2015-12-01 15:25:07,938(2527) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:82) –> [main] Not binding SessionFactory to JNDI, no JNDI name configured  
[DEBUG] 2015-12-01 15:25:07,939(2528) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:492) –> [main] Instantiated session factory  
[INFO ] 2015-12-01 15:25:07,939(2528) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:182) –> [main] HHH000228: Running hbm2ddl schema update  
[INFO ] 2015-12-01 15:25:07,940(2529) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:193) –> [main] HHH000102: Fetching database metadata  
[INFO ] 2015-12-01 15:25:07,940(2529) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:205) –> [main] HHH000396: Updating schema  
[DEBUG] 2015-12-01 15:25:07,941(2530) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:25:07,941(2530) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:25:07,942(2531) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:25:07,943(2532) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:25:07,944(2533) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:25:07,945(2534) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:25:07,948(2537) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:25:07,948(2537) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:25:07,949(2538) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:25:07,949(2538) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[INFO ] 2015-12-01 15:25:07,963(2552) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] HHH000261: Table found: Test.test  
[INFO ] 2015-12-01 15:25:07,964(2553) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:67) –> [main] HHH000037: Columns: [name, id]  
[INFO ] 2015-12-01 15:25:07,964(2553) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] HHH000108: Foreign keys: []  
[INFO ] 2015-12-01 15:25:07,965(2554) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:70) –> [main] HHH000126: Indexes: [primary]  
[DEBUG] 2015-12-01 15:25:07,966(2555) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-12-01 15:25:07,966(2555) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:242) –> [main] HHH000232: Schema update complete  
[DEBUG] 2015-12-01 15:25:07,967(2556) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1073) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-12-01 15:25:07,968(2557) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1096) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-12-01 15:25:07,968(2557) org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:110) –> [main] Statistics initialized [enabled=false]  
[DEBUG] 2015-12-01 15:25:08,529(3118) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:212) –> [main] Obtaining JDBC connection  
[DEBUG] 2015-12-01 15:25:08,530(3119) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:218) –> [main] Obtained JDBC connection  
[DEBUG] 2015-12-01 15:25:08,541(3130) org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) –> [main] begin  
[DEBUG] 2015-12-01 15:25:08,542(3131) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) –> [main] initial autocommit status: true  
[DEBUG] 2015-12-01 15:25:08,543(3132) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) –> [main] disabling autocommit  
[DEBUG] 2015-12-01 15:25:08,655(3244) org.hibernate.engine.transaction.spi.AbstractTransactionImpl.rollback(AbstractTransactionImpl.java:203) –> [main] rolling back  
[DEBUG] 2015-12-01 15:25:08,656(3245) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doRollback(JdbcTransaction.java:164) –> [main] rolled JDBC Connection  
[DEBUG] 2015-12-01 15:25:08,657(3246) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) –> [main] re-enabling autocommit  
[DEBUG] 2015-12-01 15:25:08,679(3268) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:232) –> [main] Releasing JDBC connection  
[DEBUG] 2015-12-01 15:25:08,680(3269) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:250) –> [main] Released JDBC connection  
[DEBUG] 2015-12-01 15:25:08,729(3318) org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1374) –> [Thread-2] HHH000031: Closing  
[DEBUG] 2015-12-01 15:25:08,740(3329) org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1374) –> [Thread-2] HHH000031: Closing  
[DEBUG] 2015-12-01 15:27:37,061(0) org.hibernate.cfg.Configuration.<clinit>(Configuration.java:184) –> [main] Logging Provider: org.jboss.logging.Log4jLoggerProvider  
[DEBUG] 2015-12-01 15:27:37,103(42) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@b62d79  
[DEBUG] 2015-12-01 15:27:37,104(43) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@b62d79  
[DEBUG] 2015-12-01 15:27:37,106(45) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@b62d79  
[DEBUG] 2015-12-01 15:27:37,110(49) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@34f5090e  
[DEBUG] 2015-12-01 15:27:37,114(53) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@22e357dc  
[DEBUG] 2015-12-01 15:27:37,117(56) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@15bbf42f  
[DEBUG] 2015-12-01 15:27:37,123(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@223aa2f7  
[DEBUG] 2015-12-01 15:27:37,124(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@223aa2f7  
[DEBUG] 2015-12-01 15:27:37,125(64) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@223aa2f7  
[DEBUG] 2015-12-01 15:27:37,128(67) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@2fd1433e  
[DEBUG] 2015-12-01 15:27:37,130(69) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@2fd1433e  
[DEBUG] 2015-12-01 15:27:37,131(70) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2fd1433e  
[DEBUG] 2015-12-01 15:27:37,137(76) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@33990a0c  
[DEBUG] 2015-12-01 15:27:37,138(77) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@33990a0c  
[DEBUG] 2015-12-01 15:27:37,139(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@33990a0c  
[DEBUG] 2015-12-01 15:27:37,143(82) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@10feca44  
[DEBUG] 2015-12-01 15:27:37,144(83) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@10feca44  
[DEBUG] 2015-12-01 15:27:37,145(84) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@10feca44  
[DEBUG] 2015-12-01 15:27:37,149(88) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@759d26fb  
[DEBUG] 2015-12-01 15:27:37,150(89) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@759d26fb  
[DEBUG] 2015-12-01 15:27:37,151(90) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@759d26fb  
[DEBUG] 2015-12-01 15:27:37,155(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@483f6d77  
[DEBUG] 2015-12-01 15:27:37,156(95) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@483f6d77  
[DEBUG] 2015-12-01 15:27:37,156(95) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@483f6d77  
[DEBUG] 2015-12-01 15:27:37,159(98) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@78123e82  
[DEBUG] 2015-12-01 15:27:37,161(100) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@78123e82  
[DEBUG] 2015-12-01 15:27:37,161(100) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@78123e82  
[DEBUG] 2015-12-01 15:27:37,166(105) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@bd4dc25  
[DEBUG] 2015-12-01 15:27:37,168(107) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@bd4dc25  
[DEBUG] 2015-12-01 15:27:37,171(110) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4d465b11  
[DEBUG] 2015-12-01 15:27:37,172(111) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4d465b11  
[DEBUG] 2015-12-01 15:27:37,174(113) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration string -> org.hibernate.type.StringType@73e22a3d  
[DEBUG] 2015-12-01 15:27:37,176(115) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@73e22a3d  
[DEBUG] 2015-12-01 15:27:37,179(118) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@56cdfb3b  
[DEBUG] 2015-12-01 15:27:37,181(120) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7205765b  
[DEBUG] 2015-12-01 15:27:37,185(124) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration url -> org.hibernate.type.UrlType@611889f4  
[DEBUG] 2015-12-01 15:27:37,188(127) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@611889f4  
[DEBUG] 2015-12-01 15:27:37,195(134) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration date -> org.hibernate.type.DateType@66d3eec0  
[DEBUG] 2015-12-01 15:27:37,197(136) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@66d3eec0  
[DEBUG] 2015-12-01 15:27:37,203(142) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration time -> org.hibernate.type.TimeType@5d7148e2  
[DEBUG] 2015-12-01 15:27:37,206(145) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5d7148e2  
[DEBUG] 2015-12-01 15:27:37,211(150) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@741a8937  
[DEBUG] 2015-12-01 15:27:37,212(151) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@741a8937  
[DEBUG] 2015-12-01 15:27:37,213(152) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@741a8937  
[DEBUG] 2015-12-01 15:27:37,218(157) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@209da20d  
[DEBUG] 2015-12-01 15:27:37,222(161) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@43dac38f  
[DEBUG] 2015-12-01 15:27:37,223(162) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@43dac38f  
[DEBUG] 2015-12-01 15:27:37,224(163) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@43dac38f  
[DEBUG] 2015-12-01 15:27:37,227(166) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@54bff557  
[DEBUG] 2015-12-01 15:27:37,231(170) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@37d4349f  
[DEBUG] 2015-12-01 15:27:37,232(171) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@37d4349f  
[DEBUG] 2015-12-01 15:27:37,234(173) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@3c7f66c4  
[DEBUG] 2015-12-01 15:27:37,234(173) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3c7f66c4  
[DEBUG] 2015-12-01 15:27:37,238(177) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@316bcf94  
[DEBUG] 2015-12-01 15:27:37,239(178) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@316bcf94  
[DEBUG] 2015-12-01 15:27:37,242(181) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration class -> org.hibernate.type.ClassType@32502377  
[DEBUG] 2015-12-01 15:27:37,243(182) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@32502377  
[DEBUG] 2015-12-01 15:27:37,247(186) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3cebbb30  
[DEBUG] 2015-12-01 15:27:37,248(187) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3cebbb30  
[DEBUG] 2015-12-01 15:27:37,250(189) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@49049a04  
[DEBUG] 2015-12-01 15:27:37,251(190) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@47e2e487  
[DEBUG] 2015-12-01 15:27:37,254(193) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@47d9a273  
[DEBUG] 2015-12-01 15:27:37,255(194) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@47d9a273  
[DEBUG] 2015-12-01 15:27:37,256(195) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@47d9a273  
[DEBUG] 2015-12-01 15:27:37,263(202) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4b0d79fc  
[DEBUG] 2015-12-01 15:27:37,264(203) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4b0d79fc  
[DEBUG] 2015-12-01 15:27:37,266(205) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4b0d79fc  
[DEBUG] 2015-12-01 15:27:37,268(207) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration image -> org.hibernate.type.ImageType@6bd61f98  
[DEBUG] 2015-12-01 15:27:37,272(211) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@72e5a8e  
[DEBUG] 2015-12-01 15:27:37,273(212) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@72e5a8e  
[DEBUG] 2015-12-01 15:27:37,274(213) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@72e5a8e  
[DEBUG] 2015-12-01 15:27:37,279(218) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@73e9cf30  
[DEBUG] 2015-12-01 15:27:37,280(219) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@73e9cf30  
[DEBUG] 2015-12-01 15:27:37,281(220) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@73e9cf30  
[DEBUG] 2015-12-01 15:27:37,297(236) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration text -> org.hibernate.type.TextType@5a45133e  
[DEBUG] 2015-12-01 15:27:37,301(240) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ntext -> org.hibernate.type.NTextType@5e600dd5  
[DEBUG] 2015-12-01 15:27:37,328(267) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@f09733f  
[DEBUG] 2015-12-01 15:27:37,329(268) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@f09733f  
[DEBUG] 2015-12-01 15:27:37,332(271) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@45099dd3  
[DEBUG] 2015-12-01 15:27:37,347(286) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@298a5e20  
[DEBUG] 2015-12-01 15:27:37,349(288) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@298a5e20  
[DEBUG] 2015-12-01 15:27:37,361(300) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nclob -> org.hibernate.type.NClobType@6e9175d8  
[DEBUG] 2015-12-01 15:27:37,362(301) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6e9175d8  
[DEBUG] 2015-12-01 15:27:37,365(304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@8f2ef19  
[DEBUG] 2015-12-01 15:27:37,367(306) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@69e153c5  
[DEBUG] 2015-12-01 15:27:37,371(310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@27406a17  
[DEBUG] 2015-12-01 15:27:37,381(320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@235ecd9f  
[DEBUG] 2015-12-01 15:27:37,382(321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@235ecd9f  
[DEBUG] 2015-12-01 15:27:37,384(323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@74d1dc36  
[DEBUG] 2015-12-01 15:27:37,386(325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@74e28667  
[DEBUG] 2015-12-01 15:27:37,387(326) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@663c9e7a  
[DEBUG] 2015-12-01 15:27:37,389(328) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@795509d9  
[DEBUG] 2015-12-01 15:27:37,390(329) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5149d738  
[DEBUG] 2015-12-01 15:27:37,391(330) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3a7442c7  
[DEBUG] 2015-12-01 15:27:37,392(331) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@548d708a  
[DEBUG] 2015-12-01 15:27:37,393(332) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@53fb3dab  
[INFO ] 2015-12-01 15:27:37,451(390) org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66) –> [main] HCANN000001: Hibernate Commons Annotations {4.0.4.Final}  
[INFO ] 2015-12-01 15:27:37,467(406) org.hibernate.Version.logVersion(Version.java:41) –> [main] HHH000412: Hibernate Core {4.2.10.Final}  
[INFO ] 2015-12-01 15:27:37,474(413) org.hibernate.cfg.Environment.<clinit>(Environment.java:238) –> [main] HHH000206: hibernate.properties not found  
[INFO ] 2015-12-01 15:27:37,479(418) org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:345) –> [main] HHH000021: Bytecode provider name : javassist  
[DEBUG] 2015-12-01 15:27:37,507(446) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-12-01 15:27:37,510(449) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-12-01 15:27:37,513(452) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:27:37,514(453) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:27:37,516(455) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-12-01 15:27:37,520(459) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]  
[DEBUG] 2015-12-01 15:27:37,523(462) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-12-01 15:27:37,525(464) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-12-01 15:27:37,534(473) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-12-01 15:27:37,537(476) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-12-01 15:27:37,539(478) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-12-01 15:27:37,541(480) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-12-01 15:27:37,545(484) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-12-01 15:27:37,547(486) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-12-01 15:27:37,549(488) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]  
[DEBUG] 2015-12-01 15:27:37,600(539) org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) –> [main] Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].  
[DEBUG] 2015-12-01 15:27:37,653(592) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1781) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-12-01 15:27:38,144(1083) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:121) –> [main] Database ->
       name : MySQL
    version : 5.6.22
      major : 5
      minor : 6  
[DEBUG] 2015-12-01 15:27:38,145(1084) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:127) –> [main] Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[DEBUG] 2015-12-01 15:27:38,146(1085) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:133) –> [main] JDBC version : 4.0  
[INFO ] 2015-12-01 15:27:38,180(1119) org.hibernate.dialect.Dialect.<init>(Dialect.java:130) –> [main] HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-12-01 15:27:38,198(1137) org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:120) –> [main] HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException  
[DEBUG] 2015-12-01 15:27:38,245(1184) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:27:38,246(1185) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:27:38,257(1196) org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:534) –> [main] Binding entity from annotated class: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:27:38,339(1278) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}  
[DEBUG] 2015-12-01 15:27:38,347(1286) org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1118) –> [main] No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED  
[DEBUG] 2015-12-01 15:27:38,378(1317) org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:394) –> [main] Import with entity name TestEntity  
[DEBUG] 2015-12-01 15:27:38,402(1341) org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:564) –> [main] Bind entity com.it_sucre.entity.TestEntity on table test  
[DEBUG] 2015-12-01 15:27:38,458(1397) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=id, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:27:38,469(1408) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property id with lazy=false  
[DEBUG] 2015-12-01 15:27:38,481(1420) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for id  
[DEBUG] 2015-12-01 15:27:38,485(1424) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property id  
[DEBUG] 2015-12-01 15:27:38,497(1436) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=name, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:27:38,499(1438) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property name with lazy=false  
[DEBUG] 2015-12-01 15:27:38,500(1439) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for name  
[DEBUG] 2015-12-01 15:27:38,502(1441) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property name  
[DEBUG] 2015-12-01 15:27:38,510(1449) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for id  
[DEBUG] 2015-12-01 15:27:38,512(1451) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for name  
[DEBUG] 2015-12-01 15:27:38,514(1453) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:27:38,517(1456) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:27:38,518(1457) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:27:38,519(1458) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:27:38,519(1458) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:27:38,520(1459) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:27:38,521(1460) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:27:38,522(1461) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[DEBUG] 2015-12-01 15:27:38,537(1476) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:117) –> [main] Automatic flush during beforeCompletion(): disabled  
[DEBUG] 2015-12-01 15:27:38,538(1477) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:123) –> [main] Automatic session close at end of transaction: disabled  
[DEBUG] 2015-12-01 15:27:38,539(1478) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:134) –> [main] JDBC batch size: 15  
[DEBUG] 2015-12-01 15:27:38,540(1479) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:140) –> [main] JDBC batch updates for versioned data: disabled  
[DEBUG] 2015-12-01 15:27:38,541(1480) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:150) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-12-01 15:27:38,543(1482) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:156) –> [main] Wrap result sets: disabled  
[DEBUG] 2015-12-01 15:27:38,544(1483) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:162) –> [main] JDBC3 getGeneratedKeys(): enabled  
[DEBUG] 2015-12-01 15:27:38,545(1484) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:174) –> [main] multi-tenancy strategy : NONE  
[DEBUG] 2015-12-01 15:27:38,545(1484) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:180) –> [main] Connection release mode: auto  
[INFO ] 2015-12-01 15:27:38,546(1485) org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:68) –> [main] HHH000399: Using default transaction strategy (direct JDBC transactions)  
[DEBUG] 2015-12-01 15:27:38,550(1489) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Using BatchFetchStyle : LEGACY  
[DEBUG] 2015-12-01 15:27:38,551(1490) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:221) –> [main] Maximum outer join fetch depth: 2  
[DEBUG] 2015-12-01 15:27:38,552(1491) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:227) –> [main] Default batch fetch size: 1  
[DEBUG] 2015-12-01 15:27:38,552(1491) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:233) –> [main] Generate SQL with comments: disabled  
[DEBUG] 2015-12-01 15:27:38,553(1492) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:239) –> [main] Order SQL updates by primary key: disabled  
[DEBUG] 2015-12-01 15:27:38,554(1493) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Order SQL inserts for batching: disabled  
[DEBUG] 2015-12-01 15:27:38,554(1493) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Default null ordering: none  
[DEBUG] 2015-12-01 15:27:38,557(1496) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:584) –> [main] Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-12-01 15:27:38,563(1502) org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) –> [main] HHH000397: Using ASTQueryTranslatorFactory  
[DEBUG] 2015-12-01 15:27:38,564(1503) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:263) –> [main] Query language substitutions: {}  
[DEBUG] 2015-12-01 15:27:38,566(1505) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:269) –> [main] JPA-QL strict compliance: disabled  
[DEBUG] 2015-12-01 15:27:38,566(1505) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:277) –> [main] Second-level cache: enabled  
[DEBUG] 2015-12-01 15:27:38,567(1506) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:283) –> [main] Query cache: disabled  
[DEBUG] 2015-12-01 15:27:38,592(1531) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:524) –> [main] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory  
[DEBUG] 2015-12-01 15:27:38,594(1533) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:534) –> [main] org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.  
[DEBUG] 2015-12-01 15:27:38,595(1534) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:306) –> [main] Optimize cache for minimal puts: disabled  
[DEBUG] 2015-12-01 15:27:38,595(1534) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:321) –> [main] Structured second-level cache entries: disabled  
[DEBUG] 2015-12-01 15:27:38,596(1535) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:331) –> [main] Second-level cache direct-reference entries: disabled  
[DEBUG] 2015-12-01 15:27:38,597(1536) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:339) –> [main] Statistics: disabled  
[DEBUG] 2015-12-01 15:27:38,598(1537) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:345) –> [main] Deleted entity synthetic identifier rollback: disabled  
[DEBUG] 2015-12-01 15:27:38,598(1537) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:372) –> [main] Default entity-mode: pojo  
[DEBUG] 2015-12-01 15:27:38,599(1538) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:378) –> [main] Named query checking : enabled  
[DEBUG] 2015-12-01 15:27:38,601(1540) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:384) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): enabled  
[DEBUG] 2015-12-01 15:27:38,602(1541) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:402) –> [main] Allow initialization of lazy state outside session : : disabled  
[DEBUG] 2015-12-01 15:27:38,603(1542) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:412) –> [main] JTA Track by Thread: enabled  
[DEBUG] 2015-12-01 15:27:38,618(1557) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Building session factory  
[DEBUG] 2015-12-01 15:27:38,633(1572) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:280) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-12-01 15:27:38,634(1573) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:281) –> [main] Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=D:\Java\jdk1.8.0_40\jre\bin, java.vm.version=25.40-b25, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\Java\workspace\demo-chained-transactionmanager, java.runtime.version=1.8.0_40-b26, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=thread, java.endorsed.dirs=D:\Java\jdk1.8.0_40\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\奇点之~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8.1, sun.jnu.encoding=GBK, java.library.path=D:\Java\jdk1.8.0_40\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/jdk1.8.0_40/bin/../jre/bin/server;D:/Java/jdk1.8.0_40/bin/../jre/bin;D:/Java/jdk1.8.0_40/bin/../jre/lib/amd64;D:\Java\jdk1.8.0_40/bin;D:\Java\jdk1.8.0_40/lib/dt.jar;D:\Java\jdk1.8.0_40/lib/tools.jar;D:\__ENV__\apache-maven-3.2.1/bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__ENV__\apache-tomcat-7.0.57\bin;D:\__ENV__\apache-tomcat-7.0.57\jre;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\TortoiseSVN\bin;D:\__ENV__\eclipse;;., hibernate.connection.datasource=org.apache.commons.dbcp.BasicDataSource@8692d67, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=6.3, user.home=C:\Users\奇点之光08老师, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=奇点之光08老师, java.class.path=D:\Java\workspace\demo-chained-transactionmanager\target\test-classes;D:\Java\workspace\demo-chained-transactionmanager\target\classes;D:\__ENV__\repo\ch\qos\logback\logback-core\0.9.28\logback-core-0.9.28.jar;D:\__ENV__\repo\ch\qos\logback\logback-classic\0.9.28\logback-classic-0.9.28.jar;D:\__ENV__\repo\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;D:\__ENV__\repo\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;D:\__ENV__\repo\org\slf4j\slf4j-api\1.7.7\slf4j-api-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-jdk14\1.7.7\slf4j-jdk14-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-log4j12\1.7.7\slf4j-log4j12-1.7.7.jar;D:\__ENV__\repo\mysql\mysql-connector-java\5.1.26\mysql-connector-java-5.1.26.jar;D:\__ENV__\repo\log4j\log4j\1.2.14\log4j-1.2.14.jar;D:\__ENV__\repo\org\springframework\data\spring-data-commons\1.8.0.RELEASE\spring-data-commons-1.8.0.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\slf4j\jcl-over-slf4j\1.7.7\jcl-over-slf4j-1.7.7.jar;D:\__ENV__\repo\org\springframework\spring-context\3.2.4.RELEASE\spring-context-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-aop\3.2.4.RELEASE\spring-aop-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-expression\3.2.4.RELEASE\spring-expression-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-oxm\3.2.4.RELEASE\spring-oxm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\__ENV__\repo\org\springframework\spring-web\3.2.4.RELEASE\spring-web-3.2.4.RELEASE.jar;D:\__ENV__\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\__ENV__\repo\org\springframework\spring-webmvc\3.2.4.RELEASE\spring-webmvc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-orm\3.2.4.RELEASE\spring-orm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-jdbc\3.2.4.RELEASE\spring-jdbc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-tx\3.2.4.RELEASE\spring-tx-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-test\3.2.4.RELEASE\spring-test-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\__ENV__\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\__ENV__\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\__ENV__\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\__ENV__\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-validator\4.2.0.Final\hibernate-validator-4.2.0.Final.jar;D:\__ENV__\repo\javax\validation\validation-api\1.0.0.GA\validation-api-1.0.0.GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-core\4.2.10.Final\hibernate-core-4.2.10.Final.jar;D:\__ENV__\repo\antlr\antlr\2.7.7\antlr-2.7.7.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.1.Final\jboss-transaction-api_1.1_spec-1.0.1.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpcore\4.3.1\httpcore-4.3.1.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpclient\4.3.1\httpclient-4.3.1.jar;D:\__ENV__\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\__ENV__\repo\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpmime\4.3.1\httpmime-4.3.1.jar;D:\__ENV__\repo\redis\clients\jedis\2.7.2\jedis-2.7.2.jar;D:\__ENV__\repo\org\apache\commons\commons-pool2\2.3\commons-pool2-2.3.jar;D:\__ENV__\repo\javax\persistence\persistence-api\1.0.2\persistence-api-1.0.2.jar;D:\__ENV__\repo\org\ansj\ansj_seg\0.9\ansj_seg-0.9.jar;D:\__ENV__\repo\org\ansj\tree_split\1.0.1\tree_split-1.0.1.jar;D:\__ENV__\repo\org\apache\commons-lang3\commons-lang3\3.1\commons-lang3-3.1.jar;D:\__ENV__\repo\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;D:\__ENV__\repo\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;D:\__ENV__\repo\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;D:\__ENV__\repo\commons-io\commons-io\2.4\commons-io-2.4.jar;D:\__ENV__\repo\commons-fileupload\commons-fileupload\1.2.2\commons-fileupload-1.2.2.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\__ENV__\repo\com\googlecode\xmemcached\xmemcached\1.4.1\xmemcached-1.4.1.jar;D:\__ENV__\repo\net\sf\json-lib\json-lib\2.4\json-lib-2.4-jdk15.jar;D:\__ENV__\repo\commons-beanutils\commons-beanutils\1.8.0\commons-beanutils-1.8.0.jar;D:\__ENV__\repo\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;D:\__ENV__\repo\net\sf\ezmorph\ezmorph\1.0.6\ezmorph-1.0.6.jar;D:\__ENV__\repo\org\mybatis\mybatis\3.1.1\mybatis-3.1.1.jar;D:\__ENV__\repo\org\mybatis\mybatis-spring\1.1.1\mybatis-spring-1.1.1.jar;D:\__ENV__\repo\junit\junit\4.11\junit-4.11.jar;D:\__ENV__\repo\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/358/1/.cp/;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/357/1/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.classLoader.application=sun.misc.Launcher$AppClassLoader@3b07d329, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=D:\Java\jdk1.8.0_40\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 61296 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -test com.it_sucre.service.HibernateServiceTest:test, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_40, java.ext.dirs=D:\Java\jdk1.8.0_40\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=D:\Java\jdk1.8.0_40\jre\lib\resources.jar;D:\Java\jdk1.8.0_40\jre\lib\rt.jar;D:\Java\jdk1.8.0_40\jre\lib\sunrsasign.jar;D:\Java\jdk1.8.0_40\jre\lib\jsse.jar;D:\Java\jdk1.8.0_40\jre\lib\jce.jar;D:\Java\jdk1.8.0_40\jre\lib\charsets.jar;D:\Java\jdk1.8.0_40\jre\lib\jfr.jar;D:\Java\jdk1.8.0_40\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}  
[DEBUG] 2015-12-01 15:27:38,841(1780) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[DEBUG] 2015-12-01 15:27:39,160(2099) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3604) –> [main] Static SQL for entity: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:27:39,162(2101) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3609) –> [main]  Version select: select id from test where id =?  
[DEBUG] 2015-12-01 15:27:39,164(2103) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3612) –> [main]  Snapshot select: select testentity_.id, testentity_.name as name2_0_ from test testentity_ where testentity_.id=?  
[DEBUG] 2015-12-01 15:27:39,231(2170) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3615) –> [main]  Insert 0: insert into test (name, id) values (?, ?)  
[DEBUG] 2015-12-01 15:27:39,232(2171) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3616) –> [main]  Update 0: update test set name=? where id=?  
[DEBUG] 2015-12-01 15:27:39,241(2180) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3617) –> [main]  Delete 0: delete from test where id=?  
[DEBUG] 2015-12-01 15:27:39,298(2237) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [NONE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:27:39,300(2239) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:27:39,301(2240) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:27:39,302(2241) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE_NOWAIT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:27:39,303(2242) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [FORCE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:27:39,308(2247) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? lock in share mode  
[DEBUG] 2015-12-01 15:27:39,309(2248) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_WRITE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:27:39,310(2249) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:27:39,311(2250) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:27:39,313(2252) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:27:39,325(2264) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:27:39,326(2265) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:27:39,419(2358) org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:62) –> [main] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@770d0ea6  
[DEBUG] 2015-12-01 15:27:39,420(2359) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:75) –> [main] Registering SessionFactory: c88362a9-51db-4676-acfd-98666ad570e7 (<unnamed>)  
[DEBUG] 2015-12-01 15:27:39,420(2359) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:82) –> [main] Not binding SessionFactory to JNDI, no JNDI name configured  
[DEBUG] 2015-12-01 15:27:39,421(2360) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:492) –> [main] Instantiated session factory  
[INFO ] 2015-12-01 15:27:39,437(2376) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:182) –> [main] HHH000228: Running hbm2ddl schema update  
[INFO ] 2015-12-01 15:27:39,438(2377) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:193) –> [main] HHH000102: Fetching database metadata  
[INFO ] 2015-12-01 15:27:39,448(2387) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:205) –> [main] HHH000396: Updating schema  
[DEBUG] 2015-12-01 15:27:39,449(2388) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:27:39,450(2389) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:27:39,451(2390) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:27:39,451(2390) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:27:39,452(2391) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:27:39,453(2392) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:27:39,453(2392) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:27:39,454(2393) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:27:39,455(2394) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:27:39,456(2395) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[INFO ] 2015-12-01 15:27:39,501(2440) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] HHH000261: Table found: Test.test  
[INFO ] 2015-12-01 15:27:39,502(2441) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:67) –> [main] HHH000037: Columns: [name, id]  
[INFO ] 2015-12-01 15:27:39,503(2442) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] HHH000108: Foreign keys: []  
[INFO ] 2015-12-01 15:27:39,503(2442) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:70) –> [main] HHH000126: Indexes: [primary]  
[DEBUG] 2015-12-01 15:27:39,504(2443) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-12-01 15:27:39,506(2445) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:242) –> [main] HHH000232: Schema update complete  
[DEBUG] 2015-12-01 15:27:39,511(2450) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1073) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-12-01 15:27:39,512(2451) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1096) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-12-01 15:27:39,527(2466) org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:110) –> [main] Statistics initialized [enabled=false]  
[DEBUG] 2015-12-01 15:27:39,581(2520) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@b62d79  
[DEBUG] 2015-12-01 15:27:39,582(2521) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@b62d79  
[DEBUG] 2015-12-01 15:27:39,582(2521) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@b62d79  
[DEBUG] 2015-12-01 15:27:39,583(2522) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@34f5090e  
[DEBUG] 2015-12-01 15:27:39,584(2523) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@22e357dc  
[DEBUG] 2015-12-01 15:27:39,585(2524) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@15bbf42f  
[DEBUG] 2015-12-01 15:27:39,586(2525) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@223aa2f7  
[DEBUG] 2015-12-01 15:27:39,587(2526) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@223aa2f7  
[DEBUG] 2015-12-01 15:27:39,588(2527) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@223aa2f7  
[DEBUG] 2015-12-01 15:27:39,589(2528) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@2fd1433e  
[DEBUG] 2015-12-01 15:27:39,590(2529) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@2fd1433e  
[DEBUG] 2015-12-01 15:27:39,591(2530) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2fd1433e  
[DEBUG] 2015-12-01 15:27:39,591(2530) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@33990a0c  
[DEBUG] 2015-12-01 15:27:39,593(2532) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@33990a0c  
[DEBUG] 2015-12-01 15:27:39,594(2533) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@33990a0c  
[DEBUG] 2015-12-01 15:27:39,595(2534) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@10feca44  
[DEBUG] 2015-12-01 15:27:39,597(2536) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@10feca44  
[DEBUG] 2015-12-01 15:27:39,597(2536) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@10feca44  
[DEBUG] 2015-12-01 15:27:39,598(2537) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@759d26fb  
[DEBUG] 2015-12-01 15:27:39,599(2538) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@759d26fb  
[DEBUG] 2015-12-01 15:27:39,599(2538) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@759d26fb  
[DEBUG] 2015-12-01 15:27:39,600(2539) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@483f6d77  
[DEBUG] 2015-12-01 15:27:39,600(2539) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@483f6d77  
[DEBUG] 2015-12-01 15:27:39,601(2540) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@483f6d77  
[DEBUG] 2015-12-01 15:27:39,601(2540) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@78123e82  
[DEBUG] 2015-12-01 15:27:39,602(2541) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@78123e82  
[DEBUG] 2015-12-01 15:27:39,602(2541) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@78123e82  
[DEBUG] 2015-12-01 15:27:39,603(2542) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@bd4dc25  
[DEBUG] 2015-12-01 15:27:39,604(2543) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@bd4dc25  
[DEBUG] 2015-12-01 15:27:39,604(2543) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4d465b11  
[DEBUG] 2015-12-01 15:27:39,605(2544) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4d465b11  
[DEBUG] 2015-12-01 15:27:39,607(2546) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration string -> org.hibernate.type.StringType@73e22a3d  
[DEBUG] 2015-12-01 15:27:39,608(2547) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@73e22a3d  
[DEBUG] 2015-12-01 15:27:39,608(2547) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@56cdfb3b  
[DEBUG] 2015-12-01 15:27:39,609(2548) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7205765b  
[DEBUG] 2015-12-01 15:27:39,610(2549) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration url -> org.hibernate.type.UrlType@611889f4  
[DEBUG] 2015-12-01 15:27:39,611(2550) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@611889f4  
[DEBUG] 2015-12-01 15:27:39,611(2550) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration date -> org.hibernate.type.DateType@66d3eec0  
[DEBUG] 2015-12-01 15:27:39,612(2551) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@66d3eec0  
[DEBUG] 2015-12-01 15:27:39,612(2551) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration time -> org.hibernate.type.TimeType@5d7148e2  
[DEBUG] 2015-12-01 15:27:39,613(2552) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5d7148e2  
[DEBUG] 2015-12-01 15:27:39,613(2552) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@741a8937  
[DEBUG] 2015-12-01 15:27:39,614(2553) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@741a8937  
[DEBUG] 2015-12-01 15:27:39,614(2553) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@741a8937  
[DEBUG] 2015-12-01 15:27:39,615(2554) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@209da20d  
[DEBUG] 2015-12-01 15:27:39,615(2554) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@43dac38f  
[DEBUG] 2015-12-01 15:27:39,616(2555) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@43dac38f  
[DEBUG] 2015-12-01 15:27:39,616(2555) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@43dac38f  
[DEBUG] 2015-12-01 15:27:39,618(2557) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@54bff557  
[DEBUG] 2015-12-01 15:27:39,618(2557) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@37d4349f  
[DEBUG] 2015-12-01 15:27:39,619(2558) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@37d4349f  
[DEBUG] 2015-12-01 15:27:39,620(2559) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@3c7f66c4  
[DEBUG] 2015-12-01 15:27:39,620(2559) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3c7f66c4  
[DEBUG] 2015-12-01 15:27:39,621(2560) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@316bcf94  
[DEBUG] 2015-12-01 15:27:39,621(2560) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@316bcf94  
[DEBUG] 2015-12-01 15:27:39,622(2561) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration class -> org.hibernate.type.ClassType@32502377  
[DEBUG] 2015-12-01 15:27:39,622(2561) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@32502377  
[DEBUG] 2015-12-01 15:27:39,623(2562) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3cebbb30  
[DEBUG] 2015-12-01 15:27:39,623(2562) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3cebbb30  
[DEBUG] 2015-12-01 15:27:39,624(2563) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@49049a04  
[DEBUG] 2015-12-01 15:27:39,624(2563) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@47e2e487  
[DEBUG] 2015-12-01 15:27:39,625(2564) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@47d9a273  
[DEBUG] 2015-12-01 15:27:39,625(2564) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@47d9a273  
[DEBUG] 2015-12-01 15:27:39,626(2565) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@47d9a273  
[DEBUG] 2015-12-01 15:27:39,626(2565) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4b0d79fc  
[DEBUG] 2015-12-01 15:27:39,627(2566) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4b0d79fc  
[DEBUG] 2015-12-01 15:27:39,627(2566) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4b0d79fc  
[DEBUG] 2015-12-01 15:27:39,628(2567) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration image -> org.hibernate.type.ImageType@6bd61f98  
[DEBUG] 2015-12-01 15:27:39,631(2570) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@72e5a8e  
[DEBUG] 2015-12-01 15:27:39,638(2577) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@72e5a8e  
[DEBUG] 2015-12-01 15:27:39,641(2580) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@72e5a8e  
[DEBUG] 2015-12-01 15:27:39,642(2581) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@73e9cf30  
[DEBUG] 2015-12-01 15:27:39,643(2582) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@73e9cf30  
[DEBUG] 2015-12-01 15:27:39,644(2583) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@73e9cf30  
[DEBUG] 2015-12-01 15:27:39,644(2583) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration text -> org.hibernate.type.TextType@5a45133e  
[DEBUG] 2015-12-01 15:27:39,645(2584) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ntext -> org.hibernate.type.NTextType@5e600dd5  
[DEBUG] 2015-12-01 15:27:39,646(2585) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@f09733f  
[DEBUG] 2015-12-01 15:27:39,647(2586) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@f09733f  
[DEBUG] 2015-12-01 15:27:39,647(2586) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@45099dd3  
[DEBUG] 2015-12-01 15:27:39,647(2586) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@298a5e20  
[DEBUG] 2015-12-01 15:27:39,648(2587) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@298a5e20  
[DEBUG] 2015-12-01 15:27:39,648(2587) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nclob -> org.hibernate.type.NClobType@6e9175d8  
[DEBUG] 2015-12-01 15:27:39,649(2588) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6e9175d8  
[DEBUG] 2015-12-01 15:27:39,649(2588) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@8f2ef19  
[DEBUG] 2015-12-01 15:27:39,650(2589) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@69e153c5  
[DEBUG] 2015-12-01 15:27:39,650(2589) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@27406a17  
[DEBUG] 2015-12-01 15:27:39,650(2589) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@235ecd9f  
[DEBUG] 2015-12-01 15:27:39,651(2590) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@235ecd9f  
[DEBUG] 2015-12-01 15:27:39,651(2590) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5ca17ab0  
[DEBUG] 2015-12-01 15:27:39,652(2591) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1051817b  
[DEBUG] 2015-12-01 15:27:39,652(2591) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@620aa4ea  
[DEBUG] 2015-12-01 15:27:39,652(2591) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3174cb09  
[DEBUG] 2015-12-01 15:27:39,653(2592) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7adbd080  
[DEBUG] 2015-12-01 15:27:39,653(2592) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@560513ce  
[DEBUG] 2015-12-01 15:27:39,654(2593) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@37fbe4a8  
[DEBUG] 2015-12-01 15:27:39,654(2593) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7d373bcf  
[DEBUG] 2015-12-01 15:27:39,655(2594) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-12-01 15:27:39,655(2594) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-12-01 15:27:39,656(2595) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:27:39,656(2595) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:27:39,657(2596) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-12-01 15:27:39,657(2596) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]  
[DEBUG] 2015-12-01 15:27:39,658(2597) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-12-01 15:27:39,658(2597) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-12-01 15:27:39,659(2598) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-12-01 15:27:39,667(2606) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-12-01 15:27:39,668(2607) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-12-01 15:27:39,669(2608) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-12-01 15:27:39,669(2608) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-12-01 15:27:39,671(2610) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-12-01 15:27:39,672(2611) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]  
[DEBUG] 2015-12-01 15:27:39,709(2648) org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) –> [main] Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].  
[DEBUG] 2015-12-01 15:27:39,713(2652) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1781) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-12-01 15:27:39,763(2702) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:121) –> [main] Database ->
       name : MySQL
    version : 5.6.22
      major : 5
      minor : 6  
[DEBUG] 2015-12-01 15:27:39,766(2705) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:127) –> [main] Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[DEBUG] 2015-12-01 15:27:39,767(2706) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:133) –> [main] JDBC version : 4.0  
[INFO ] 2015-12-01 15:27:39,795(2734) org.hibernate.dialect.Dialect.<init>(Dialect.java:130) –> [main] HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-12-01 15:27:39,797(2736) org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:120) –> [main] HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException  
[DEBUG] 2015-12-01 15:27:39,799(2738) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:27:39,800(2739) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:27:39,801(2740) org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:534) –> [main] Binding entity from annotated class: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:27:39,802(2741) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}  
[DEBUG] 2015-12-01 15:27:39,802(2741) org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1118) –> [main] No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED  
[DEBUG] 2015-12-01 15:27:39,804(2743) org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:394) –> [main] Import with entity name TestEntity  
[DEBUG] 2015-12-01 15:27:39,804(2743) org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:564) –> [main] Bind entity com.it_sucre.entity.TestEntity on table test  
[DEBUG] 2015-12-01 15:27:39,807(2746) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=id, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:27:39,808(2747) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property id with lazy=false  
[DEBUG] 2015-12-01 15:27:39,810(2749) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for id  
[DEBUG] 2015-12-01 15:27:39,810(2749) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property id  
[DEBUG] 2015-12-01 15:27:39,811(2750) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=name, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:27:39,812(2751) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property name with lazy=false  
[DEBUG] 2015-12-01 15:27:39,812(2751) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for name  
[DEBUG] 2015-12-01 15:27:39,813(2752) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property name  
[DEBUG] 2015-12-01 15:27:39,814(2753) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for id  
[DEBUG] 2015-12-01 15:27:39,815(2754) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for name  
[DEBUG] 2015-12-01 15:27:39,816(2755) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:27:39,816(2755) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:27:39,817(2756) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:27:39,818(2757) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:27:39,818(2757) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:27:39,818(2757) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:27:39,819(2758) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:27:39,819(2758) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[DEBUG] 2015-12-01 15:27:39,820(2759) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:117) –> [main] Automatic flush during beforeCompletion(): disabled  
[DEBUG] 2015-12-01 15:27:39,821(2760) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:123) –> [main] Automatic session close at end of transaction: disabled  
[DEBUG] 2015-12-01 15:27:39,821(2760) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:134) –> [main] JDBC batch size: 15  
[DEBUG] 2015-12-01 15:27:39,822(2761) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:140) –> [main] JDBC batch updates for versioned data: disabled  
[DEBUG] 2015-12-01 15:27:39,822(2761) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:150) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-12-01 15:27:39,822(2761) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:156) –> [main] Wrap result sets: disabled  
[DEBUG] 2015-12-01 15:27:39,823(2762) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:162) –> [main] JDBC3 getGeneratedKeys(): enabled  
[DEBUG] 2015-12-01 15:27:39,823(2762) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:174) –> [main] multi-tenancy strategy : NONE  
[DEBUG] 2015-12-01 15:27:39,824(2763) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:180) –> [main] Connection release mode: auto  
[INFO ] 2015-12-01 15:27:39,826(2765) org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:68) –> [main] HHH000399: Using default transaction strategy (direct JDBC transactions)  
[DEBUG] 2015-12-01 15:27:39,832(2771) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Using BatchFetchStyle : LEGACY  
[DEBUG] 2015-12-01 15:27:39,835(2774) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:221) –> [main] Maximum outer join fetch depth: 2  
[DEBUG] 2015-12-01 15:27:39,839(2778) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:227) –> [main] Default batch fetch size: 1  
[DEBUG] 2015-12-01 15:27:39,840(2779) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:233) –> [main] Generate SQL with comments: disabled  
[DEBUG] 2015-12-01 15:27:39,843(2782) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:239) –> [main] Order SQL updates by primary key: disabled  
[DEBUG] 2015-12-01 15:27:39,844(2783) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Order SQL inserts for batching: disabled  
[DEBUG] 2015-12-01 15:27:39,844(2783) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Default null ordering: none  
[DEBUG] 2015-12-01 15:27:39,845(2784) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:584) –> [main] Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-12-01 15:27:39,846(2785) org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) –> [main] HHH000397: Using ASTQueryTranslatorFactory  
[DEBUG] 2015-12-01 15:27:39,847(2786) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:263) –> [main] Query language substitutions: {}  
[DEBUG] 2015-12-01 15:27:39,848(2787) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:269) –> [main] JPA-QL strict compliance: disabled  
[DEBUG] 2015-12-01 15:27:39,848(2787) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:277) –> [main] Second-level cache: enabled  
[DEBUG] 2015-12-01 15:27:39,849(2788) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:283) –> [main] Query cache: disabled  
[DEBUG] 2015-12-01 15:27:39,850(2789) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:524) –> [main] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory  
[DEBUG] 2015-12-01 15:27:39,851(2790) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:534) –> [main] org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.  
[DEBUG] 2015-12-01 15:27:39,853(2792) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:306) –> [main] Optimize cache for minimal puts: disabled  
[DEBUG] 2015-12-01 15:27:39,854(2793) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:321) –> [main] Structured second-level cache entries: disabled  
[DEBUG] 2015-12-01 15:27:39,855(2794) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:331) –> [main] Second-level cache direct-reference entries: disabled  
[DEBUG] 2015-12-01 15:27:39,855(2794) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:339) –> [main] Statistics: disabled  
[DEBUG] 2015-12-01 15:27:39,858(2797) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:345) –> [main] Deleted entity synthetic identifier rollback: disabled  
[DEBUG] 2015-12-01 15:27:39,860(2799) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:372) –> [main] Default entity-mode: pojo  
[DEBUG] 2015-12-01 15:27:39,861(2800) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:378) –> [main] Named query checking : enabled  
[DEBUG] 2015-12-01 15:27:39,866(2805) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:384) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): enabled  
[DEBUG] 2015-12-01 15:27:39,867(2806) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:402) –> [main] Allow initialization of lazy state outside session : : disabled  
[DEBUG] 2015-12-01 15:27:39,868(2807) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:412) –> [main] JTA Track by Thread: enabled  
[DEBUG] 2015-12-01 15:27:39,868(2807) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Building session factory  
[DEBUG] 2015-12-01 15:27:39,871(2810) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:280) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-12-01 15:27:39,871(2810) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:281) –> [main] Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=D:\Java\jdk1.8.0_40\jre\bin, java.vm.version=25.40-b25, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\Java\workspace\demo-chained-transactionmanager, java.runtime.version=1.8.0_40-b26, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=thread, java.endorsed.dirs=D:\Java\jdk1.8.0_40\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\奇点之~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8.1, sun.jnu.encoding=GBK, java.library.path=D:\Java\jdk1.8.0_40\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/jdk1.8.0_40/bin/../jre/bin/server;D:/Java/jdk1.8.0_40/bin/../jre/bin;D:/Java/jdk1.8.0_40/bin/../jre/lib/amd64;D:\Java\jdk1.8.0_40/bin;D:\Java\jdk1.8.0_40/lib/dt.jar;D:\Java\jdk1.8.0_40/lib/tools.jar;D:\__ENV__\apache-maven-3.2.1/bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__ENV__\apache-tomcat-7.0.57\bin;D:\__ENV__\apache-tomcat-7.0.57\jre;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\TortoiseSVN\bin;D:\__ENV__\eclipse;;., hibernate.connection.datasource=org.apache.commons.dbcp.BasicDataSource@d816dde, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=6.3, user.home=C:\Users\奇点之光08老师, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=奇点之光08老师, java.class.path=D:\Java\workspace\demo-chained-transactionmanager\target\test-classes;D:\Java\workspace\demo-chained-transactionmanager\target\classes;D:\__ENV__\repo\ch\qos\logback\logback-core\0.9.28\logback-core-0.9.28.jar;D:\__ENV__\repo\ch\qos\logback\logback-classic\0.9.28\logback-classic-0.9.28.jar;D:\__ENV__\repo\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;D:\__ENV__\repo\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;D:\__ENV__\repo\org\slf4j\slf4j-api\1.7.7\slf4j-api-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-jdk14\1.7.7\slf4j-jdk14-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-log4j12\1.7.7\slf4j-log4j12-1.7.7.jar;D:\__ENV__\repo\mysql\mysql-connector-java\5.1.26\mysql-connector-java-5.1.26.jar;D:\__ENV__\repo\log4j\log4j\1.2.14\log4j-1.2.14.jar;D:\__ENV__\repo\org\springframework\data\spring-data-commons\1.8.0.RELEASE\spring-data-commons-1.8.0.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\slf4j\jcl-over-slf4j\1.7.7\jcl-over-slf4j-1.7.7.jar;D:\__ENV__\repo\org\springframework\spring-context\3.2.4.RELEASE\spring-context-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-aop\3.2.4.RELEASE\spring-aop-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-expression\3.2.4.RELEASE\spring-expression-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-oxm\3.2.4.RELEASE\spring-oxm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\__ENV__\repo\org\springframework\spring-web\3.2.4.RELEASE\spring-web-3.2.4.RELEASE.jar;D:\__ENV__\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\__ENV__\repo\org\springframework\spring-webmvc\3.2.4.RELEASE\spring-webmvc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-orm\3.2.4.RELEASE\spring-orm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-jdbc\3.2.4.RELEASE\spring-jdbc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-tx\3.2.4.RELEASE\spring-tx-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-test\3.2.4.RELEASE\spring-test-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\__ENV__\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\__ENV__\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\__ENV__\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\__ENV__\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-validator\4.2.0.Final\hibernate-validator-4.2.0.Final.jar;D:\__ENV__\repo\javax\validation\validation-api\1.0.0.GA\validation-api-1.0.0.GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-core\4.2.10.Final\hibernate-core-4.2.10.Final.jar;D:\__ENV__\repo\antlr\antlr\2.7.7\antlr-2.7.7.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.1.Final\jboss-transaction-api_1.1_spec-1.0.1.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpcore\4.3.1\httpcore-4.3.1.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpclient\4.3.1\httpclient-4.3.1.jar;D:\__ENV__\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\__ENV__\repo\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpmime\4.3.1\httpmime-4.3.1.jar;D:\__ENV__\repo\redis\clients\jedis\2.7.2\jedis-2.7.2.jar;D:\__ENV__\repo\org\apache\commons\commons-pool2\2.3\commons-pool2-2.3.jar;D:\__ENV__\repo\javax\persistence\persistence-api\1.0.2\persistence-api-1.0.2.jar;D:\__ENV__\repo\org\ansj\ansj_seg\0.9\ansj_seg-0.9.jar;D:\__ENV__\repo\org\ansj\tree_split\1.0.1\tree_split-1.0.1.jar;D:\__ENV__\repo\org\apache\commons-lang3\commons-lang3\3.1\commons-lang3-3.1.jar;D:\__ENV__\repo\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;D:\__ENV__\repo\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;D:\__ENV__\repo\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;D:\__ENV__\repo\commons-io\commons-io\2.4\commons-io-2.4.jar;D:\__ENV__\repo\commons-fileupload\commons-fileupload\1.2.2\commons-fileupload-1.2.2.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\__ENV__\repo\com\googlecode\xmemcached\xmemcached\1.4.1\xmemcached-1.4.1.jar;D:\__ENV__\repo\net\sf\json-lib\json-lib\2.4\json-lib-2.4-jdk15.jar;D:\__ENV__\repo\commons-beanutils\commons-beanutils\1.8.0\commons-beanutils-1.8.0.jar;D:\__ENV__\repo\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;D:\__ENV__\repo\net\sf\ezmorph\ezmorph\1.0.6\ezmorph-1.0.6.jar;D:\__ENV__\repo\org\mybatis\mybatis\3.1.1\mybatis-3.1.1.jar;D:\__ENV__\repo\org\mybatis\mybatis-spring\1.1.1\mybatis-spring-1.1.1.jar;D:\__ENV__\repo\junit\junit\4.11\junit-4.11.jar;D:\__ENV__\repo\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/358/1/.cp/;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/357/1/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.classLoader.application=sun.misc.Launcher$AppClassLoader@3b07d329, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=D:\Java\jdk1.8.0_40\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 61296 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -test com.it_sucre.service.HibernateServiceTest:test, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_40, java.ext.dirs=D:\Java\jdk1.8.0_40\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=D:\Java\jdk1.8.0_40\jre\lib\resources.jar;D:\Java\jdk1.8.0_40\jre\lib\rt.jar;D:\Java\jdk1.8.0_40\jre\lib\sunrsasign.jar;D:\Java\jdk1.8.0_40\jre\lib\jsse.jar;D:\Java\jdk1.8.0_40\jre\lib\jce.jar;D:\Java\jdk1.8.0_40\jre\lib\charsets.jar;D:\Java\jdk1.8.0_40\jre\lib\jfr.jar;D:\Java\jdk1.8.0_40\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}  
[DEBUG] 2015-12-01 15:27:39,891(2830) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[DEBUG] 2015-12-01 15:27:39,896(2835) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3604) –> [main] Static SQL for entity: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:27:39,897(2836) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3609) –> [main]  Version select: select id from test where id =?  
[DEBUG] 2015-12-01 15:27:39,897(2836) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3612) –> [main]  Snapshot select: select testentity_.id, testentity_.name as name2_0_ from test testentity_ where testentity_.id=?  
[DEBUG] 2015-12-01 15:27:39,898(2837) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3615) –> [main]  Insert 0: insert into test (name, id) values (?, ?)  
[DEBUG] 2015-12-01 15:27:39,899(2838) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3616) –> [main]  Update 0: update test set name=? where id=?  
[DEBUG] 2015-12-01 15:27:39,900(2839) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3617) –> [main]  Delete 0: delete from test where id=?  
[DEBUG] 2015-12-01 15:27:39,901(2840) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [NONE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:27:39,903(2842) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:27:39,905(2844) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:27:39,907(2846) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE_NOWAIT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:27:39,908(2847) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [FORCE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:27:39,909(2848) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? lock in share mode  
[DEBUG] 2015-12-01 15:27:39,910(2849) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_WRITE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:27:39,911(2850) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:27:39,912(2851) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:27:39,913(2852) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:27:39,915(2854) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:27:39,917(2856) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:27:39,918(2857) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:75) –> [main] Registering SessionFactory: 131a3449-1e52-44f2-a188-6b462df7dfc9 (<unnamed>)  
[DEBUG] 2015-12-01 15:27:39,919(2858) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:82) –> [main] Not binding SessionFactory to JNDI, no JNDI name configured  
[DEBUG] 2015-12-01 15:27:39,919(2858) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:492) –> [main] Instantiated session factory  
[INFO ] 2015-12-01 15:27:39,920(2859) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:182) –> [main] HHH000228: Running hbm2ddl schema update  
[INFO ] 2015-12-01 15:27:39,920(2859) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:193) –> [main] HHH000102: Fetching database metadata  
[INFO ] 2015-12-01 15:27:39,921(2860) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:205) –> [main] HHH000396: Updating schema  
[DEBUG] 2015-12-01 15:27:39,922(2861) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:27:39,922(2861) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:27:39,922(2861) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:27:39,923(2862) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:27:39,923(2862) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:27:39,924(2863) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:27:39,924(2863) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:27:39,925(2864) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:27:39,926(2865) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:27:39,926(2865) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[INFO ] 2015-12-01 15:27:39,944(2883) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] HHH000261: Table found: Test.test  
[INFO ] 2015-12-01 15:27:39,946(2885) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:67) –> [main] HHH000037: Columns: [name, id]  
[INFO ] 2015-12-01 15:27:39,947(2886) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] HHH000108: Foreign keys: []  
[INFO ] 2015-12-01 15:27:39,947(2886) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:70) –> [main] HHH000126: Indexes: [primary]  
[DEBUG] 2015-12-01 15:27:39,948(2887) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-12-01 15:27:39,949(2888) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:242) –> [main] HHH000232: Schema update complete  
[DEBUG] 2015-12-01 15:27:39,950(2889) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1073) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-12-01 15:27:39,951(2890) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1096) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-12-01 15:27:39,952(2891) org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:110) –> [main] Statistics initialized [enabled=false]  
[DEBUG] 2015-12-01 15:27:40,493(3432) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:212) –> [main] Obtaining JDBC connection  
[DEBUG] 2015-12-01 15:27:40,494(3433) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:218) –> [main] Obtained JDBC connection  
[DEBUG] 2015-12-01 15:27:40,522(3461) org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) –> [main] begin  
[DEBUG] 2015-12-01 15:27:40,523(3462) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) –> [main] initial autocommit status: true  
[DEBUG] 2015-12-01 15:27:40,524(3463) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) –> [main] disabling autocommit  
[DEBUG] 2015-12-01 15:27:40,646(3585) org.hibernate.engine.transaction.spi.AbstractTransactionImpl.rollback(AbstractTransactionImpl.java:203) –> [main] rolling back  
[DEBUG] 2015-12-01 15:27:40,647(3586) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doRollback(JdbcTransaction.java:164) –> [main] rolled JDBC Connection  
[DEBUG] 2015-12-01 15:27:40,648(3587) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) –> [main] re-enabling autocommit  
[DEBUG] 2015-12-01 15:27:40,654(3593) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:232) –> [main] Releasing JDBC connection  
[DEBUG] 2015-12-01 15:27:40,654(3593) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:250) –> [main] Released JDBC connection  
[DEBUG] 2015-12-01 15:27:40,687(3626) org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1374) –> [Thread-2] HHH000031: Closing  
[DEBUG] 2015-12-01 15:27:40,690(3629) org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1374) –> [Thread-2] HHH000031: Closing  
[DEBUG] 2015-12-01 15:28:11,441(0) org.hibernate.cfg.Configuration.<clinit>(Configuration.java:184) –> [main] Logging Provider: org.jboss.logging.Log4jLoggerProvider  
[DEBUG] 2015-12-01 15:28:11,474(33) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@b62d79  
[DEBUG] 2015-12-01 15:28:11,475(34) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@b62d79  
[DEBUG] 2015-12-01 15:28:11,477(36) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@b62d79  
[DEBUG] 2015-12-01 15:28:11,479(38) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@34f5090e  
[DEBUG] 2015-12-01 15:28:11,482(41) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@22e357dc  
[DEBUG] 2015-12-01 15:28:11,485(44) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@15bbf42f  
[DEBUG] 2015-12-01 15:28:11,491(50) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@223aa2f7  
[DEBUG] 2015-12-01 15:28:11,492(51) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@223aa2f7  
[DEBUG] 2015-12-01 15:28:11,493(52) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@223aa2f7  
[DEBUG] 2015-12-01 15:28:11,497(56) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@2fd1433e  
[DEBUG] 2015-12-01 15:28:11,499(58) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@2fd1433e  
[DEBUG] 2015-12-01 15:28:11,500(59) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2fd1433e  
[DEBUG] 2015-12-01 15:28:11,504(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@33990a0c  
[DEBUG] 2015-12-01 15:28:11,505(64) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@33990a0c  
[DEBUG] 2015-12-01 15:28:11,505(64) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@33990a0c  
[DEBUG] 2015-12-01 15:28:11,508(67) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@10feca44  
[DEBUG] 2015-12-01 15:28:11,509(68) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@10feca44  
[DEBUG] 2015-12-01 15:28:11,509(68) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@10feca44  
[DEBUG] 2015-12-01 15:28:11,514(73) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@759d26fb  
[DEBUG] 2015-12-01 15:28:11,515(74) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@759d26fb  
[DEBUG] 2015-12-01 15:28:11,516(75) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@759d26fb  
[DEBUG] 2015-12-01 15:28:11,518(77) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@483f6d77  
[DEBUG] 2015-12-01 15:28:11,519(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@483f6d77  
[DEBUG] 2015-12-01 15:28:11,519(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@483f6d77  
[DEBUG] 2015-12-01 15:28:11,522(81) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@78123e82  
[DEBUG] 2015-12-01 15:28:11,522(81) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@78123e82  
[DEBUG] 2015-12-01 15:28:11,527(86) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@78123e82  
[DEBUG] 2015-12-01 15:28:11,532(91) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@bd4dc25  
[DEBUG] 2015-12-01 15:28:11,533(92) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@bd4dc25  
[DEBUG] 2015-12-01 15:28:11,535(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4d465b11  
[DEBUG] 2015-12-01 15:28:11,535(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4d465b11  
[DEBUG] 2015-12-01 15:28:11,537(96) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration string -> org.hibernate.type.StringType@73e22a3d  
[DEBUG] 2015-12-01 15:28:11,538(97) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@73e22a3d  
[DEBUG] 2015-12-01 15:28:11,540(99) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@56cdfb3b  
[DEBUG] 2015-12-01 15:28:11,543(102) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7205765b  
[DEBUG] 2015-12-01 15:28:11,546(105) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration url -> org.hibernate.type.UrlType@611889f4  
[DEBUG] 2015-12-01 15:28:11,548(107) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@611889f4  
[DEBUG] 2015-12-01 15:28:11,553(112) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration date -> org.hibernate.type.DateType@66d3eec0  
[DEBUG] 2015-12-01 15:28:11,554(113) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@66d3eec0  
[DEBUG] 2015-12-01 15:28:11,556(115) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration time -> org.hibernate.type.TimeType@5d7148e2  
[DEBUG] 2015-12-01 15:28:11,557(116) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5d7148e2  
[DEBUG] 2015-12-01 15:28:11,559(118) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@741a8937  
[DEBUG] 2015-12-01 15:28:11,560(119) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@741a8937  
[DEBUG] 2015-12-01 15:28:11,564(123) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@741a8937  
[DEBUG] 2015-12-01 15:28:11,569(128) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@209da20d  
[DEBUG] 2015-12-01 15:28:11,571(130) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@43dac38f  
[DEBUG] 2015-12-01 15:28:11,572(131) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@43dac38f  
[DEBUG] 2015-12-01 15:28:11,573(132) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@43dac38f  
[DEBUG] 2015-12-01 15:28:11,575(134) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@54bff557  
[DEBUG] 2015-12-01 15:28:11,578(137) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@37d4349f  
[DEBUG] 2015-12-01 15:28:11,581(140) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@37d4349f  
[DEBUG] 2015-12-01 15:28:11,583(142) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@3c7f66c4  
[DEBUG] 2015-12-01 15:28:11,584(143) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3c7f66c4  
[DEBUG] 2015-12-01 15:28:11,586(145) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@316bcf94  
[DEBUG] 2015-12-01 15:28:11,587(146) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@316bcf94  
[DEBUG] 2015-12-01 15:28:11,592(151) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration class -> org.hibernate.type.ClassType@32502377  
[DEBUG] 2015-12-01 15:28:11,593(152) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@32502377  
[DEBUG] 2015-12-01 15:28:11,599(158) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3cebbb30  
[DEBUG] 2015-12-01 15:28:11,600(159) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3cebbb30  
[DEBUG] 2015-12-01 15:28:11,603(162) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@49049a04  
[DEBUG] 2015-12-01 15:28:11,605(164) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@47e2e487  
[DEBUG] 2015-12-01 15:28:11,607(166) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@47d9a273  
[DEBUG] 2015-12-01 15:28:11,608(167) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@47d9a273  
[DEBUG] 2015-12-01 15:28:11,608(167) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@47d9a273  
[DEBUG] 2015-12-01 15:28:11,616(175) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4b0d79fc  
[DEBUG] 2015-12-01 15:28:11,618(177) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4b0d79fc  
[DEBUG] 2015-12-01 15:28:11,619(178) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4b0d79fc  
[DEBUG] 2015-12-01 15:28:11,621(180) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration image -> org.hibernate.type.ImageType@6bd61f98  
[DEBUG] 2015-12-01 15:28:11,624(183) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@72e5a8e  
[DEBUG] 2015-12-01 15:28:11,624(183) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@72e5a8e  
[DEBUG] 2015-12-01 15:28:11,626(185) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@72e5a8e  
[DEBUG] 2015-12-01 15:28:11,675(234) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@73e9cf30  
[DEBUG] 2015-12-01 15:28:11,688(247) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@73e9cf30  
[DEBUG] 2015-12-01 15:28:11,689(248) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@73e9cf30  
[DEBUG] 2015-12-01 15:28:11,692(251) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration text -> org.hibernate.type.TextType@5a45133e  
[DEBUG] 2015-12-01 15:28:11,694(253) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ntext -> org.hibernate.type.NTextType@5e600dd5  
[DEBUG] 2015-12-01 15:28:11,715(274) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@f09733f  
[DEBUG] 2015-12-01 15:28:11,716(275) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@f09733f  
[DEBUG] 2015-12-01 15:28:11,718(277) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@45099dd3  
[DEBUG] 2015-12-01 15:28:11,731(290) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@298a5e20  
[DEBUG] 2015-12-01 15:28:11,732(291) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@298a5e20  
[DEBUG] 2015-12-01 15:28:11,743(302) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nclob -> org.hibernate.type.NClobType@6e9175d8  
[DEBUG] 2015-12-01 15:28:11,744(303) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6e9175d8  
[DEBUG] 2015-12-01 15:28:11,747(306) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@8f2ef19  
[DEBUG] 2015-12-01 15:28:11,749(308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@69e153c5  
[DEBUG] 2015-12-01 15:28:11,751(310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@27406a17  
[DEBUG] 2015-12-01 15:28:11,755(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@235ecd9f  
[DEBUG] 2015-12-01 15:28:11,756(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@235ecd9f  
[DEBUG] 2015-12-01 15:28:11,757(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@74d1dc36  
[DEBUG] 2015-12-01 15:28:11,759(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@74e28667  
[DEBUG] 2015-12-01 15:28:11,760(319) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@663c9e7a  
[DEBUG] 2015-12-01 15:28:11,761(320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@795509d9  
[DEBUG] 2015-12-01 15:28:11,762(321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5149d738  
[DEBUG] 2015-12-01 15:28:11,764(323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3a7442c7  
[DEBUG] 2015-12-01 15:28:11,765(324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@548d708a  
[DEBUG] 2015-12-01 15:28:11,765(324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@53fb3dab  
[INFO ] 2015-12-01 15:28:11,797(356) org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66) –> [main] HCANN000001: Hibernate Commons Annotations {4.0.4.Final}  
[INFO ] 2015-12-01 15:28:11,806(365) org.hibernate.Version.logVersion(Version.java:41) –> [main] HHH000412: Hibernate Core {4.2.10.Final}  
[INFO ] 2015-12-01 15:28:11,810(369) org.hibernate.cfg.Environment.<clinit>(Environment.java:238) –> [main] HHH000206: hibernate.properties not found  
[INFO ] 2015-12-01 15:28:11,813(372) org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:345) –> [main] HHH000021: Bytecode provider name : javassist  
[DEBUG] 2015-12-01 15:28:11,832(391) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-12-01 15:28:11,833(392) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-12-01 15:28:11,835(394) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:28:11,836(395) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:28:11,838(397) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-12-01 15:28:11,839(398) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]  
[DEBUG] 2015-12-01 15:28:11,841(400) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-12-01 15:28:11,844(403) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-12-01 15:28:11,847(406) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-12-01 15:28:11,850(409) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-12-01 15:28:11,852(411) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-12-01 15:28:11,854(413) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-12-01 15:28:11,856(415) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-12-01 15:28:11,858(417) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-12-01 15:28:11,862(421) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]  
[DEBUG] 2015-12-01 15:28:11,912(471) org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) –> [main] Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].  
[DEBUG] 2015-12-01 15:28:11,964(523) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1781) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-12-01 15:28:12,375(934) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:121) –> [main] Database ->
       name : MySQL
    version : 5.6.22
      major : 5
      minor : 6  
[DEBUG] 2015-12-01 15:28:12,376(935) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:127) –> [main] Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[DEBUG] 2015-12-01 15:28:12,377(936) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:133) –> [main] JDBC version : 4.0  
[INFO ] 2015-12-01 15:28:12,410(969) org.hibernate.dialect.Dialect.<init>(Dialect.java:130) –> [main] HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-12-01 15:28:12,425(984) org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:120) –> [main] HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException  
[DEBUG] 2015-12-01 15:28:12,468(1027) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:28:12,469(1028) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:28:12,474(1033) org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:534) –> [main] Binding entity from annotated class: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:28:12,513(1072) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}  
[DEBUG] 2015-12-01 15:28:12,517(1076) org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1118) –> [main] No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED  
[DEBUG] 2015-12-01 15:28:12,555(1114) org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:394) –> [main] Import with entity name TestEntity  
[DEBUG] 2015-12-01 15:28:12,568(1127) org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:564) –> [main] Bind entity com.it_sucre.entity.TestEntity on table test  
[DEBUG] 2015-12-01 15:28:12,618(1177) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=id, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:28:12,628(1187) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property id with lazy=false  
[DEBUG] 2015-12-01 15:28:12,636(1195) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for id  
[DEBUG] 2015-12-01 15:28:12,639(1198) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property id  
[DEBUG] 2015-12-01 15:28:12,652(1211) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=name, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:28:12,654(1213) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property name with lazy=false  
[DEBUG] 2015-12-01 15:28:12,655(1214) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for name  
[DEBUG] 2015-12-01 15:28:12,656(1215) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property name  
[DEBUG] 2015-12-01 15:28:12,662(1221) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for id  
[DEBUG] 2015-12-01 15:28:12,664(1223) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for name  
[DEBUG] 2015-12-01 15:28:12,667(1226) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:28:12,671(1230) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:28:12,672(1231) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:28:12,673(1232) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:28:12,674(1233) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:28:12,675(1234) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:28:12,676(1235) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:28:12,677(1236) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[DEBUG] 2015-12-01 15:28:12,700(1259) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:117) –> [main] Automatic flush during beforeCompletion(): disabled  
[DEBUG] 2015-12-01 15:28:12,701(1260) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:123) –> [main] Automatic session close at end of transaction: disabled  
[DEBUG] 2015-12-01 15:28:12,702(1261) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:134) –> [main] JDBC batch size: 15  
[DEBUG] 2015-12-01 15:28:12,702(1261) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:140) –> [main] JDBC batch updates for versioned data: disabled  
[DEBUG] 2015-12-01 15:28:12,703(1262) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:150) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-12-01 15:28:12,703(1262) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:156) –> [main] Wrap result sets: disabled  
[DEBUG] 2015-12-01 15:28:12,704(1263) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:162) –> [main] JDBC3 getGeneratedKeys(): enabled  
[DEBUG] 2015-12-01 15:28:12,705(1264) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:174) –> [main] multi-tenancy strategy : NONE  
[DEBUG] 2015-12-01 15:28:12,705(1264) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:180) –> [main] Connection release mode: auto  
[INFO ] 2015-12-01 15:28:12,706(1265) org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:68) –> [main] HHH000399: Using default transaction strategy (direct JDBC transactions)  
[DEBUG] 2015-12-01 15:28:12,711(1270) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Using BatchFetchStyle : LEGACY  
[DEBUG] 2015-12-01 15:28:12,712(1271) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:221) –> [main] Maximum outer join fetch depth: 2  
[DEBUG] 2015-12-01 15:28:12,712(1271) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:227) –> [main] Default batch fetch size: 1  
[DEBUG] 2015-12-01 15:28:12,713(1272) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:233) –> [main] Generate SQL with comments: disabled  
[DEBUG] 2015-12-01 15:28:12,713(1272) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:239) –> [main] Order SQL updates by primary key: disabled  
[DEBUG] 2015-12-01 15:28:12,713(1272) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Order SQL inserts for batching: disabled  
[DEBUG] 2015-12-01 15:28:12,714(1273) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Default null ordering: none  
[DEBUG] 2015-12-01 15:28:12,716(1275) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:584) –> [main] Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-12-01 15:28:12,720(1279) org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) –> [main] HHH000397: Using ASTQueryTranslatorFactory  
[DEBUG] 2015-12-01 15:28:12,721(1280) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:263) –> [main] Query language substitutions: {}  
[DEBUG] 2015-12-01 15:28:12,722(1281) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:269) –> [main] JPA-QL strict compliance: disabled  
[DEBUG] 2015-12-01 15:28:12,722(1281) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:277) –> [main] Second-level cache: enabled  
[DEBUG] 2015-12-01 15:28:12,723(1282) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:283) –> [main] Query cache: disabled  
[DEBUG] 2015-12-01 15:28:12,723(1282) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:524) –> [main] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory  
[DEBUG] 2015-12-01 15:28:12,726(1285) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:534) –> [main] org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.  
[DEBUG] 2015-12-01 15:28:12,753(1312) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:306) –> [main] Optimize cache for minimal puts: disabled  
[DEBUG] 2015-12-01 15:28:12,756(1315) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:321) –> [main] Structured second-level cache entries: disabled  
[DEBUG] 2015-12-01 15:28:12,757(1316) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:331) –> [main] Second-level cache direct-reference entries: disabled  
[DEBUG] 2015-12-01 15:28:12,757(1316) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:339) –> [main] Statistics: disabled  
[DEBUG] 2015-12-01 15:28:12,758(1317) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:345) –> [main] Deleted entity synthetic identifier rollback: disabled  
[DEBUG] 2015-12-01 15:28:12,758(1317) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:372) –> [main] Default entity-mode: pojo  
[DEBUG] 2015-12-01 15:28:12,759(1318) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:378) –> [main] Named query checking : enabled  
[DEBUG] 2015-12-01 15:28:12,759(1318) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:384) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): enabled  
[DEBUG] 2015-12-01 15:28:12,760(1319) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:402) –> [main] Allow initialization of lazy state outside session : : disabled  
[DEBUG] 2015-12-01 15:28:12,761(1320) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:412) –> [main] JTA Track by Thread: enabled  
[DEBUG] 2015-12-01 15:28:12,777(1336) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Building session factory  
[DEBUG] 2015-12-01 15:28:12,791(1350) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:280) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-12-01 15:28:12,791(1350) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:281) –> [main] Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=D:\Java\jdk1.8.0_40\jre\bin, java.vm.version=25.40-b25, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\Java\workspace\demo-chained-transactionmanager, java.runtime.version=1.8.0_40-b26, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=thread, java.endorsed.dirs=D:\Java\jdk1.8.0_40\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\奇点之~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8.1, sun.jnu.encoding=GBK, java.library.path=D:\Java\jdk1.8.0_40\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/jdk1.8.0_40/bin/../jre/bin/server;D:/Java/jdk1.8.0_40/bin/../jre/bin;D:/Java/jdk1.8.0_40/bin/../jre/lib/amd64;D:\Java\jdk1.8.0_40/bin;D:\Java\jdk1.8.0_40/lib/dt.jar;D:\Java\jdk1.8.0_40/lib/tools.jar;D:\__ENV__\apache-maven-3.2.1/bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__ENV__\apache-tomcat-7.0.57\bin;D:\__ENV__\apache-tomcat-7.0.57\jre;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\TortoiseSVN\bin;D:\__ENV__\eclipse;;., hibernate.connection.datasource=org.apache.commons.dbcp.BasicDataSource@8692d67, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=6.3, user.home=C:\Users\奇点之光08老师, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=奇点之光08老师, java.class.path=D:\Java\workspace\demo-chained-transactionmanager\target\test-classes;D:\Java\workspace\demo-chained-transactionmanager\target\classes;D:\__ENV__\repo\ch\qos\logback\logback-core\0.9.28\logback-core-0.9.28.jar;D:\__ENV__\repo\ch\qos\logback\logback-classic\0.9.28\logback-classic-0.9.28.jar;D:\__ENV__\repo\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;D:\__ENV__\repo\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;D:\__ENV__\repo\org\slf4j\slf4j-api\1.7.7\slf4j-api-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-jdk14\1.7.7\slf4j-jdk14-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-log4j12\1.7.7\slf4j-log4j12-1.7.7.jar;D:\__ENV__\repo\mysql\mysql-connector-java\5.1.26\mysql-connector-java-5.1.26.jar;D:\__ENV__\repo\log4j\log4j\1.2.14\log4j-1.2.14.jar;D:\__ENV__\repo\org\springframework\data\spring-data-commons\1.8.0.RELEASE\spring-data-commons-1.8.0.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\slf4j\jcl-over-slf4j\1.7.7\jcl-over-slf4j-1.7.7.jar;D:\__ENV__\repo\org\springframework\spring-context\3.2.4.RELEASE\spring-context-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-aop\3.2.4.RELEASE\spring-aop-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-expression\3.2.4.RELEASE\spring-expression-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-oxm\3.2.4.RELEASE\spring-oxm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\__ENV__\repo\org\springframework\spring-web\3.2.4.RELEASE\spring-web-3.2.4.RELEASE.jar;D:\__ENV__\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\__ENV__\repo\org\springframework\spring-webmvc\3.2.4.RELEASE\spring-webmvc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-orm\3.2.4.RELEASE\spring-orm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-jdbc\3.2.4.RELEASE\spring-jdbc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-tx\3.2.4.RELEASE\spring-tx-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-test\3.2.4.RELEASE\spring-test-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\__ENV__\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\__ENV__\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\__ENV__\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\__ENV__\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-validator\4.2.0.Final\hibernate-validator-4.2.0.Final.jar;D:\__ENV__\repo\javax\validation\validation-api\1.0.0.GA\validation-api-1.0.0.GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-core\4.2.10.Final\hibernate-core-4.2.10.Final.jar;D:\__ENV__\repo\antlr\antlr\2.7.7\antlr-2.7.7.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.1.Final\jboss-transaction-api_1.1_spec-1.0.1.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpcore\4.3.1\httpcore-4.3.1.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpclient\4.3.1\httpclient-4.3.1.jar;D:\__ENV__\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\__ENV__\repo\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpmime\4.3.1\httpmime-4.3.1.jar;D:\__ENV__\repo\redis\clients\jedis\2.7.2\jedis-2.7.2.jar;D:\__ENV__\repo\org\apache\commons\commons-pool2\2.3\commons-pool2-2.3.jar;D:\__ENV__\repo\javax\persistence\persistence-api\1.0.2\persistence-api-1.0.2.jar;D:\__ENV__\repo\org\ansj\ansj_seg\0.9\ansj_seg-0.9.jar;D:\__ENV__\repo\org\ansj\tree_split\1.0.1\tree_split-1.0.1.jar;D:\__ENV__\repo\org\apache\commons-lang3\commons-lang3\3.1\commons-lang3-3.1.jar;D:\__ENV__\repo\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;D:\__ENV__\repo\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;D:\__ENV__\repo\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;D:\__ENV__\repo\commons-io\commons-io\2.4\commons-io-2.4.jar;D:\__ENV__\repo\commons-fileupload\commons-fileupload\1.2.2\commons-fileupload-1.2.2.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\__ENV__\repo\com\googlecode\xmemcached\xmemcached\1.4.1\xmemcached-1.4.1.jar;D:\__ENV__\repo\net\sf\json-lib\json-lib\2.4\json-lib-2.4-jdk15.jar;D:\__ENV__\repo\commons-beanutils\commons-beanutils\1.8.0\commons-beanutils-1.8.0.jar;D:\__ENV__\repo\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;D:\__ENV__\repo\net\sf\ezmorph\ezmorph\1.0.6\ezmorph-1.0.6.jar;D:\__ENV__\repo\org\mybatis\mybatis\3.1.1\mybatis-3.1.1.jar;D:\__ENV__\repo\org\mybatis\mybatis-spring\1.1.1\mybatis-spring-1.1.1.jar;D:\__ENV__\repo\junit\junit\4.11\junit-4.11.jar;D:\__ENV__\repo\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/358/1/.cp/;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/357/1/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.classLoader.application=sun.misc.Launcher$AppClassLoader@3b07d329, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=D:\Java\jdk1.8.0_40\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 61309 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -test com.it_sucre.service.HibernateServiceTest:test, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_40, java.ext.dirs=D:\Java\jdk1.8.0_40\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=D:\Java\jdk1.8.0_40\jre\lib\resources.jar;D:\Java\jdk1.8.0_40\jre\lib\rt.jar;D:\Java\jdk1.8.0_40\jre\lib\sunrsasign.jar;D:\Java\jdk1.8.0_40\jre\lib\jsse.jar;D:\Java\jdk1.8.0_40\jre\lib\jce.jar;D:\Java\jdk1.8.0_40\jre\lib\charsets.jar;D:\Java\jdk1.8.0_40\jre\lib\jfr.jar;D:\Java\jdk1.8.0_40\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}  
[DEBUG] 2015-12-01 15:28:13,021(1580) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[DEBUG] 2015-12-01 15:28:13,345(1904) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3604) –> [main] Static SQL for entity: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:28:13,347(1906) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3609) –> [main]  Version select: select id from test where id =?  
[DEBUG] 2015-12-01 15:28:13,348(1907) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3612) –> [main]  Snapshot select: select testentity_.id, testentity_.name as name2_0_ from test testentity_ where testentity_.id=?  
[DEBUG] 2015-12-01 15:28:13,351(1910) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3615) –> [main]  Insert 0: insert into test (name, id) values (?, ?)  
[DEBUG] 2015-12-01 15:28:13,352(1911) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3616) –> [main]  Update 0: update test set name=? where id=?  
[DEBUG] 2015-12-01 15:28:13,357(1916) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3617) –> [main]  Delete 0: delete from test where id=?  
[DEBUG] 2015-12-01 15:28:13,421(1980) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [NONE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:28:13,422(1981) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:28:13,424(1983) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:28:13,427(1986) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE_NOWAIT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:28:13,429(1988) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [FORCE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:28:13,430(1989) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? lock in share mode  
[DEBUG] 2015-12-01 15:28:13,431(1990) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_WRITE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:28:13,432(1991) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:28:13,433(1992) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:28:13,436(1995) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:28:13,461(2020) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:28:13,464(2023) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:28:13,622(2181) org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:62) –> [main] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@770d0ea6  
[DEBUG] 2015-12-01 15:28:13,623(2182) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:75) –> [main] Registering SessionFactory: 636f9c6a-e923-4a8f-af8e-331439f7afb5 (<unnamed>)  
[DEBUG] 2015-12-01 15:28:13,633(2192) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:82) –> [main] Not binding SessionFactory to JNDI, no JNDI name configured  
[DEBUG] 2015-12-01 15:28:13,634(2193) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:492) –> [main] Instantiated session factory  
[INFO ] 2015-12-01 15:28:13,646(2205) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:182) –> [main] HHH000228: Running hbm2ddl schema update  
[INFO ] 2015-12-01 15:28:13,648(2207) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:193) –> [main] HHH000102: Fetching database metadata  
[INFO ] 2015-12-01 15:28:13,662(2221) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:205) –> [main] HHH000396: Updating schema  
[DEBUG] 2015-12-01 15:28:13,663(2222) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:28:13,664(2223) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:28:13,665(2224) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:28:13,670(2229) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:28:13,671(2230) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:28:13,672(2231) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:28:13,672(2231) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:28:13,673(2232) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:28:13,674(2233) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:28:13,674(2233) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[INFO ] 2015-12-01 15:28:13,774(2333) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] HHH000261: Table found: Test.test  
[INFO ] 2015-12-01 15:28:13,777(2336) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:67) –> [main] HHH000037: Columns: [name, id]  
[INFO ] 2015-12-01 15:28:13,781(2340) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] HHH000108: Foreign keys: []  
[INFO ] 2015-12-01 15:28:13,782(2341) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:70) –> [main] HHH000126: Indexes: [primary]  
[DEBUG] 2015-12-01 15:28:13,785(2344) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-12-01 15:28:13,787(2346) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:242) –> [main] HHH000232: Schema update complete  
[DEBUG] 2015-12-01 15:28:13,802(2361) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1073) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-12-01 15:28:13,803(2362) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1096) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-12-01 15:28:13,824(2383) org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:110) –> [main] Statistics initialized [enabled=false]  
[DEBUG] 2015-12-01 15:28:14,630(3189) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:212) –> [main] Obtaining JDBC connection  
[DEBUG] 2015-12-01 15:28:14,631(3190) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:218) –> [main] Obtained JDBC connection  
[DEBUG] 2015-12-01 15:28:14,647(3206) org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) –> [main] begin  
[DEBUG] 2015-12-01 15:28:14,648(3207) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) –> [main] initial autocommit status: true  
[DEBUG] 2015-12-01 15:28:14,651(3210) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) –> [main] disabling autocommit  
[DEBUG] 2015-12-01 15:28:14,813(3372) org.hibernate.engine.transaction.spi.AbstractTransactionImpl.rollback(AbstractTransactionImpl.java:203) –> [main] rolling back  
[DEBUG] 2015-12-01 15:28:14,822(3381) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doRollback(JdbcTransaction.java:164) –> [main] rolled JDBC Connection  
[DEBUG] 2015-12-01 15:28:14,823(3382) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) –> [main] re-enabling autocommit  
[DEBUG] 2015-12-01 15:28:14,832(3391) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:232) –> [main] Releasing JDBC connection  
[DEBUG] 2015-12-01 15:28:14,833(3392) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:250) –> [main] Released JDBC connection  
[DEBUG] 2015-12-01 15:28:14,877(3436) org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1374) –> [Thread-2] HHH000031: Closing  
[DEBUG] 2015-12-01 15:28:55,838(0) org.hibernate.cfg.Configuration.<clinit>(Configuration.java:184) –> [main] Logging Provider: org.jboss.logging.Log4jLoggerProvider  
[DEBUG] 2015-12-01 15:28:55,869(31) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@649bec2e  
[DEBUG] 2015-12-01 15:28:55,869(31) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@649bec2e  
[DEBUG] 2015-12-01 15:28:55,869(31) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@649bec2e  
[DEBUG] 2015-12-01 15:28:55,869(31) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@306f16f3  
[DEBUG] 2015-12-01 15:28:55,885(47) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@5f9b2141  
[DEBUG] 2015-12-01 15:28:55,885(47) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@6c130c45  
[DEBUG] 2015-12-01 15:28:55,901(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@932bc4a  
[DEBUG] 2015-12-01 15:28:55,901(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@932bc4a  
[DEBUG] 2015-12-01 15:28:55,901(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@932bc4a  
[DEBUG] 2015-12-01 15:28:55,901(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@793be5ca  
[DEBUG] 2015-12-01 15:28:55,901(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@793be5ca  
[DEBUG] 2015-12-01 15:28:55,901(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@793be5ca  
[DEBUG] 2015-12-01 15:28:55,901(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@7ea9e1e2  
[DEBUG] 2015-12-01 15:28:55,901(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@7ea9e1e2  
[DEBUG] 2015-12-01 15:28:55,901(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7ea9e1e2  
[DEBUG] 2015-12-01 15:28:55,901(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@2053d869  
[DEBUG] 2015-12-01 15:28:55,901(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@2053d869  
[DEBUG] 2015-12-01 15:28:55,901(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2053d869  
[DEBUG] 2015-12-01 15:28:55,916(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@10d307f1  
[DEBUG] 2015-12-01 15:28:55,916(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@10d307f1  
[DEBUG] 2015-12-01 15:28:55,916(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@10d307f1  
[DEBUG] 2015-12-01 15:28:55,916(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@581ac8a8  
[DEBUG] 2015-12-01 15:28:55,916(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@581ac8a8  
[DEBUG] 2015-12-01 15:28:55,916(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@581ac8a8  
[DEBUG] 2015-12-01 15:28:55,916(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@2a54a73f  
[DEBUG] 2015-12-01 15:28:55,916(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@2a54a73f  
[DEBUG] 2015-12-01 15:28:55,916(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2a54a73f  
[DEBUG] 2015-12-01 15:28:55,932(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@383bfa16  
[DEBUG] 2015-12-01 15:28:55,932(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@383bfa16  
[DEBUG] 2015-12-01 15:28:55,932(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3232a28a  
[DEBUG] 2015-12-01 15:28:55,932(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3232a28a  
[DEBUG] 2015-12-01 15:28:55,932(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration string -> org.hibernate.type.StringType@4229bb3f  
[DEBUG] 2015-12-01 15:28:55,932(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@4229bb3f  
[DEBUG] 2015-12-01 15:28:55,932(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7205765b  
[DEBUG] 2015-12-01 15:28:55,947(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@611889f4  
[DEBUG] 2015-12-01 15:28:55,947(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration url -> org.hibernate.type.UrlType@5acf93bb  
[DEBUG] 2015-12-01 15:28:55,947(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@5acf93bb  
[DEBUG] 2015-12-01 15:28:55,947(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration date -> org.hibernate.type.DateType@543588e6  
[DEBUG] 2015-12-01 15:28:55,947(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@543588e6  
[DEBUG] 2015-12-01 15:28:55,947(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration time -> org.hibernate.type.TimeType@5ba3f27a  
[DEBUG] 2015-12-01 15:28:55,947(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5ba3f27a  
[DEBUG] 2015-12-01 15:28:55,963(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@209da20d  
[DEBUG] 2015-12-01 15:28:55,963(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@209da20d  
[DEBUG] 2015-12-01 15:28:55,963(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@209da20d  
[DEBUG] 2015-12-01 15:28:55,963(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@43dac38f  
[DEBUG] 2015-12-01 15:28:55,963(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@54bff557  
[DEBUG] 2015-12-01 15:28:55,963(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@54bff557  
[DEBUG] 2015-12-01 15:28:55,963(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@54bff557  
[DEBUG] 2015-12-01 15:28:55,979(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@37d4349f  
[DEBUG] 2015-12-01 15:28:55,979(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@3a44431a  
[DEBUG] 2015-12-01 15:28:55,979(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3a44431a  
[DEBUG] 2015-12-01 15:28:55,979(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@53ce1329  
[DEBUG] 2015-12-01 15:28:55,979(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@53ce1329  
[DEBUG] 2015-12-01 15:28:55,994(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@957e06  
[DEBUG] 2015-12-01 15:28:55,994(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@957e06  
[DEBUG] 2015-12-01 15:28:55,994(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration class -> org.hibernate.type.ClassType@36916eb0  
[DEBUG] 2015-12-01 15:28:55,994(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@36916eb0  
[DEBUG] 2015-12-01 15:28:55,994(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@71a8adcf  
[DEBUG] 2015-12-01 15:28:55,994(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@71a8adcf  
[DEBUG] 2015-12-01 15:28:55,994(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@47e2e487  
[DEBUG] 2015-12-01 15:28:55,994(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@47d9a273  
[DEBUG] 2015-12-01 15:28:56,010(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@4659191b  
[DEBUG] 2015-12-01 15:28:56,010(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@4659191b  
[DEBUG] 2015-12-01 15:28:56,010(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@4659191b  
[DEBUG] 2015-12-01 15:28:56,010(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@59505b48  
[DEBUG] 2015-12-01 15:28:56,010(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@59505b48  
[DEBUG] 2015-12-01 15:28:56,010(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@59505b48  
[DEBUG] 2015-12-01 15:28:56,010(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration image -> org.hibernate.type.ImageType@72e5a8e  
[DEBUG] 2015-12-01 15:28:56,026(188) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@783a467b  
[DEBUG] 2015-12-01 15:28:56,026(188) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@783a467b  
[DEBUG] 2015-12-01 15:28:56,026(188) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@783a467b  
[DEBUG] 2015-12-01 15:28:56,026(188) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@942a29c  
[DEBUG] 2015-12-01 15:28:56,026(188) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@942a29c  
[DEBUG] 2015-12-01 15:28:56,041(203) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@942a29c  
[DEBUG] 2015-12-01 15:28:56,041(203) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration text -> org.hibernate.type.TextType@5e600dd5  
[DEBUG] 2015-12-01 15:28:56,041(203) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ntext -> org.hibernate.type.NTextType@a38c7fe  
[DEBUG] 2015-12-01 15:28:56,057(219) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@13e344d  
[DEBUG] 2015-12-01 15:28:56,057(219) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@13e344d  
[DEBUG] 2015-12-01 15:28:56,057(219) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@60099951  
[DEBUG] 2015-12-01 15:28:56,072(234) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@f78a47e  
[DEBUG] 2015-12-01 15:28:56,072(234) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@f78a47e  
[DEBUG] 2015-12-01 15:28:56,088(250) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nclob -> org.hibernate.type.NClobType@470734c3  
[DEBUG] 2015-12-01 15:28:56,088(250) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@470734c3  
[DEBUG] 2015-12-01 15:28:56,088(250) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@25ce9dc4  
[DEBUG] 2015-12-01 15:28:56,088(250) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@27406a17  
[DEBUG] 2015-12-01 15:28:56,088(250) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@563f38c4  
[DEBUG] 2015-12-01 15:28:56,088(250) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@7161d8d1  
[DEBUG] 2015-12-01 15:28:56,088(250) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7161d8d1  
[DEBUG] 2015-12-01 15:28:56,088(250) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@795509d9  
[DEBUG] 2015-12-01 15:28:56,104(266) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5149d738  
[DEBUG] 2015-12-01 15:28:56,104(266) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3a7442c7  
[DEBUG] 2015-12-01 15:28:56,104(266) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@548d708a  
[DEBUG] 2015-12-01 15:28:56,104(266) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@53fb3dab  
[DEBUG] 2015-12-01 15:28:56,104(266) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@33065d67  
[DEBUG] 2015-12-01 15:28:56,104(266) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7bba5817  
[DEBUG] 2015-12-01 15:28:56,104(266) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@75437611  
[INFO ] 2015-12-01 15:28:56,151(313) org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66) –> [main] HCANN000001: Hibernate Commons Annotations {4.0.4.Final}  
[INFO ] 2015-12-01 15:28:56,182(344) org.hibernate.Version.logVersion(Version.java:41) –> [main] HHH000412: Hibernate Core {4.2.10.Final}  
[INFO ] 2015-12-01 15:28:56,182(344) org.hibernate.cfg.Environment.<clinit>(Environment.java:238) –> [main] HHH000206: hibernate.properties not found  
[INFO ] 2015-12-01 15:28:56,197(359) org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:345) –> [main] HHH000021: Bytecode provider name : javassist  
[DEBUG] 2015-12-01 15:28:56,213(375) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-12-01 15:28:56,229(391) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-12-01 15:28:56,229(391) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:28:56,229(391) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:28:56,229(391) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-12-01 15:28:56,229(391) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]  
[DEBUG] 2015-12-01 15:28:56,229(391) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-12-01 15:28:56,229(391) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-12-01 15:28:56,229(391) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-12-01 15:28:56,244(406) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-12-01 15:28:56,244(406) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-12-01 15:28:56,244(406) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-12-01 15:28:56,244(406) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-12-01 15:28:56,244(406) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-12-01 15:28:56,244(406) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]  
[DEBUG] 2015-12-01 15:28:56,291(453) org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) –> [main] Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].  
[DEBUG] 2015-12-01 15:28:56,338(500) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1781) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-12-01 15:28:56,760(922) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:121) –> [main] Database ->
       name : MySQL
    version : 5.6.22
      major : 5
      minor : 6  
[DEBUG] 2015-12-01 15:28:56,766(928) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:127) –> [main] Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[DEBUG] 2015-12-01 15:28:56,767(929) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:133) –> [main] JDBC version : 4.0  
[INFO ] 2015-12-01 15:28:56,798(960) org.hibernate.dialect.Dialect.<init>(Dialect.java:130) –> [main] HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-12-01 15:28:56,814(976) org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:120) –> [main] HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException  
[DEBUG] 2015-12-01 15:28:56,861(1023) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:28:56,861(1023) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:28:56,861(1023) org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:534) –> [main] Binding entity from annotated class: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:28:56,907(1069) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}  
[DEBUG] 2015-12-01 15:28:56,907(1069) org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1118) –> [main] No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED  
[DEBUG] 2015-12-01 15:28:56,954(1116) org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:394) –> [main] Import with entity name TestEntity  
[DEBUG] 2015-12-01 15:28:56,970(1132) org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:564) –> [main] Bind entity com.it_sucre.entity.TestEntity on table test  
[DEBUG] 2015-12-01 15:28:57,017(1179) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=id, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:28:57,032(1194) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property id with lazy=false  
[DEBUG] 2015-12-01 15:28:57,048(1210) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for id  
[DEBUG] 2015-12-01 15:28:57,048(1210) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property id  
[DEBUG] 2015-12-01 15:28:57,064(1226) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=name, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:28:57,064(1226) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property name with lazy=false  
[DEBUG] 2015-12-01 15:28:57,064(1226) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for name  
[DEBUG] 2015-12-01 15:28:57,064(1226) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property name  
[DEBUG] 2015-12-01 15:28:57,064(1226) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for id  
[DEBUG] 2015-12-01 15:28:57,079(1241) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for name  
[DEBUG] 2015-12-01 15:28:57,079(1241) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:28:57,079(1241) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:28:57,079(1241) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:28:57,079(1241) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:28:57,079(1241) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:28:57,079(1241) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:28:57,079(1241) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:28:57,079(1241) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[DEBUG] 2015-12-01 15:28:57,095(1257) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:117) –> [main] Automatic flush during beforeCompletion(): disabled  
[DEBUG] 2015-12-01 15:28:57,095(1257) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:123) –> [main] Automatic session close at end of transaction: disabled  
[DEBUG] 2015-12-01 15:28:57,095(1257) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:134) –> [main] JDBC batch size: 15  
[DEBUG] 2015-12-01 15:28:57,095(1257) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:140) –> [main] JDBC batch updates for versioned data: disabled  
[DEBUG] 2015-12-01 15:28:57,095(1257) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:150) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-12-01 15:28:57,095(1257) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:156) –> [main] Wrap result sets: disabled  
[DEBUG] 2015-12-01 15:28:57,095(1257) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:162) –> [main] JDBC3 getGeneratedKeys(): enabled  
[DEBUG] 2015-12-01 15:28:57,095(1257) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:174) –> [main] multi-tenancy strategy : NONE  
[DEBUG] 2015-12-01 15:28:57,095(1257) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:180) –> [main] Connection release mode: auto  
[INFO ] 2015-12-01 15:28:57,095(1257) org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:68) –> [main] HHH000399: Using default transaction strategy (direct JDBC transactions)  
[DEBUG] 2015-12-01 15:28:57,111(1273) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Using BatchFetchStyle : LEGACY  
[DEBUG] 2015-12-01 15:28:57,111(1273) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:221) –> [main] Maximum outer join fetch depth: 2  
[DEBUG] 2015-12-01 15:28:57,111(1273) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:227) –> [main] Default batch fetch size: 1  
[DEBUG] 2015-12-01 15:28:57,111(1273) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:233) –> [main] Generate SQL with comments: disabled  
[DEBUG] 2015-12-01 15:28:57,111(1273) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:239) –> [main] Order SQL updates by primary key: disabled  
[DEBUG] 2015-12-01 15:28:57,111(1273) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Order SQL inserts for batching: disabled  
[DEBUG] 2015-12-01 15:28:57,111(1273) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Default null ordering: none  
[DEBUG] 2015-12-01 15:28:57,111(1273) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:584) –> [main] Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-12-01 15:28:57,111(1273) org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) –> [main] HHH000397: Using ASTQueryTranslatorFactory  
[DEBUG] 2015-12-01 15:28:57,111(1273) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:263) –> [main] Query language substitutions: {}  
[DEBUG] 2015-12-01 15:28:57,111(1273) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:269) –> [main] JPA-QL strict compliance: disabled  
[DEBUG] 2015-12-01 15:28:57,126(1288) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:277) –> [main] Second-level cache: enabled  
[DEBUG] 2015-12-01 15:28:57,126(1288) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:283) –> [main] Query cache: disabled  
[DEBUG] 2015-12-01 15:28:57,142(1304) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:524) –> [main] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory  
[DEBUG] 2015-12-01 15:28:57,142(1304) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:534) –> [main] org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.  
[DEBUG] 2015-12-01 15:28:57,142(1304) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:306) –> [main] Optimize cache for minimal puts: disabled  
[DEBUG] 2015-12-01 15:28:57,142(1304) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:321) –> [main] Structured second-level cache entries: disabled  
[DEBUG] 2015-12-01 15:28:57,142(1304) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:331) –> [main] Second-level cache direct-reference entries: disabled  
[DEBUG] 2015-12-01 15:28:57,142(1304) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:339) –> [main] Statistics: disabled  
[DEBUG] 2015-12-01 15:28:57,142(1304) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:345) –> [main] Deleted entity synthetic identifier rollback: disabled  
[DEBUG] 2015-12-01 15:28:57,142(1304) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:372) –> [main] Default entity-mode: pojo  
[DEBUG] 2015-12-01 15:28:57,142(1304) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:378) –> [main] Named query checking : enabled  
[DEBUG] 2015-12-01 15:28:57,157(1319) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:384) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): enabled  
[DEBUG] 2015-12-01 15:28:57,157(1319) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:402) –> [main] Allow initialization of lazy state outside session : : disabled  
[DEBUG] 2015-12-01 15:28:57,157(1319) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:412) –> [main] JTA Track by Thread: enabled  
[DEBUG] 2015-12-01 15:28:57,173(1335) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Building session factory  
[DEBUG] 2015-12-01 15:28:57,189(1351) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:280) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-12-01 15:28:57,189(1351) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:281) –> [main] Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=D:\Java\jdk1.8.0_40\jre\bin, java.vm.version=25.40-b25, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\Java\workspace\demo-chained-transactionmanager, java.runtime.version=1.8.0_40-b26, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=thread, java.endorsed.dirs=D:\Java\jdk1.8.0_40\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\奇点之~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8.1, sun.jnu.encoding=GBK, java.library.path=D:\Java\jdk1.8.0_40\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/jdk1.8.0_40/bin/../jre/bin/server;D:/Java/jdk1.8.0_40/bin/../jre/bin;D:/Java/jdk1.8.0_40/bin/../jre/lib/amd64;D:\Java\jdk1.8.0_40/bin;D:\Java\jdk1.8.0_40/lib/dt.jar;D:\Java\jdk1.8.0_40/lib/tools.jar;D:\__ENV__\apache-maven-3.2.1/bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__ENV__\apache-tomcat-7.0.57\bin;D:\__ENV__\apache-tomcat-7.0.57\jre;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\TortoiseSVN\bin;D:\__ENV__\eclipse;;., hibernate.connection.datasource=org.apache.commons.dbcp.BasicDataSource@4983159f, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=6.3, user.home=C:\Users\奇点之光08老师, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=奇点之光08老师, java.class.path=D:\Java\workspace\demo-chained-transactionmanager\target\test-classes;D:\Java\workspace\demo-chained-transactionmanager\target\classes;D:\__ENV__\repo\ch\qos\logback\logback-core\0.9.28\logback-core-0.9.28.jar;D:\__ENV__\repo\ch\qos\logback\logback-classic\0.9.28\logback-classic-0.9.28.jar;D:\__ENV__\repo\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;D:\__ENV__\repo\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;D:\__ENV__\repo\org\slf4j\slf4j-api\1.7.7\slf4j-api-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-jdk14\1.7.7\slf4j-jdk14-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-log4j12\1.7.7\slf4j-log4j12-1.7.7.jar;D:\__ENV__\repo\mysql\mysql-connector-java\5.1.26\mysql-connector-java-5.1.26.jar;D:\__ENV__\repo\log4j\log4j\1.2.14\log4j-1.2.14.jar;D:\__ENV__\repo\org\springframework\data\spring-data-commons\1.8.0.RELEASE\spring-data-commons-1.8.0.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\slf4j\jcl-over-slf4j\1.7.7\jcl-over-slf4j-1.7.7.jar;D:\__ENV__\repo\org\springframework\spring-context\3.2.4.RELEASE\spring-context-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-aop\3.2.4.RELEASE\spring-aop-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-expression\3.2.4.RELEASE\spring-expression-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-oxm\3.2.4.RELEASE\spring-oxm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\__ENV__\repo\org\springframework\spring-web\3.2.4.RELEASE\spring-web-3.2.4.RELEASE.jar;D:\__ENV__\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\__ENV__\repo\org\springframework\spring-webmvc\3.2.4.RELEASE\spring-webmvc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-orm\3.2.4.RELEASE\spring-orm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-jdbc\3.2.4.RELEASE\spring-jdbc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-tx\3.2.4.RELEASE\spring-tx-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-test\3.2.4.RELEASE\spring-test-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\__ENV__\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\__ENV__\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\__ENV__\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\__ENV__\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-validator\4.2.0.Final\hibernate-validator-4.2.0.Final.jar;D:\__ENV__\repo\javax\validation\validation-api\1.0.0.GA\validation-api-1.0.0.GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-core\4.2.10.Final\hibernate-core-4.2.10.Final.jar;D:\__ENV__\repo\antlr\antlr\2.7.7\antlr-2.7.7.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.1.Final\jboss-transaction-api_1.1_spec-1.0.1.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpcore\4.3.1\httpcore-4.3.1.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpclient\4.3.1\httpclient-4.3.1.jar;D:\__ENV__\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\__ENV__\repo\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpmime\4.3.1\httpmime-4.3.1.jar;D:\__ENV__\repo\redis\clients\jedis\2.7.2\jedis-2.7.2.jar;D:\__ENV__\repo\org\apache\commons\commons-pool2\2.3\commons-pool2-2.3.jar;D:\__ENV__\repo\javax\persistence\persistence-api\1.0.2\persistence-api-1.0.2.jar;D:\__ENV__\repo\org\ansj\ansj_seg\0.9\ansj_seg-0.9.jar;D:\__ENV__\repo\org\ansj\tree_split\1.0.1\tree_split-1.0.1.jar;D:\__ENV__\repo\org\apache\commons-lang3\commons-lang3\3.1\commons-lang3-3.1.jar;D:\__ENV__\repo\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;D:\__ENV__\repo\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;D:\__ENV__\repo\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;D:\__ENV__\repo\commons-io\commons-io\2.4\commons-io-2.4.jar;D:\__ENV__\repo\commons-fileupload\commons-fileupload\1.2.2\commons-fileupload-1.2.2.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\__ENV__\repo\com\googlecode\xmemcached\xmemcached\1.4.1\xmemcached-1.4.1.jar;D:\__ENV__\repo\net\sf\json-lib\json-lib\2.4\json-lib-2.4-jdk15.jar;D:\__ENV__\repo\commons-beanutils\commons-beanutils\1.8.0\commons-beanutils-1.8.0.jar;D:\__ENV__\repo\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;D:\__ENV__\repo\net\sf\ezmorph\ezmorph\1.0.6\ezmorph-1.0.6.jar;D:\__ENV__\repo\org\mybatis\mybatis\3.1.1\mybatis-3.1.1.jar;D:\__ENV__\repo\org\mybatis\mybatis-spring\1.1.1\mybatis-spring-1.1.1.jar;D:\__ENV__\repo\junit\junit\4.11\junit-4.11.jar;D:\__ENV__\repo\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/358/1/.cp/;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/357/1/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.classLoader.application=sun.misc.Launcher$AppClassLoader@3b07d329, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=D:\Java\jdk1.8.0_40\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 61316 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -test com.it_sucre.service.HibernateServiceTest:test, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_40, java.ext.dirs=D:\Java\jdk1.8.0_40\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=D:\Java\jdk1.8.0_40\jre\lib\resources.jar;D:\Java\jdk1.8.0_40\jre\lib\rt.jar;D:\Java\jdk1.8.0_40\jre\lib\sunrsasign.jar;D:\Java\jdk1.8.0_40\jre\lib\jsse.jar;D:\Java\jdk1.8.0_40\jre\lib\jce.jar;D:\Java\jdk1.8.0_40\jre\lib\charsets.jar;D:\Java\jdk1.8.0_40\jre\lib\jfr.jar;D:\Java\jdk1.8.0_40\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}  
[DEBUG] 2015-12-01 15:28:57,407(1569) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[DEBUG] 2015-12-01 15:28:57,720(1882) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3604) –> [main] Static SQL for entity: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:28:57,720(1882) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3609) –> [main]  Version select: select id from test where id =?  
[DEBUG] 2015-12-01 15:28:57,736(1898) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3612) –> [main]  Snapshot select: select testentity_.id, testentity_.name as name2_0_ from test testentity_ where testentity_.id=?  
[DEBUG] 2015-12-01 15:28:57,736(1898) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3615) –> [main]  Insert 0: insert into test (name, id) values (?, ?)  
[DEBUG] 2015-12-01 15:28:57,736(1898) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3616) –> [main]  Update 0: update test set name=? where id=?  
[DEBUG] 2015-12-01 15:28:57,736(1898) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3617) –> [main]  Delete 0: delete from test where id=?  
[DEBUG] 2015-12-01 15:28:57,798(1960) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [NONE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:28:57,804(1966) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:28:57,805(1967) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:28:57,805(1967) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE_NOWAIT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:28:57,805(1967) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [FORCE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:28:57,805(1967) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? lock in share mode  
[DEBUG] 2015-12-01 15:28:57,805(1967) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_WRITE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:28:57,805(1967) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:28:57,805(1967) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:28:57,805(1967) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:28:57,821(1983) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:28:57,821(1983) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:28:57,915(2077) org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:62) –> [main] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3bd7f8dc  
[DEBUG] 2015-12-01 15:28:57,915(2077) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:75) –> [main] Registering SessionFactory: c535031e-2b38-4d98-9b19-d7b99eed6479 (<unnamed>)  
[DEBUG] 2015-12-01 15:28:57,915(2077) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:82) –> [main] Not binding SessionFactory to JNDI, no JNDI name configured  
[DEBUG] 2015-12-01 15:28:57,915(2077) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:492) –> [main] Instantiated session factory  
[INFO ] 2015-12-01 15:28:57,930(2092) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:182) –> [main] HHH000228: Running hbm2ddl schema update  
[INFO ] 2015-12-01 15:28:57,930(2092) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:193) –> [main] HHH000102: Fetching database metadata  
[INFO ] 2015-12-01 15:28:57,930(2092) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:205) –> [main] HHH000396: Updating schema  
[DEBUG] 2015-12-01 15:28:57,930(2092) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:28:57,930(2092) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:28:57,930(2092) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:28:57,930(2092) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:28:57,930(2092) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:28:57,930(2092) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:28:57,930(2092) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:28:57,930(2092) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:28:57,930(2092) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:28:57,930(2092) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[INFO ] 2015-12-01 15:28:57,962(2124) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] HHH000261: Table found: Test.test  
[INFO ] 2015-12-01 15:28:57,977(2139) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:67) –> [main] HHH000037: Columns: [name, id]  
[INFO ] 2015-12-01 15:28:57,977(2139) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] HHH000108: Foreign keys: []  
[INFO ] 2015-12-01 15:28:57,977(2139) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:70) –> [main] HHH000126: Indexes: [primary]  
[DEBUG] 2015-12-01 15:28:57,977(2139) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-12-01 15:28:57,977(2139) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:242) –> [main] HHH000232: Schema update complete  
[DEBUG] 2015-12-01 15:28:57,977(2139) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1073) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-12-01 15:28:57,977(2139) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1096) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-12-01 15:28:57,993(2155) org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:110) –> [main] Statistics initialized [enabled=false]  
[DEBUG] 2015-12-01 15:28:58,384(2546) org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1374) –> [Thread-2] HHH000031: Closing  
[DEBUG] 2015-12-01 15:30:31,442(0) org.hibernate.cfg.Configuration.<clinit>(Configuration.java:184) –> [main] Logging Provider: org.jboss.logging.Log4jLoggerProvider  
[DEBUG] 2015-12-01 15:30:31,478(36) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@b62d79  
[DEBUG] 2015-12-01 15:30:31,479(37) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@b62d79  
[DEBUG] 2015-12-01 15:30:31,480(38) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@b62d79  
[DEBUG] 2015-12-01 15:30:31,482(40) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@34f5090e  
[DEBUG] 2015-12-01 15:30:31,485(43) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@22e357dc  
[DEBUG] 2015-12-01 15:30:31,489(47) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@15bbf42f  
[DEBUG] 2015-12-01 15:30:31,495(53) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@223aa2f7  
[DEBUG] 2015-12-01 15:30:31,496(54) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@223aa2f7  
[DEBUG] 2015-12-01 15:30:31,497(55) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@223aa2f7  
[DEBUG] 2015-12-01 15:30:31,500(58) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@2fd1433e  
[DEBUG] 2015-12-01 15:30:31,501(59) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@2fd1433e  
[DEBUG] 2015-12-01 15:30:31,502(60) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2fd1433e  
[DEBUG] 2015-12-01 15:30:31,506(64) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@33990a0c  
[DEBUG] 2015-12-01 15:30:31,507(65) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@33990a0c  
[DEBUG] 2015-12-01 15:30:31,508(66) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@33990a0c  
[DEBUG] 2015-12-01 15:30:31,512(70) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@10feca44  
[DEBUG] 2015-12-01 15:30:31,513(71) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@10feca44  
[DEBUG] 2015-12-01 15:30:31,514(72) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@10feca44  
[DEBUG] 2015-12-01 15:30:31,518(76) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@759d26fb  
[DEBUG] 2015-12-01 15:30:31,519(77) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@759d26fb  
[DEBUG] 2015-12-01 15:30:31,520(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@759d26fb  
[DEBUG] 2015-12-01 15:30:31,524(82) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@483f6d77  
[DEBUG] 2015-12-01 15:30:31,527(85) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@483f6d77  
[DEBUG] 2015-12-01 15:30:31,528(86) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@483f6d77  
[DEBUG] 2015-12-01 15:30:31,532(90) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@78123e82  
[DEBUG] 2015-12-01 15:30:31,533(91) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@78123e82  
[DEBUG] 2015-12-01 15:30:31,534(92) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@78123e82  
[DEBUG] 2015-12-01 15:30:31,537(95) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@bd4dc25  
[DEBUG] 2015-12-01 15:30:31,539(97) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@bd4dc25  
[DEBUG] 2015-12-01 15:30:31,543(101) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4d465b11  
[DEBUG] 2015-12-01 15:30:31,545(103) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4d465b11  
[DEBUG] 2015-12-01 15:30:31,547(105) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration string -> org.hibernate.type.StringType@73e22a3d  
[DEBUG] 2015-12-01 15:30:31,547(105) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@73e22a3d  
[DEBUG] 2015-12-01 15:30:31,551(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@56cdfb3b  
[DEBUG] 2015-12-01 15:30:31,554(112) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7205765b  
[DEBUG] 2015-12-01 15:30:31,556(114) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration url -> org.hibernate.type.UrlType@611889f4  
[DEBUG] 2015-12-01 15:30:31,557(115) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@611889f4  
[DEBUG] 2015-12-01 15:30:31,562(120) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration date -> org.hibernate.type.DateType@66d3eec0  
[DEBUG] 2015-12-01 15:30:31,564(122) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@66d3eec0  
[DEBUG] 2015-12-01 15:30:31,569(127) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration time -> org.hibernate.type.TimeType@5d7148e2  
[DEBUG] 2015-12-01 15:30:31,569(127) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5d7148e2  
[DEBUG] 2015-12-01 15:30:31,573(131) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@741a8937  
[DEBUG] 2015-12-01 15:30:31,574(132) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@741a8937  
[DEBUG] 2015-12-01 15:30:31,576(134) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@741a8937  
[DEBUG] 2015-12-01 15:30:31,583(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@209da20d  
[DEBUG] 2015-12-01 15:30:31,589(147) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@43dac38f  
[DEBUG] 2015-12-01 15:30:31,590(148) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@43dac38f  
[DEBUG] 2015-12-01 15:30:31,591(149) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@43dac38f  
[DEBUG] 2015-12-01 15:30:31,596(154) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@54bff557  
[DEBUG] 2015-12-01 15:30:31,598(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@37d4349f  
[DEBUG] 2015-12-01 15:30:31,599(157) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@37d4349f  
[DEBUG] 2015-12-01 15:30:31,600(158) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@3c7f66c4  
[DEBUG] 2015-12-01 15:30:31,601(159) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3c7f66c4  
[DEBUG] 2015-12-01 15:30:31,603(161) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@316bcf94  
[DEBUG] 2015-12-01 15:30:31,604(162) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@316bcf94  
[DEBUG] 2015-12-01 15:30:31,607(165) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration class -> org.hibernate.type.ClassType@32502377  
[DEBUG] 2015-12-01 15:30:31,608(166) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@32502377  
[DEBUG] 2015-12-01 15:30:31,612(170) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3cebbb30  
[DEBUG] 2015-12-01 15:30:31,613(171) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3cebbb30  
[DEBUG] 2015-12-01 15:30:31,614(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@49049a04  
[DEBUG] 2015-12-01 15:30:31,616(174) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@47e2e487  
[DEBUG] 2015-12-01 15:30:31,617(175) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@47d9a273  
[DEBUG] 2015-12-01 15:30:31,618(176) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@47d9a273  
[DEBUG] 2015-12-01 15:30:31,619(177) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@47d9a273  
[DEBUG] 2015-12-01 15:30:31,634(192) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4b0d79fc  
[DEBUG] 2015-12-01 15:30:31,635(193) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4b0d79fc  
[DEBUG] 2015-12-01 15:30:31,636(194) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4b0d79fc  
[DEBUG] 2015-12-01 15:30:31,638(196) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration image -> org.hibernate.type.ImageType@6bd61f98  
[DEBUG] 2015-12-01 15:30:31,640(198) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@72e5a8e  
[DEBUG] 2015-12-01 15:30:31,640(198) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@72e5a8e  
[DEBUG] 2015-12-01 15:30:31,641(199) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@72e5a8e  
[DEBUG] 2015-12-01 15:30:31,650(208) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@73e9cf30  
[DEBUG] 2015-12-01 15:30:31,652(210) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@73e9cf30  
[DEBUG] 2015-12-01 15:30:31,653(211) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@73e9cf30  
[DEBUG] 2015-12-01 15:30:31,658(216) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration text -> org.hibernate.type.TextType@5a45133e  
[DEBUG] 2015-12-01 15:30:31,672(230) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ntext -> org.hibernate.type.NTextType@5e600dd5  
[DEBUG] 2015-12-01 15:30:31,685(243) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@f09733f  
[DEBUG] 2015-12-01 15:30:31,687(245) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@f09733f  
[DEBUG] 2015-12-01 15:30:31,690(248) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@45099dd3  
[DEBUG] 2015-12-01 15:30:31,705(263) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@298a5e20  
[DEBUG] 2015-12-01 15:30:31,707(265) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@298a5e20  
[DEBUG] 2015-12-01 15:30:31,717(275) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nclob -> org.hibernate.type.NClobType@6e9175d8  
[DEBUG] 2015-12-01 15:30:31,718(276) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6e9175d8  
[DEBUG] 2015-12-01 15:30:31,719(277) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@8f2ef19  
[DEBUG] 2015-12-01 15:30:31,721(279) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@69e153c5  
[DEBUG] 2015-12-01 15:30:31,725(283) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@27406a17  
[DEBUG] 2015-12-01 15:30:31,732(290) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@235ecd9f  
[DEBUG] 2015-12-01 15:30:31,733(291) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@235ecd9f  
[DEBUG] 2015-12-01 15:30:31,736(294) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@74d1dc36  
[DEBUG] 2015-12-01 15:30:31,738(296) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@74e28667  
[DEBUG] 2015-12-01 15:30:31,741(299) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@663c9e7a  
[DEBUG] 2015-12-01 15:30:31,741(299) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@795509d9  
[DEBUG] 2015-12-01 15:30:31,742(300) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5149d738  
[DEBUG] 2015-12-01 15:30:31,753(311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3a7442c7  
[DEBUG] 2015-12-01 15:30:31,757(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@548d708a  
[DEBUG] 2015-12-01 15:30:31,759(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@53fb3dab  
[INFO ] 2015-12-01 15:30:31,803(361) org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66) –> [main] HCANN000001: Hibernate Commons Annotations {4.0.4.Final}  
[INFO ] 2015-12-01 15:30:31,812(370) org.hibernate.Version.logVersion(Version.java:41) –> [main] HHH000412: Hibernate Core {4.2.10.Final}  
[INFO ] 2015-12-01 15:30:31,817(375) org.hibernate.cfg.Environment.<clinit>(Environment.java:238) –> [main] HHH000206: hibernate.properties not found  
[INFO ] 2015-12-01 15:30:31,822(380) org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:345) –> [main] HHH000021: Bytecode provider name : javassist  
[DEBUG] 2015-12-01 15:30:31,845(403) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-12-01 15:30:31,846(404) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-12-01 15:30:31,847(405) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:30:31,848(406) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:30:31,850(408) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-12-01 15:30:31,852(410) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]  
[DEBUG] 2015-12-01 15:30:31,854(412) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-12-01 15:30:31,857(415) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-12-01 15:30:31,859(417) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-12-01 15:30:31,862(420) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-12-01 15:30:31,864(422) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-12-01 15:30:31,865(423) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-12-01 15:30:31,866(424) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-12-01 15:30:31,868(426) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-12-01 15:30:31,870(428) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]  
[DEBUG] 2015-12-01 15:30:31,926(484) org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) –> [main] Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].  
[DEBUG] 2015-12-01 15:30:31,983(541) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1781) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-12-01 15:30:32,424(982) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:121) –> [main] Database ->
       name : MySQL
    version : 5.6.22
      major : 5
      minor : 6  
[DEBUG] 2015-12-01 15:30:32,425(983) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:127) –> [main] Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[DEBUG] 2015-12-01 15:30:32,426(984) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:133) –> [main] JDBC version : 4.0  
[INFO ] 2015-12-01 15:30:32,468(1026) org.hibernate.dialect.Dialect.<init>(Dialect.java:130) –> [main] HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-12-01 15:30:32,486(1044) org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:120) –> [main] HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException  
[DEBUG] 2015-12-01 15:30:32,532(1090) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:30:32,533(1091) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:30:32,538(1096) org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:534) –> [main] Binding entity from annotated class: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:30:32,591(1149) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}  
[DEBUG] 2015-12-01 15:30:32,611(1169) org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1118) –> [main] No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED  
[DEBUG] 2015-12-01 15:30:32,658(1216) org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:394) –> [main] Import with entity name TestEntity  
[DEBUG] 2015-12-01 15:30:32,669(1227) org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:564) –> [main] Bind entity com.it_sucre.entity.TestEntity on table test  
[DEBUG] 2015-12-01 15:30:32,731(1289) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=id, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:30:32,738(1296) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property id with lazy=false  
[DEBUG] 2015-12-01 15:30:32,748(1306) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for id  
[DEBUG] 2015-12-01 15:30:32,753(1311) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property id  
[DEBUG] 2015-12-01 15:30:32,764(1322) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=name, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:30:32,765(1323) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property name with lazy=false  
[DEBUG] 2015-12-01 15:30:32,765(1323) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for name  
[DEBUG] 2015-12-01 15:30:32,766(1324) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property name  
[DEBUG] 2015-12-01 15:30:32,768(1326) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for id  
[DEBUG] 2015-12-01 15:30:32,769(1327) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for name  
[DEBUG] 2015-12-01 15:30:32,770(1328) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:30:32,774(1332) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:30:32,776(1334) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:30:32,776(1334) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:30:32,777(1335) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:30:32,778(1336) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:30:32,778(1336) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:30:32,779(1337) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[DEBUG] 2015-12-01 15:30:32,792(1350) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:117) –> [main] Automatic flush during beforeCompletion(): disabled  
[DEBUG] 2015-12-01 15:30:32,794(1352) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:123) –> [main] Automatic session close at end of transaction: disabled  
[DEBUG] 2015-12-01 15:30:32,795(1353) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:134) –> [main] JDBC batch size: 15  
[DEBUG] 2015-12-01 15:30:32,796(1354) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:140) –> [main] JDBC batch updates for versioned data: disabled  
[DEBUG] 2015-12-01 15:30:32,797(1355) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:150) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-12-01 15:30:32,797(1355) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:156) –> [main] Wrap result sets: disabled  
[DEBUG] 2015-12-01 15:30:32,798(1356) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:162) –> [main] JDBC3 getGeneratedKeys(): enabled  
[DEBUG] 2015-12-01 15:30:32,799(1357) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:174) –> [main] multi-tenancy strategy : NONE  
[DEBUG] 2015-12-01 15:30:32,800(1358) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:180) –> [main] Connection release mode: auto  
[INFO ] 2015-12-01 15:30:32,800(1358) org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:68) –> [main] HHH000399: Using default transaction strategy (direct JDBC transactions)  
[DEBUG] 2015-12-01 15:30:32,805(1363) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Using BatchFetchStyle : LEGACY  
[DEBUG] 2015-12-01 15:30:32,807(1365) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:221) –> [main] Maximum outer join fetch depth: 2  
[DEBUG] 2015-12-01 15:30:32,807(1365) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:227) –> [main] Default batch fetch size: 1  
[DEBUG] 2015-12-01 15:30:32,807(1365) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:233) –> [main] Generate SQL with comments: disabled  
[DEBUG] 2015-12-01 15:30:32,808(1366) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:239) –> [main] Order SQL updates by primary key: disabled  
[DEBUG] 2015-12-01 15:30:32,808(1366) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Order SQL inserts for batching: disabled  
[DEBUG] 2015-12-01 15:30:32,809(1367) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Default null ordering: none  
[DEBUG] 2015-12-01 15:30:32,810(1368) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:584) –> [main] Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-12-01 15:30:32,814(1372) org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) –> [main] HHH000397: Using ASTQueryTranslatorFactory  
[DEBUG] 2015-12-01 15:30:32,815(1373) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:263) –> [main] Query language substitutions: {}  
[DEBUG] 2015-12-01 15:30:32,816(1374) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:269) –> [main] JPA-QL strict compliance: disabled  
[DEBUG] 2015-12-01 15:30:32,816(1374) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:277) –> [main] Second-level cache: enabled  
[DEBUG] 2015-12-01 15:30:32,817(1375) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:283) –> [main] Query cache: disabled  
[DEBUG] 2015-12-01 15:30:32,843(1401) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:524) –> [main] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory  
[DEBUG] 2015-12-01 15:30:32,846(1404) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:534) –> [main] org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.  
[DEBUG] 2015-12-01 15:30:32,846(1404) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:306) –> [main] Optimize cache for minimal puts: disabled  
[DEBUG] 2015-12-01 15:30:32,847(1405) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:321) –> [main] Structured second-level cache entries: disabled  
[DEBUG] 2015-12-01 15:30:32,847(1405) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:331) –> [main] Second-level cache direct-reference entries: disabled  
[DEBUG] 2015-12-01 15:30:32,848(1406) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:339) –> [main] Statistics: disabled  
[DEBUG] 2015-12-01 15:30:32,848(1406) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:345) –> [main] Deleted entity synthetic identifier rollback: disabled  
[DEBUG] 2015-12-01 15:30:32,849(1407) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:372) –> [main] Default entity-mode: pojo  
[DEBUG] 2015-12-01 15:30:32,849(1407) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:378) –> [main] Named query checking : enabled  
[DEBUG] 2015-12-01 15:30:32,850(1408) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:384) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): enabled  
[DEBUG] 2015-12-01 15:30:32,850(1408) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:402) –> [main] Allow initialization of lazy state outside session : : disabled  
[DEBUG] 2015-12-01 15:30:32,850(1408) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:412) –> [main] JTA Track by Thread: enabled  
[DEBUG] 2015-12-01 15:30:32,866(1424) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Building session factory  
[DEBUG] 2015-12-01 15:30:32,882(1440) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:280) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-12-01 15:30:32,883(1441) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:281) –> [main] Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=D:\Java\jdk1.8.0_40\jre\bin, java.vm.version=25.40-b25, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\Java\workspace\demo-chained-transactionmanager, java.runtime.version=1.8.0_40-b26, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate4.SpringSessionContext, java.endorsed.dirs=D:\Java\jdk1.8.0_40\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\奇点之~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8.1, sun.jnu.encoding=GBK, java.library.path=D:\Java\jdk1.8.0_40\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/jdk1.8.0_40/bin/../jre/bin/server;D:/Java/jdk1.8.0_40/bin/../jre/bin;D:/Java/jdk1.8.0_40/bin/../jre/lib/amd64;D:\Java\jdk1.8.0_40/bin;D:\Java\jdk1.8.0_40/lib/dt.jar;D:\Java\jdk1.8.0_40/lib/tools.jar;D:\__ENV__\apache-maven-3.2.1/bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__ENV__\apache-tomcat-7.0.57\bin;D:\__ENV__\apache-tomcat-7.0.57\jre;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\TortoiseSVN\bin;D:\__ENV__\eclipse;;., hibernate.connection.datasource=org.apache.commons.dbcp.BasicDataSource@8692d67, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=6.3, user.home=C:\Users\奇点之光08老师, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=奇点之光08老师, java.class.path=D:\Java\workspace\demo-chained-transactionmanager\target\test-classes;D:\Java\workspace\demo-chained-transactionmanager\target\classes;D:\__ENV__\repo\ch\qos\logback\logback-core\0.9.28\logback-core-0.9.28.jar;D:\__ENV__\repo\ch\qos\logback\logback-classic\0.9.28\logback-classic-0.9.28.jar;D:\__ENV__\repo\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;D:\__ENV__\repo\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;D:\__ENV__\repo\org\slf4j\slf4j-api\1.7.7\slf4j-api-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-jdk14\1.7.7\slf4j-jdk14-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-log4j12\1.7.7\slf4j-log4j12-1.7.7.jar;D:\__ENV__\repo\mysql\mysql-connector-java\5.1.26\mysql-connector-java-5.1.26.jar;D:\__ENV__\repo\log4j\log4j\1.2.14\log4j-1.2.14.jar;D:\__ENV__\repo\org\springframework\data\spring-data-commons\1.8.0.RELEASE\spring-data-commons-1.8.0.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\slf4j\jcl-over-slf4j\1.7.7\jcl-over-slf4j-1.7.7.jar;D:\__ENV__\repo\org\springframework\spring-context\3.2.4.RELEASE\spring-context-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-aop\3.2.4.RELEASE\spring-aop-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-expression\3.2.4.RELEASE\spring-expression-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-oxm\3.2.4.RELEASE\spring-oxm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\__ENV__\repo\org\springframework\spring-web\3.2.4.RELEASE\spring-web-3.2.4.RELEASE.jar;D:\__ENV__\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\__ENV__\repo\org\springframework\spring-webmvc\3.2.4.RELEASE\spring-webmvc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-orm\3.2.4.RELEASE\spring-orm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-jdbc\3.2.4.RELEASE\spring-jdbc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-tx\3.2.4.RELEASE\spring-tx-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-test\3.2.4.RELEASE\spring-test-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\__ENV__\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\__ENV__\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\__ENV__\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\__ENV__\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-validator\4.2.0.Final\hibernate-validator-4.2.0.Final.jar;D:\__ENV__\repo\javax\validation\validation-api\1.0.0.GA\validation-api-1.0.0.GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-core\4.2.10.Final\hibernate-core-4.2.10.Final.jar;D:\__ENV__\repo\antlr\antlr\2.7.7\antlr-2.7.7.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.1.Final\jboss-transaction-api_1.1_spec-1.0.1.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpcore\4.3.1\httpcore-4.3.1.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpclient\4.3.1\httpclient-4.3.1.jar;D:\__ENV__\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\__ENV__\repo\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpmime\4.3.1\httpmime-4.3.1.jar;D:\__ENV__\repo\redis\clients\jedis\2.7.2\jedis-2.7.2.jar;D:\__ENV__\repo\org\apache\commons\commons-pool2\2.3\commons-pool2-2.3.jar;D:\__ENV__\repo\javax\persistence\persistence-api\1.0.2\persistence-api-1.0.2.jar;D:\__ENV__\repo\org\ansj\ansj_seg\0.9\ansj_seg-0.9.jar;D:\__ENV__\repo\org\ansj\tree_split\1.0.1\tree_split-1.0.1.jar;D:\__ENV__\repo\org\apache\commons-lang3\commons-lang3\3.1\commons-lang3-3.1.jar;D:\__ENV__\repo\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;D:\__ENV__\repo\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;D:\__ENV__\repo\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;D:\__ENV__\repo\commons-io\commons-io\2.4\commons-io-2.4.jar;D:\__ENV__\repo\commons-fileupload\commons-fileupload\1.2.2\commons-fileupload-1.2.2.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\__ENV__\repo\com\googlecode\xmemcached\xmemcached\1.4.1\xmemcached-1.4.1.jar;D:\__ENV__\repo\net\sf\json-lib\json-lib\2.4\json-lib-2.4-jdk15.jar;D:\__ENV__\repo\commons-beanutils\commons-beanutils\1.8.0\commons-beanutils-1.8.0.jar;D:\__ENV__\repo\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;D:\__ENV__\repo\net\sf\ezmorph\ezmorph\1.0.6\ezmorph-1.0.6.jar;D:\__ENV__\repo\org\mybatis\mybatis\3.1.1\mybatis-3.1.1.jar;D:\__ENV__\repo\org\mybatis\mybatis-spring\1.1.1\mybatis-spring-1.1.1.jar;D:\__ENV__\repo\junit\junit\4.11\junit-4.11.jar;D:\__ENV__\repo\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/358/1/.cp/;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/357/1/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.classLoader.application=sun.misc.Launcher$AppClassLoader@3b07d329, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=D:\Java\jdk1.8.0_40\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 61406 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -test com.it_sucre.service.HibernateServiceTest:test, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_40, java.ext.dirs=D:\Java\jdk1.8.0_40\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=D:\Java\jdk1.8.0_40\jre\lib\resources.jar;D:\Java\jdk1.8.0_40\jre\lib\rt.jar;D:\Java\jdk1.8.0_40\jre\lib\sunrsasign.jar;D:\Java\jdk1.8.0_40\jre\lib\jsse.jar;D:\Java\jdk1.8.0_40\jre\lib\jce.jar;D:\Java\jdk1.8.0_40\jre\lib\charsets.jar;D:\Java\jdk1.8.0_40\jre\lib\jfr.jar;D:\Java\jdk1.8.0_40\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}  
[DEBUG] 2015-12-01 15:30:33,171(1729) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[DEBUG] 2015-12-01 15:30:33,425(1983) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3604) –> [main] Static SQL for entity: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:30:33,428(1986) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3609) –> [main]  Version select: select id from test where id =?  
[DEBUG] 2015-12-01 15:30:33,431(1989) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3612) –> [main]  Snapshot select: select testentity_.id, testentity_.name as name2_0_ from test testentity_ where testentity_.id=?  
[DEBUG] 2015-12-01 15:30:33,434(1992) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3615) –> [main]  Insert 0: insert into test (name, id) values (?, ?)  
[DEBUG] 2015-12-01 15:30:33,441(1999) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3616) –> [main]  Update 0: update test set name=? where id=?  
[DEBUG] 2015-12-01 15:30:33,446(2004) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3617) –> [main]  Delete 0: delete from test where id=?  
[DEBUG] 2015-12-01 15:30:33,501(2059) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [NONE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:30:33,502(2060) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:30:33,503(2061) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:30:33,504(2062) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE_NOWAIT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:30:33,505(2063) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [FORCE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:30:33,506(2064) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? lock in share mode  
[DEBUG] 2015-12-01 15:30:33,507(2065) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_WRITE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:30:33,509(2067) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:30:33,510(2068) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:30:33,511(2069) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:30:33,525(2083) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:30:33,527(2085) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:30:33,617(2175) org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:62) –> [main] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@770d0ea6  
[DEBUG] 2015-12-01 15:30:33,622(2180) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:75) –> [main] Registering SessionFactory: 80880a1e-8d89-43c7-a274-cdfcaf989890 (<unnamed>)  
[DEBUG] 2015-12-01 15:30:33,624(2182) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:82) –> [main] Not binding SessionFactory to JNDI, no JNDI name configured  
[DEBUG] 2015-12-01 15:30:33,625(2183) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:492) –> [main] Instantiated session factory  
[INFO ] 2015-12-01 15:30:33,643(2201) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:182) –> [main] HHH000228: Running hbm2ddl schema update  
[INFO ] 2015-12-01 15:30:33,650(2208) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:193) –> [main] HHH000102: Fetching database metadata  
[INFO ] 2015-12-01 15:30:33,656(2214) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:205) –> [main] HHH000396: Updating schema  
[DEBUG] 2015-12-01 15:30:33,657(2215) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:30:33,657(2215) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:30:33,659(2217) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:30:33,662(2220) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:30:33,663(2221) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:30:33,664(2222) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:30:33,668(2226) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:30:33,670(2228) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:30:33,670(2228) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:30:33,671(2229) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[INFO ] 2015-12-01 15:30:33,721(2279) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] HHH000261: Table found: Test.test  
[INFO ] 2015-12-01 15:30:33,722(2280) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:67) –> [main] HHH000037: Columns: [name, id]  
[INFO ] 2015-12-01 15:30:33,723(2281) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] HHH000108: Foreign keys: []  
[INFO ] 2015-12-01 15:30:33,723(2281) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:70) –> [main] HHH000126: Indexes: [primary]  
[DEBUG] 2015-12-01 15:30:33,725(2283) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-12-01 15:30:33,726(2284) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:242) –> [main] HHH000232: Schema update complete  
[DEBUG] 2015-12-01 15:30:33,730(2288) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1073) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-12-01 15:30:33,732(2290) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1096) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-12-01 15:30:33,756(2314) org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:110) –> [main] Statistics initialized [enabled=false]  
[DEBUG] 2015-12-01 15:30:34,664(3222) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:212) –> [main] Obtaining JDBC connection  
[DEBUG] 2015-12-01 15:30:34,665(3223) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:218) –> [main] Obtained JDBC connection  
[DEBUG] 2015-12-01 15:30:34,679(3237) org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) –> [main] begin  
[DEBUG] 2015-12-01 15:30:34,682(3240) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) –> [main] initial autocommit status: true  
[DEBUG] 2015-12-01 15:30:34,685(3243) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) –> [main] disabling autocommit  
[DEBUG] 2015-12-01 15:30:34,925(3483) org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:130) –> [main] Generated identifier: 0, using strategy: org.hibernate.id.Assigned  
[DEBUG] 2015-12-01 15:30:34,963(3521) org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) –> [main] committing  
[DEBUG] 2015-12-01 15:30:34,965(3523) org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:147) –> [main] Processing flush-time cascades  
[DEBUG] 2015-12-01 15:30:34,967(3525) org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:188) –> [main] Dirty checking collections  
[DEBUG] 2015-12-01 15:30:34,973(3531) org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121) –> [main] Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects  
[DEBUG] 2015-12-01 15:30:34,974(3532) org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:128) –> [main] Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections  
[DEBUG] 2015-12-01 15:30:34,989(3547) org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) –> [main] Listing entities:  
[DEBUG] 2015-12-01 15:30:34,990(3548) org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) –> [main] com.it_sucre.entity.TestEntity{name=hibernate, id=0}  
[DEBUG] 2015-12-01 15:30:35,048(3606) org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) –> [main] 
    insert 
    into
        test
        (name, id) 
    values
        (?, ?)  
[DEBUG] 2015-12-01 15:30:35,127(3685) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) –> [main] committed JDBC Connection  
[DEBUG] 2015-12-01 15:30:35,128(3686) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) –> [main] re-enabling autocommit  
[DEBUG] 2015-12-01 15:30:35,132(3690) org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:182) –> [main] HHH000420: Closing un-released batch  
[DEBUG] 2015-12-01 15:30:35,133(3691) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:232) –> [main] Releasing JDBC connection  
[DEBUG] 2015-12-01 15:30:35,133(3691) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:250) –> [main] Released JDBC connection  
[DEBUG] 2015-12-01 15:30:35,161(3719) org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1374) –> [Thread-2] HHH000031: Closing  
[DEBUG] 2015-12-01 15:39:45,368(0) org.hibernate.cfg.Configuration.<clinit>(Configuration.java:184) –> [main] Logging Provider: org.jboss.logging.Log4jLoggerProvider  
[DEBUG] 2015-12-01 15:39:45,399(31) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@5f9b2141  
[DEBUG] 2015-12-01 15:39:45,399(31) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@5f9b2141  
[DEBUG] 2015-12-01 15:39:45,399(31) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5f9b2141  
[DEBUG] 2015-12-01 15:39:45,415(47) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@193f604a  
[DEBUG] 2015-12-01 15:39:45,415(47) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@3514a4c0  
[DEBUG] 2015-12-01 15:39:45,415(47) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@793be5ca  
[DEBUG] 2015-12-01 15:39:45,430(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@6babf3bf  
[DEBUG] 2015-12-01 15:39:45,430(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@6babf3bf  
[DEBUG] 2015-12-01 15:39:45,430(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6babf3bf  
[DEBUG] 2015-12-01 15:39:45,430(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@2b48a640  
[DEBUG] 2015-12-01 15:39:45,430(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@2b48a640  
[DEBUG] 2015-12-01 15:39:45,430(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2b48a640  
[DEBUG] 2015-12-01 15:39:45,430(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@73700b80  
[DEBUG] 2015-12-01 15:39:45,430(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@73700b80  
[DEBUG] 2015-12-01 15:39:45,430(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@73700b80  
[DEBUG] 2015-12-01 15:39:45,446(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@483f6d77  
[DEBUG] 2015-12-01 15:39:45,446(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@483f6d77  
[DEBUG] 2015-12-01 15:39:45,446(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@483f6d77  
[DEBUG] 2015-12-01 15:39:45,446(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@78123e82  
[DEBUG] 2015-12-01 15:39:45,446(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@78123e82  
[DEBUG] 2015-12-01 15:39:45,446(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@78123e82  
[DEBUG] 2015-12-01 15:39:45,446(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@bd4dc25  
[DEBUG] 2015-12-01 15:39:45,446(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@bd4dc25  
[DEBUG] 2015-12-01 15:39:45,446(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@bd4dc25  
[DEBUG] 2015-12-01 15:39:45,462(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@32ee6fee  
[DEBUG] 2015-12-01 15:39:45,462(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@32ee6fee  
[DEBUG] 2015-12-01 15:39:45,462(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@32ee6fee  
[DEBUG] 2015-12-01 15:39:45,462(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2b91004a  
[DEBUG] 2015-12-01 15:39:45,462(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2b91004a  
[DEBUG] 2015-12-01 15:39:45,462(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@22ef9844  
[DEBUG] 2015-12-01 15:39:45,462(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@22ef9844  
[DEBUG] 2015-12-01 15:39:45,477(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration string -> org.hibernate.type.StringType@2f217633  
[DEBUG] 2015-12-01 15:39:45,477(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@2f217633  
[DEBUG] 2015-12-01 15:39:45,477(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4738a206  
[DEBUG] 2015-12-01 15:39:45,477(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@58695725  
[DEBUG] 2015-12-01 15:39:45,477(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration url -> org.hibernate.type.UrlType@7c24b813  
[DEBUG] 2015-12-01 15:39:45,493(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@7c24b813  
[DEBUG] 2015-12-01 15:39:45,493(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration date -> org.hibernate.type.DateType@4f2b503c  
[DEBUG] 2015-12-01 15:39:45,493(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@4f2b503c  
[DEBUG] 2015-12-01 15:39:45,493(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration time -> org.hibernate.type.TimeType@342c38f8  
[DEBUG] 2015-12-01 15:39:45,493(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@342c38f8  
[DEBUG] 2015-12-01 15:39:45,509(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@57cf54e1  
[DEBUG] 2015-12-01 15:39:45,509(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@57cf54e1  
[DEBUG] 2015-12-01 15:39:45,509(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@57cf54e1  
[DEBUG] 2015-12-01 15:39:45,509(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3ee37e5a  
[DEBUG] 2015-12-01 15:39:45,509(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@f0da945  
[DEBUG] 2015-12-01 15:39:45,509(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@f0da945  
[DEBUG] 2015-12-01 15:39:45,509(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@f0da945  
[DEBUG] 2015-12-01 15:39:45,509(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3e11f9e9  
[DEBUG] 2015-12-01 15:39:45,524(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@2c1b194a  
[DEBUG] 2015-12-01 15:39:45,524(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2c1b194a  
[DEBUG] 2015-12-01 15:39:45,524(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@437da279  
[DEBUG] 2015-12-01 15:39:45,524(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@437da279  
[DEBUG] 2015-12-01 15:39:45,524(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@6253c26  
[DEBUG] 2015-12-01 15:39:45,524(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6253c26  
[DEBUG] 2015-12-01 15:39:45,540(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration class -> org.hibernate.type.ClassType@47e2e487  
[DEBUG] 2015-12-01 15:39:45,540(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@47e2e487  
[DEBUG] 2015-12-01 15:39:45,540(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2dc54ad4  
[DEBUG] 2015-12-01 15:39:45,540(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2dc54ad4  
[DEBUG] 2015-12-01 15:39:45,540(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@428640fa  
[DEBUG] 2015-12-01 15:39:45,540(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6bd61f98  
[DEBUG] 2015-12-01 15:39:45,540(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@72e5a8e  
[DEBUG] 2015-12-01 15:39:45,540(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@72e5a8e  
[DEBUG] 2015-12-01 15:39:45,540(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@72e5a8e  
[DEBUG] 2015-12-01 15:39:45,555(187) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@73e9cf30  
[DEBUG] 2015-12-01 15:39:45,555(187) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@73e9cf30  
[DEBUG] 2015-12-01 15:39:45,555(187) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@73e9cf30  
[DEBUG] 2015-12-01 15:39:45,555(187) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration image -> org.hibernate.type.ImageType@5a45133e  
[DEBUG] 2015-12-01 15:39:45,555(187) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@5e600dd5  
[DEBUG] 2015-12-01 15:39:45,555(187) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@5e600dd5  
[DEBUG] 2015-12-01 15:39:45,555(187) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@5e600dd5  
[DEBUG] 2015-12-01 15:39:45,571(203) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@51c668e3  
[DEBUG] 2015-12-01 15:39:45,571(203) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@51c668e3  
[DEBUG] 2015-12-01 15:39:45,571(203) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@51c668e3  
[DEBUG] 2015-12-01 15:39:45,587(219) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration text -> org.hibernate.type.TextType@5824a83d  
[DEBUG] 2015-12-01 15:39:45,587(219) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ntext -> org.hibernate.type.NTextType@229c6181  
[DEBUG] 2015-12-01 15:39:45,602(234) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@4145bad8  
[DEBUG] 2015-12-01 15:39:45,602(234) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4145bad8  
[DEBUG] 2015-12-01 15:39:45,602(234) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@750e2b97  
[DEBUG] 2015-12-01 15:39:45,618(250) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@78e4deb0  
[DEBUG] 2015-12-01 15:39:45,618(250) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@78e4deb0  
[DEBUG] 2015-12-01 15:39:45,618(250) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nclob -> org.hibernate.type.NClobType@543295b0  
[DEBUG] 2015-12-01 15:39:45,618(250) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@543295b0  
[DEBUG] 2015-12-01 15:39:45,618(250) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3b0fe47a  
[DEBUG] 2015-12-01 15:39:45,618(250) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@58cbafc2  
[DEBUG] 2015-12-01 15:39:45,634(266) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@1cf6d1be  
[DEBUG] 2015-12-01 15:39:45,634(266) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@712625fd  
[DEBUG] 2015-12-01 15:39:45,634(266) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@712625fd  
[DEBUG] 2015-12-01 15:39:45,649(281) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1c5920df  
[DEBUG] 2015-12-01 15:39:45,649(281) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@79e4c792  
[DEBUG] 2015-12-01 15:39:45,649(281) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4c60d6e9  
[DEBUG] 2015-12-01 15:39:45,649(281) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4a83a74a  
[DEBUG] 2015-12-01 15:39:45,649(281) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4b29d1d2  
[DEBUG] 2015-12-01 15:39:45,649(281) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@28261e8e  
[DEBUG] 2015-12-01 15:39:45,649(281) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@8519cb4  
[DEBUG] 2015-12-01 15:39:45,649(281) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2d901eb0  
[INFO ] 2015-12-01 15:39:45,712(344) org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66) –> [main] HCANN000001: Hibernate Commons Annotations {4.0.4.Final}  
[INFO ] 2015-12-01 15:39:45,712(344) org.hibernate.Version.logVersion(Version.java:41) –> [main] HHH000412: Hibernate Core {4.2.10.Final}  
[INFO ] 2015-12-01 15:39:45,727(359) org.hibernate.cfg.Environment.<clinit>(Environment.java:238) –> [main] HHH000206: hibernate.properties not found  
[INFO ] 2015-12-01 15:39:45,727(359) org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:345) –> [main] HHH000021: Bytecode provider name : javassist  
[DEBUG] 2015-12-01 15:39:45,743(375) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-12-01 15:39:45,743(375) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-12-01 15:39:45,743(375) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:39:45,743(375) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:39:45,743(375) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-12-01 15:39:45,743(375) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]  
[DEBUG] 2015-12-01 15:39:45,759(391) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-12-01 15:39:45,759(391) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-12-01 15:39:45,759(391) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-12-01 15:39:45,759(391) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-12-01 15:39:45,759(391) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-12-01 15:39:45,774(406) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-12-01 15:39:45,774(406) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-12-01 15:39:45,774(406) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-12-01 15:39:45,774(406) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]  
[DEBUG] 2015-12-01 15:39:45,821(453) org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) –> [main] Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].  
[DEBUG] 2015-12-01 15:39:45,868(500) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1781) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-12-01 15:39:46,290(922) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:121) –> [main] Database ->
       name : MySQL
    version : 5.6.22
      major : 5
      minor : 6  
[DEBUG] 2015-12-01 15:39:46,304(936) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:127) –> [main] Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[DEBUG] 2015-12-01 15:39:46,305(937) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:133) –> [main] JDBC version : 4.0  
[INFO ] 2015-12-01 15:39:46,338(970) org.hibernate.dialect.Dialect.<init>(Dialect.java:130) –> [main] HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-12-01 15:39:46,354(986) org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:120) –> [main] HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException  
[DEBUG] 2015-12-01 15:39:46,400(1032) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:39:46,400(1032) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:39:46,400(1032) org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:534) –> [main] Binding entity from annotated class: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:39:46,447(1079) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}  
[DEBUG] 2015-12-01 15:39:46,463(1095) org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1118) –> [main] No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED  
[DEBUG] 2015-12-01 15:39:46,494(1126) org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:394) –> [main] Import with entity name TestEntity  
[DEBUG] 2015-12-01 15:39:46,494(1126) org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:564) –> [main] Bind entity com.it_sucre.entity.TestEntity on table test  
[DEBUG] 2015-12-01 15:39:46,557(1189) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=id, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:39:46,588(1220) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property id with lazy=false  
[DEBUG] 2015-12-01 15:39:46,604(1236) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for id  
[DEBUG] 2015-12-01 15:39:46,604(1236) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property id  
[DEBUG] 2015-12-01 15:39:46,604(1236) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=name, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:39:46,604(1236) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property name with lazy=false  
[DEBUG] 2015-12-01 15:39:46,604(1236) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for name  
[DEBUG] 2015-12-01 15:39:46,604(1236) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property name  
[DEBUG] 2015-12-01 15:39:46,619(1251) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for id  
[DEBUG] 2015-12-01 15:39:46,619(1251) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for name  
[DEBUG] 2015-12-01 15:39:46,619(1251) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:39:46,635(1267) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:39:46,635(1267) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:39:46,635(1267) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:39:46,635(1267) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:39:46,635(1267) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:39:46,635(1267) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:39:46,635(1267) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[DEBUG] 2015-12-01 15:39:46,650(1282) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:117) –> [main] Automatic flush during beforeCompletion(): disabled  
[DEBUG] 2015-12-01 15:39:46,650(1282) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:123) –> [main] Automatic session close at end of transaction: disabled  
[DEBUG] 2015-12-01 15:39:46,650(1282) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:134) –> [main] JDBC batch size: 15  
[DEBUG] 2015-12-01 15:39:46,650(1282) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:140) –> [main] JDBC batch updates for versioned data: disabled  
[DEBUG] 2015-12-01 15:39:46,650(1282) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:150) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-12-01 15:39:46,650(1282) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:156) –> [main] Wrap result sets: disabled  
[DEBUG] 2015-12-01 15:39:46,650(1282) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:162) –> [main] JDBC3 getGeneratedKeys(): enabled  
[DEBUG] 2015-12-01 15:39:46,650(1282) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:174) –> [main] multi-tenancy strategy : NONE  
[DEBUG] 2015-12-01 15:39:46,650(1282) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:180) –> [main] Connection release mode: auto  
[INFO ] 2015-12-01 15:39:46,650(1282) org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:68) –> [main] HHH000399: Using default transaction strategy (direct JDBC transactions)  
[DEBUG] 2015-12-01 15:39:46,666(1298) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Using BatchFetchStyle : LEGACY  
[DEBUG] 2015-12-01 15:39:46,666(1298) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:221) –> [main] Maximum outer join fetch depth: 2  
[DEBUG] 2015-12-01 15:39:46,666(1298) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:227) –> [main] Default batch fetch size: 1  
[DEBUG] 2015-12-01 15:39:46,666(1298) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:233) –> [main] Generate SQL with comments: disabled  
[DEBUG] 2015-12-01 15:39:46,666(1298) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:239) –> [main] Order SQL updates by primary key: disabled  
[DEBUG] 2015-12-01 15:39:46,666(1298) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Order SQL inserts for batching: disabled  
[DEBUG] 2015-12-01 15:39:46,666(1298) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Default null ordering: none  
[DEBUG] 2015-12-01 15:39:46,666(1298) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:584) –> [main] Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-12-01 15:39:46,682(1314) org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) –> [main] HHH000397: Using ASTQueryTranslatorFactory  
[DEBUG] 2015-12-01 15:39:46,697(1329) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:263) –> [main] Query language substitutions: {}  
[DEBUG] 2015-12-01 15:39:46,697(1329) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:269) –> [main] JPA-QL strict compliance: disabled  
[DEBUG] 2015-12-01 15:39:46,697(1329) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:277) –> [main] Second-level cache: enabled  
[DEBUG] 2015-12-01 15:39:46,697(1329) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:283) –> [main] Query cache: disabled  
[DEBUG] 2015-12-01 15:39:46,697(1329) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:524) –> [main] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory  
[DEBUG] 2015-12-01 15:39:46,697(1329) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:534) –> [main] org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.  
[DEBUG] 2015-12-01 15:39:46,697(1329) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:306) –> [main] Optimize cache for minimal puts: disabled  
[DEBUG] 2015-12-01 15:39:46,697(1329) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:321) –> [main] Structured second-level cache entries: disabled  
[DEBUG] 2015-12-01 15:39:46,697(1329) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:331) –> [main] Second-level cache direct-reference entries: disabled  
[DEBUG] 2015-12-01 15:39:46,697(1329) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:339) –> [main] Statistics: disabled  
[DEBUG] 2015-12-01 15:39:46,697(1329) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:345) –> [main] Deleted entity synthetic identifier rollback: disabled  
[DEBUG] 2015-12-01 15:39:46,697(1329) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:372) –> [main] Default entity-mode: pojo  
[DEBUG] 2015-12-01 15:39:46,697(1329) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:378) –> [main] Named query checking : enabled  
[DEBUG] 2015-12-01 15:39:46,697(1329) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:384) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): enabled  
[DEBUG] 2015-12-01 15:39:46,697(1329) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:402) –> [main] Allow initialization of lazy state outside session : : disabled  
[DEBUG] 2015-12-01 15:39:46,697(1329) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:412) –> [main] JTA Track by Thread: enabled  
[DEBUG] 2015-12-01 15:39:46,729(1361) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Building session factory  
[DEBUG] 2015-12-01 15:39:46,729(1361) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:280) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-12-01 15:39:46,729(1361) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:281) –> [main] Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=D:\Java\jdk1.8.0_40\jre\bin, java.vm.version=25.40-b25, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\Java\workspace\demo-chained-transactionmanager, java.runtime.version=1.8.0_40-b26, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate4.SpringSessionContext, java.endorsed.dirs=D:\Java\jdk1.8.0_40\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\奇点之~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8.1, sun.jnu.encoding=GBK, java.library.path=D:\Java\jdk1.8.0_40\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/jdk1.8.0_40/bin/../jre/bin/server;D:/Java/jdk1.8.0_40/bin/../jre/bin;D:/Java/jdk1.8.0_40/bin/../jre/lib/amd64;D:\Java\jdk1.8.0_40/bin;D:\Java\jdk1.8.0_40/lib/dt.jar;D:\Java\jdk1.8.0_40/lib/tools.jar;D:\__ENV__\apache-maven-3.2.1/bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__ENV__\apache-tomcat-7.0.57\bin;D:\__ENV__\apache-tomcat-7.0.57\jre;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\TortoiseSVN\bin;D:\__ENV__\eclipse;;., hibernate.connection.datasource=org.apache.commons.dbcp.BasicDataSource@424ebba3, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=6.3, user.home=C:\Users\奇点之光08老师, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=奇点之光08老师, java.class.path=D:\Java\workspace\demo-chained-transactionmanager\target\test-classes;D:\Java\workspace\demo-chained-transactionmanager\target\classes;D:\__ENV__\repo\ch\qos\logback\logback-core\0.9.28\logback-core-0.9.28.jar;D:\__ENV__\repo\ch\qos\logback\logback-classic\0.9.28\logback-classic-0.9.28.jar;D:\__ENV__\repo\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;D:\__ENV__\repo\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;D:\__ENV__\repo\org\slf4j\slf4j-api\1.7.7\slf4j-api-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-jdk14\1.7.7\slf4j-jdk14-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-log4j12\1.7.7\slf4j-log4j12-1.7.7.jar;D:\__ENV__\repo\mysql\mysql-connector-java\5.1.26\mysql-connector-java-5.1.26.jar;D:\__ENV__\repo\log4j\log4j\1.2.14\log4j-1.2.14.jar;D:\__ENV__\repo\org\springframework\data\spring-data-commons\1.8.0.RELEASE\spring-data-commons-1.8.0.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\slf4j\jcl-over-slf4j\1.7.7\jcl-over-slf4j-1.7.7.jar;D:\__ENV__\repo\org\springframework\spring-context\3.2.4.RELEASE\spring-context-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-aop\3.2.4.RELEASE\spring-aop-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-expression\3.2.4.RELEASE\spring-expression-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-oxm\3.2.4.RELEASE\spring-oxm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\__ENV__\repo\org\springframework\spring-web\3.2.4.RELEASE\spring-web-3.2.4.RELEASE.jar;D:\__ENV__\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\__ENV__\repo\org\springframework\spring-webmvc\3.2.4.RELEASE\spring-webmvc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-orm\3.2.4.RELEASE\spring-orm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-jdbc\3.2.4.RELEASE\spring-jdbc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-tx\3.2.4.RELEASE\spring-tx-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-test\3.2.4.RELEASE\spring-test-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\__ENV__\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\__ENV__\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\__ENV__\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\__ENV__\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-validator\4.2.0.Final\hibernate-validator-4.2.0.Final.jar;D:\__ENV__\repo\javax\validation\validation-api\1.0.0.GA\validation-api-1.0.0.GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-core\4.2.10.Final\hibernate-core-4.2.10.Final.jar;D:\__ENV__\repo\antlr\antlr\2.7.7\antlr-2.7.7.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.1.Final\jboss-transaction-api_1.1_spec-1.0.1.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpcore\4.3.1\httpcore-4.3.1.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpclient\4.3.1\httpclient-4.3.1.jar;D:\__ENV__\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\__ENV__\repo\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpmime\4.3.1\httpmime-4.3.1.jar;D:\__ENV__\repo\redis\clients\jedis\2.7.2\jedis-2.7.2.jar;D:\__ENV__\repo\org\apache\commons\commons-pool2\2.3\commons-pool2-2.3.jar;D:\__ENV__\repo\javax\persistence\persistence-api\1.0.2\persistence-api-1.0.2.jar;D:\__ENV__\repo\org\ansj\ansj_seg\0.9\ansj_seg-0.9.jar;D:\__ENV__\repo\org\ansj\tree_split\1.0.1\tree_split-1.0.1.jar;D:\__ENV__\repo\org\apache\commons-lang3\commons-lang3\3.1\commons-lang3-3.1.jar;D:\__ENV__\repo\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;D:\__ENV__\repo\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;D:\__ENV__\repo\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;D:\__ENV__\repo\commons-io\commons-io\2.4\commons-io-2.4.jar;D:\__ENV__\repo\commons-fileupload\commons-fileupload\1.2.2\commons-fileupload-1.2.2.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\__ENV__\repo\com\googlecode\xmemcached\xmemcached\1.4.1\xmemcached-1.4.1.jar;D:\__ENV__\repo\net\sf\json-lib\json-lib\2.4\json-lib-2.4-jdk15.jar;D:\__ENV__\repo\commons-beanutils\commons-beanutils\1.8.0\commons-beanutils-1.8.0.jar;D:\__ENV__\repo\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;D:\__ENV__\repo\net\sf\ezmorph\ezmorph\1.0.6\ezmorph-1.0.6.jar;D:\__ENV__\repo\org\mybatis\mybatis\3.1.1\mybatis-3.1.1.jar;D:\__ENV__\repo\org\mybatis\mybatis-spring\1.1.1\mybatis-spring-1.1.1.jar;D:\__ENV__\repo\junit\junit\4.11\junit-4.11.jar;D:\__ENV__\repo\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/358/1/.cp/;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/357/1/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.classLoader.application=sun.misc.Launcher$AppClassLoader@3b07d329, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=D:\Java\jdk1.8.0_40\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 62010 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -test com.it_sucre.service.HibernateServiceTest:test, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_40, java.ext.dirs=D:\Java\jdk1.8.0_40\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=D:\Java\jdk1.8.0_40\jre\lib\resources.jar;D:\Java\jdk1.8.0_40\jre\lib\rt.jar;D:\Java\jdk1.8.0_40\jre\lib\sunrsasign.jar;D:\Java\jdk1.8.0_40\jre\lib\jsse.jar;D:\Java\jdk1.8.0_40\jre\lib\jce.jar;D:\Java\jdk1.8.0_40\jre\lib\charsets.jar;D:\Java\jdk1.8.0_40\jre\lib\jfr.jar;D:\Java\jdk1.8.0_40\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}  
[DEBUG] 2015-12-01 15:39:46,932(1564) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[DEBUG] 2015-12-01 15:39:47,244(1876) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3604) –> [main] Static SQL for entity: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:39:47,244(1876) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3609) –> [main]  Version select: select id from test where id =?  
[DEBUG] 2015-12-01 15:39:47,260(1892) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3612) –> [main]  Snapshot select: select testentity_.id, testentity_.name as name2_0_ from test testentity_ where testentity_.id=?  
[DEBUG] 2015-12-01 15:39:47,260(1892) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3615) –> [main]  Insert 0: insert into test (name, id) values (?, ?)  
[DEBUG] 2015-12-01 15:39:47,260(1892) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3616) –> [main]  Update 0: update test set name=? where id=?  
[DEBUG] 2015-12-01 15:39:47,275(1907) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3617) –> [main]  Delete 0: delete from test where id=?  
[DEBUG] 2015-12-01 15:39:47,354(1986) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [NONE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:39:47,355(1987) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:39:47,357(1989) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:39:47,357(1989) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE_NOWAIT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:39:47,357(1989) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [FORCE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:39:47,357(1989) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? lock in share mode  
[DEBUG] 2015-12-01 15:39:47,357(1989) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_WRITE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:39:47,357(1989) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:39:47,357(1989) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:39:47,357(1989) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:39:47,373(2005) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:39:47,373(2005) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:39:47,466(2098) org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:62) –> [main] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4816c290  
[DEBUG] 2015-12-01 15:39:47,466(2098) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:75) –> [main] Registering SessionFactory: 14c45812-cfc5-4f9d-a832-feedbe3f2f99 (<unnamed>)  
[DEBUG] 2015-12-01 15:39:47,466(2098) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:82) –> [main] Not binding SessionFactory to JNDI, no JNDI name configured  
[DEBUG] 2015-12-01 15:39:47,466(2098) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:492) –> [main] Instantiated session factory  
[INFO ] 2015-12-01 15:39:47,482(2114) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:182) –> [main] HHH000228: Running hbm2ddl schema update  
[INFO ] 2015-12-01 15:39:47,482(2114) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:193) –> [main] HHH000102: Fetching database metadata  
[INFO ] 2015-12-01 15:39:47,482(2114) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:205) –> [main] HHH000396: Updating schema  
[DEBUG] 2015-12-01 15:39:47,482(2114) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:39:47,482(2114) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:39:47,482(2114) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:39:47,482(2114) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:39:47,482(2114) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:39:47,482(2114) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:39:47,482(2114) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:39:47,482(2114) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:39:47,482(2114) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:39:47,482(2114) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[INFO ] 2015-12-01 15:39:47,513(2145) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] HHH000261: Table found: Test.test  
[INFO ] 2015-12-01 15:39:47,529(2161) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:67) –> [main] HHH000037: Columns: [name, id]  
[INFO ] 2015-12-01 15:39:47,529(2161) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] HHH000108: Foreign keys: []  
[INFO ] 2015-12-01 15:39:47,529(2161) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:70) –> [main] HHH000126: Indexes: [primary]  
[DEBUG] 2015-12-01 15:39:47,529(2161) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-12-01 15:39:47,529(2161) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:242) –> [main] HHH000232: Schema update complete  
[DEBUG] 2015-12-01 15:39:47,529(2161) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1073) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-12-01 15:39:47,529(2161) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1096) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-12-01 15:39:47,529(2161) org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:110) –> [main] Statistics initialized [enabled=false]  
[DEBUG] 2015-12-01 15:39:47,607(2239) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@5f9b2141  
[DEBUG] 2015-12-01 15:39:47,607(2239) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@5f9b2141  
[DEBUG] 2015-12-01 15:39:47,607(2239) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5f9b2141  
[DEBUG] 2015-12-01 15:39:47,607(2239) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@193f604a  
[DEBUG] 2015-12-01 15:39:47,607(2239) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@3514a4c0  
[DEBUG] 2015-12-01 15:39:47,607(2239) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@793be5ca  
[DEBUG] 2015-12-01 15:39:47,607(2239) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@6babf3bf  
[DEBUG] 2015-12-01 15:39:47,607(2239) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@6babf3bf  
[DEBUG] 2015-12-01 15:39:47,607(2239) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6babf3bf  
[DEBUG] 2015-12-01 15:39:47,607(2239) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@2b48a640  
[DEBUG] 2015-12-01 15:39:47,623(2255) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@2b48a640  
[DEBUG] 2015-12-01 15:39:47,623(2255) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2b48a640  
[DEBUG] 2015-12-01 15:39:47,623(2255) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@73700b80  
[DEBUG] 2015-12-01 15:39:47,623(2255) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@73700b80  
[DEBUG] 2015-12-01 15:39:47,623(2255) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@73700b80  
[DEBUG] 2015-12-01 15:39:47,623(2255) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@483f6d77  
[DEBUG] 2015-12-01 15:39:47,623(2255) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@483f6d77  
[DEBUG] 2015-12-01 15:39:47,623(2255) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@483f6d77  
[DEBUG] 2015-12-01 15:39:47,623(2255) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@78123e82  
[DEBUG] 2015-12-01 15:39:47,623(2255) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@78123e82  
[DEBUG] 2015-12-01 15:39:47,623(2255) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@78123e82  
[DEBUG] 2015-12-01 15:39:47,623(2255) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@bd4dc25  
[DEBUG] 2015-12-01 15:39:47,623(2255) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@bd4dc25  
[DEBUG] 2015-12-01 15:39:47,623(2255) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@bd4dc25  
[DEBUG] 2015-12-01 15:39:47,623(2255) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@32ee6fee  
[DEBUG] 2015-12-01 15:39:47,623(2255) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@32ee6fee  
[DEBUG] 2015-12-01 15:39:47,623(2255) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@32ee6fee  
[DEBUG] 2015-12-01 15:39:47,623(2255) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2b91004a  
[DEBUG] 2015-12-01 15:39:47,623(2255) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2b91004a  
[DEBUG] 2015-12-01 15:39:47,638(2270) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@22ef9844  
[DEBUG] 2015-12-01 15:39:47,638(2270) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@22ef9844  
[DEBUG] 2015-12-01 15:39:47,638(2270) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration string -> org.hibernate.type.StringType@2f217633  
[DEBUG] 2015-12-01 15:39:47,638(2270) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@2f217633  
[DEBUG] 2015-12-01 15:39:47,654(2286) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4738a206  
[DEBUG] 2015-12-01 15:39:47,654(2286) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@58695725  
[DEBUG] 2015-12-01 15:39:47,654(2286) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration url -> org.hibernate.type.UrlType@7c24b813  
[DEBUG] 2015-12-01 15:39:47,654(2286) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@7c24b813  
[DEBUG] 2015-12-01 15:39:47,654(2286) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration date -> org.hibernate.type.DateType@4f2b503c  
[DEBUG] 2015-12-01 15:39:47,654(2286) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@4f2b503c  
[DEBUG] 2015-12-01 15:39:47,654(2286) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration time -> org.hibernate.type.TimeType@342c38f8  
[DEBUG] 2015-12-01 15:39:47,654(2286) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@342c38f8  
[DEBUG] 2015-12-01 15:39:47,654(2286) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@57cf54e1  
[DEBUG] 2015-12-01 15:39:47,654(2286) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@57cf54e1  
[DEBUG] 2015-12-01 15:39:47,654(2286) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@57cf54e1  
[DEBUG] 2015-12-01 15:39:47,654(2286) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3ee37e5a  
[DEBUG] 2015-12-01 15:39:47,654(2286) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@f0da945  
[DEBUG] 2015-12-01 15:39:47,654(2286) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@f0da945  
[DEBUG] 2015-12-01 15:39:47,654(2286) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@f0da945  
[DEBUG] 2015-12-01 15:39:47,654(2286) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3e11f9e9  
[DEBUG] 2015-12-01 15:39:47,654(2286) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@2c1b194a  
[DEBUG] 2015-12-01 15:39:47,669(2301) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2c1b194a  
[DEBUG] 2015-12-01 15:39:47,669(2301) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@437da279  
[DEBUG] 2015-12-01 15:39:47,669(2301) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@437da279  
[DEBUG] 2015-12-01 15:39:47,669(2301) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@6253c26  
[DEBUG] 2015-12-01 15:39:47,669(2301) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6253c26  
[DEBUG] 2015-12-01 15:39:47,669(2301) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration class -> org.hibernate.type.ClassType@47e2e487  
[DEBUG] 2015-12-01 15:39:47,669(2301) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@47e2e487  
[DEBUG] 2015-12-01 15:39:47,669(2301) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2dc54ad4  
[DEBUG] 2015-12-01 15:39:47,685(2317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2dc54ad4  
[DEBUG] 2015-12-01 15:39:47,685(2317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@428640fa  
[DEBUG] 2015-12-01 15:39:47,685(2317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6bd61f98  
[DEBUG] 2015-12-01 15:39:47,685(2317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@72e5a8e  
[DEBUG] 2015-12-01 15:39:47,685(2317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@72e5a8e  
[DEBUG] 2015-12-01 15:39:47,685(2317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@72e5a8e  
[DEBUG] 2015-12-01 15:39:47,685(2317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@73e9cf30  
[DEBUG] 2015-12-01 15:39:47,685(2317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@73e9cf30  
[DEBUG] 2015-12-01 15:39:47,685(2317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@73e9cf30  
[DEBUG] 2015-12-01 15:39:47,685(2317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration image -> org.hibernate.type.ImageType@5a45133e  
[DEBUG] 2015-12-01 15:39:47,701(2333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@5e600dd5  
[DEBUG] 2015-12-01 15:39:47,701(2333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@5e600dd5  
[DEBUG] 2015-12-01 15:39:47,701(2333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@5e600dd5  
[DEBUG] 2015-12-01 15:39:47,701(2333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@51c668e3  
[DEBUG] 2015-12-01 15:39:47,701(2333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@51c668e3  
[DEBUG] 2015-12-01 15:39:47,701(2333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@51c668e3  
[DEBUG] 2015-12-01 15:39:47,701(2333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration text -> org.hibernate.type.TextType@5824a83d  
[DEBUG] 2015-12-01 15:39:47,701(2333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ntext -> org.hibernate.type.NTextType@229c6181  
[DEBUG] 2015-12-01 15:39:47,701(2333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@4145bad8  
[DEBUG] 2015-12-01 15:39:47,701(2333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4145bad8  
[DEBUG] 2015-12-01 15:39:47,701(2333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@750e2b97  
[DEBUG] 2015-12-01 15:39:47,716(2348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@78e4deb0  
[DEBUG] 2015-12-01 15:39:47,716(2348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@78e4deb0  
[DEBUG] 2015-12-01 15:39:47,716(2348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nclob -> org.hibernate.type.NClobType@543295b0  
[DEBUG] 2015-12-01 15:39:47,716(2348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@543295b0  
[DEBUG] 2015-12-01 15:39:47,716(2348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3b0fe47a  
[DEBUG] 2015-12-01 15:39:47,716(2348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@58cbafc2  
[DEBUG] 2015-12-01 15:39:47,716(2348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@1cf6d1be  
[DEBUG] 2015-12-01 15:39:47,716(2348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@712625fd  
[DEBUG] 2015-12-01 15:39:47,716(2348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@712625fd  
[DEBUG] 2015-12-01 15:39:47,716(2348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@54afd745  
[DEBUG] 2015-12-01 15:39:47,716(2348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@fff25f1  
[DEBUG] 2015-12-01 15:39:47,716(2348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@263f04ca  
[DEBUG] 2015-12-01 15:39:47,716(2348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5a021cb9  
[DEBUG] 2015-12-01 15:39:47,716(2348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@f31c0c6  
[DEBUG] 2015-12-01 15:39:47,716(2348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4a9419d7  
[DEBUG] 2015-12-01 15:39:47,732(2364) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2e8ab815  
[DEBUG] 2015-12-01 15:39:47,732(2364) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@d1f74b8  
[DEBUG] 2015-12-01 15:39:47,732(2364) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-12-01 15:39:47,732(2364) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-12-01 15:39:47,732(2364) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:39:47,732(2364) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:39:47,732(2364) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-12-01 15:39:47,732(2364) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]  
[DEBUG] 2015-12-01 15:39:47,732(2364) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-12-01 15:39:47,732(2364) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-12-01 15:39:47,732(2364) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-12-01 15:39:47,748(2380) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-12-01 15:39:47,748(2380) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-12-01 15:39:47,748(2380) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-12-01 15:39:47,748(2380) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-12-01 15:39:47,748(2380) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-12-01 15:39:47,748(2380) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]  
[DEBUG] 2015-12-01 15:39:47,779(2411) org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) –> [main] Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].  
[DEBUG] 2015-12-01 15:39:47,779(2411) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1781) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-12-01 15:39:47,857(2489) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:121) –> [main] Database ->
       name : MySQL
    version : 5.6.22
      major : 5
      minor : 6  
[DEBUG] 2015-12-01 15:39:47,857(2489) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:127) –> [main] Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[DEBUG] 2015-12-01 15:39:47,857(2489) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:133) –> [main] JDBC version : 4.0  
[INFO ] 2015-12-01 15:39:47,857(2489) org.hibernate.dialect.Dialect.<init>(Dialect.java:130) –> [main] HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-12-01 15:39:47,857(2489) org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:120) –> [main] HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException  
[DEBUG] 2015-12-01 15:39:47,857(2489) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:39:47,873(2505) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:39:47,873(2505) org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:534) –> [main] Binding entity from annotated class: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:39:47,873(2505) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}  
[DEBUG] 2015-12-01 15:39:47,873(2505) org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1118) –> [main] No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED  
[DEBUG] 2015-12-01 15:39:47,873(2505) org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:394) –> [main] Import with entity name TestEntity  
[DEBUG] 2015-12-01 15:39:47,873(2505) org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:564) –> [main] Bind entity com.it_sucre.entity.TestEntity on table test  
[DEBUG] 2015-12-01 15:39:47,873(2505) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=id, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:39:47,873(2505) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property id with lazy=false  
[DEBUG] 2015-12-01 15:39:47,873(2505) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for id  
[DEBUG] 2015-12-01 15:39:47,873(2505) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property id  
[DEBUG] 2015-12-01 15:39:47,873(2505) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=name, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:39:47,873(2505) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property name with lazy=false  
[DEBUG] 2015-12-01 15:39:47,873(2505) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for name  
[DEBUG] 2015-12-01 15:39:47,873(2505) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property name  
[DEBUG] 2015-12-01 15:39:47,873(2505) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for id  
[DEBUG] 2015-12-01 15:39:47,873(2505) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for name  
[DEBUG] 2015-12-01 15:39:47,873(2505) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:39:47,873(2505) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:39:47,873(2505) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:39:47,873(2505) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:39:47,888(2520) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:39:47,888(2520) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:39:47,888(2520) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:39:47,888(2520) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[DEBUG] 2015-12-01 15:39:47,888(2520) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:117) –> [main] Automatic flush during beforeCompletion(): disabled  
[DEBUG] 2015-12-01 15:39:47,888(2520) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:123) –> [main] Automatic session close at end of transaction: disabled  
[DEBUG] 2015-12-01 15:39:47,888(2520) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:134) –> [main] JDBC batch size: 15  
[DEBUG] 2015-12-01 15:39:47,888(2520) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:140) –> [main] JDBC batch updates for versioned data: disabled  
[DEBUG] 2015-12-01 15:39:47,888(2520) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:150) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-12-01 15:39:47,888(2520) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:156) –> [main] Wrap result sets: disabled  
[DEBUG] 2015-12-01 15:39:47,888(2520) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:162) –> [main] JDBC3 getGeneratedKeys(): enabled  
[DEBUG] 2015-12-01 15:39:47,888(2520) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:174) –> [main] multi-tenancy strategy : NONE  
[DEBUG] 2015-12-01 15:39:47,888(2520) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:180) –> [main] Connection release mode: auto  
[INFO ] 2015-12-01 15:39:47,888(2520) org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:68) –> [main] HHH000399: Using default transaction strategy (direct JDBC transactions)  
[DEBUG] 2015-12-01 15:39:47,888(2520) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Using BatchFetchStyle : LEGACY  
[DEBUG] 2015-12-01 15:39:47,904(2536) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:221) –> [main] Maximum outer join fetch depth: 2  
[DEBUG] 2015-12-01 15:39:47,904(2536) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:227) –> [main] Default batch fetch size: 1  
[DEBUG] 2015-12-01 15:39:47,904(2536) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:233) –> [main] Generate SQL with comments: disabled  
[DEBUG] 2015-12-01 15:39:47,904(2536) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:239) –> [main] Order SQL updates by primary key: disabled  
[DEBUG] 2015-12-01 15:39:47,904(2536) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Order SQL inserts for batching: disabled  
[DEBUG] 2015-12-01 15:39:47,904(2536) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Default null ordering: none  
[DEBUG] 2015-12-01 15:39:47,904(2536) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:584) –> [main] Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-12-01 15:39:47,904(2536) org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) –> [main] HHH000397: Using ASTQueryTranslatorFactory  
[DEBUG] 2015-12-01 15:39:47,904(2536) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:263) –> [main] Query language substitutions: {}  
[DEBUG] 2015-12-01 15:39:47,904(2536) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:269) –> [main] JPA-QL strict compliance: disabled  
[DEBUG] 2015-12-01 15:39:47,904(2536) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:277) –> [main] Second-level cache: enabled  
[DEBUG] 2015-12-01 15:39:47,904(2536) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:283) –> [main] Query cache: disabled  
[DEBUG] 2015-12-01 15:39:47,904(2536) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:524) –> [main] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory  
[DEBUG] 2015-12-01 15:39:47,904(2536) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:534) –> [main] org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.  
[DEBUG] 2015-12-01 15:39:47,904(2536) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:306) –> [main] Optimize cache for minimal puts: disabled  
[DEBUG] 2015-12-01 15:39:47,919(2551) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:321) –> [main] Structured second-level cache entries: disabled  
[DEBUG] 2015-12-01 15:39:47,919(2551) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:331) –> [main] Second-level cache direct-reference entries: disabled  
[DEBUG] 2015-12-01 15:39:47,919(2551) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:339) –> [main] Statistics: disabled  
[DEBUG] 2015-12-01 15:39:47,919(2551) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:345) –> [main] Deleted entity synthetic identifier rollback: disabled  
[DEBUG] 2015-12-01 15:39:47,919(2551) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:372) –> [main] Default entity-mode: pojo  
[DEBUG] 2015-12-01 15:39:47,919(2551) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:378) –> [main] Named query checking : enabled  
[DEBUG] 2015-12-01 15:39:47,919(2551) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:384) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): enabled  
[DEBUG] 2015-12-01 15:39:47,919(2551) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:402) –> [main] Allow initialization of lazy state outside session : : disabled  
[DEBUG] 2015-12-01 15:39:47,919(2551) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:412) –> [main] JTA Track by Thread: enabled  
[DEBUG] 2015-12-01 15:39:47,919(2551) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Building session factory  
[DEBUG] 2015-12-01 15:39:47,919(2551) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:280) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-12-01 15:39:47,919(2551) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:281) –> [main] Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=D:\Java\jdk1.8.0_40\jre\bin, java.vm.version=25.40-b25, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\Java\workspace\demo-chained-transactionmanager, java.runtime.version=1.8.0_40-b26, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate4.SpringSessionContext, java.endorsed.dirs=D:\Java\jdk1.8.0_40\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\奇点之~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8.1, sun.jnu.encoding=GBK, java.library.path=D:\Java\jdk1.8.0_40\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/jdk1.8.0_40/bin/../jre/bin/server;D:/Java/jdk1.8.0_40/bin/../jre/bin;D:/Java/jdk1.8.0_40/bin/../jre/lib/amd64;D:\Java\jdk1.8.0_40/bin;D:\Java\jdk1.8.0_40/lib/dt.jar;D:\Java\jdk1.8.0_40/lib/tools.jar;D:\__ENV__\apache-maven-3.2.1/bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__ENV__\apache-tomcat-7.0.57\bin;D:\__ENV__\apache-tomcat-7.0.57\jre;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\TortoiseSVN\bin;D:\__ENV__\eclipse;;., hibernate.connection.datasource=org.apache.commons.dbcp.BasicDataSource@1a6f5124, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=6.3, user.home=C:\Users\奇点之光08老师, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=奇点之光08老师, java.class.path=D:\Java\workspace\demo-chained-transactionmanager\target\test-classes;D:\Java\workspace\demo-chained-transactionmanager\target\classes;D:\__ENV__\repo\ch\qos\logback\logback-core\0.9.28\logback-core-0.9.28.jar;D:\__ENV__\repo\ch\qos\logback\logback-classic\0.9.28\logback-classic-0.9.28.jar;D:\__ENV__\repo\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;D:\__ENV__\repo\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;D:\__ENV__\repo\org\slf4j\slf4j-api\1.7.7\slf4j-api-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-jdk14\1.7.7\slf4j-jdk14-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-log4j12\1.7.7\slf4j-log4j12-1.7.7.jar;D:\__ENV__\repo\mysql\mysql-connector-java\5.1.26\mysql-connector-java-5.1.26.jar;D:\__ENV__\repo\log4j\log4j\1.2.14\log4j-1.2.14.jar;D:\__ENV__\repo\org\springframework\data\spring-data-commons\1.8.0.RELEASE\spring-data-commons-1.8.0.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\slf4j\jcl-over-slf4j\1.7.7\jcl-over-slf4j-1.7.7.jar;D:\__ENV__\repo\org\springframework\spring-context\3.2.4.RELEASE\spring-context-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-aop\3.2.4.RELEASE\spring-aop-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-expression\3.2.4.RELEASE\spring-expression-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-oxm\3.2.4.RELEASE\spring-oxm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\__ENV__\repo\org\springframework\spring-web\3.2.4.RELEASE\spring-web-3.2.4.RELEASE.jar;D:\__ENV__\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\__ENV__\repo\org\springframework\spring-webmvc\3.2.4.RELEASE\spring-webmvc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-orm\3.2.4.RELEASE\spring-orm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-jdbc\3.2.4.RELEASE\spring-jdbc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-tx\3.2.4.RELEASE\spring-tx-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-test\3.2.4.RELEASE\spring-test-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\__ENV__\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\__ENV__\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\__ENV__\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\__ENV__\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-validator\4.2.0.Final\hibernate-validator-4.2.0.Final.jar;D:\__ENV__\repo\javax\validation\validation-api\1.0.0.GA\validation-api-1.0.0.GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-core\4.2.10.Final\hibernate-core-4.2.10.Final.jar;D:\__ENV__\repo\antlr\antlr\2.7.7\antlr-2.7.7.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.1.Final\jboss-transaction-api_1.1_spec-1.0.1.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpcore\4.3.1\httpcore-4.3.1.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpclient\4.3.1\httpclient-4.3.1.jar;D:\__ENV__\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\__ENV__\repo\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpmime\4.3.1\httpmime-4.3.1.jar;D:\__ENV__\repo\redis\clients\jedis\2.7.2\jedis-2.7.2.jar;D:\__ENV__\repo\org\apache\commons\commons-pool2\2.3\commons-pool2-2.3.jar;D:\__ENV__\repo\javax\persistence\persistence-api\1.0.2\persistence-api-1.0.2.jar;D:\__ENV__\repo\org\ansj\ansj_seg\0.9\ansj_seg-0.9.jar;D:\__ENV__\repo\org\ansj\tree_split\1.0.1\tree_split-1.0.1.jar;D:\__ENV__\repo\org\apache\commons-lang3\commons-lang3\3.1\commons-lang3-3.1.jar;D:\__ENV__\repo\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;D:\__ENV__\repo\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;D:\__ENV__\repo\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;D:\__ENV__\repo\commons-io\commons-io\2.4\commons-io-2.4.jar;D:\__ENV__\repo\commons-fileupload\commons-fileupload\1.2.2\commons-fileupload-1.2.2.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\__ENV__\repo\com\googlecode\xmemcached\xmemcached\1.4.1\xmemcached-1.4.1.jar;D:\__ENV__\repo\net\sf\json-lib\json-lib\2.4\json-lib-2.4-jdk15.jar;D:\__ENV__\repo\commons-beanutils\commons-beanutils\1.8.0\commons-beanutils-1.8.0.jar;D:\__ENV__\repo\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;D:\__ENV__\repo\net\sf\ezmorph\ezmorph\1.0.6\ezmorph-1.0.6.jar;D:\__ENV__\repo\org\mybatis\mybatis\3.1.1\mybatis-3.1.1.jar;D:\__ENV__\repo\org\mybatis\mybatis-spring\1.1.1\mybatis-spring-1.1.1.jar;D:\__ENV__\repo\junit\junit\4.11\junit-4.11.jar;D:\__ENV__\repo\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/358/1/.cp/;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/357/1/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.classLoader.application=sun.misc.Launcher$AppClassLoader@3b07d329, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=D:\Java\jdk1.8.0_40\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 62010 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -test com.it_sucre.service.HibernateServiceTest:test, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_40, java.ext.dirs=D:\Java\jdk1.8.0_40\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=D:\Java\jdk1.8.0_40\jre\lib\resources.jar;D:\Java\jdk1.8.0_40\jre\lib\rt.jar;D:\Java\jdk1.8.0_40\jre\lib\sunrsasign.jar;D:\Java\jdk1.8.0_40\jre\lib\jsse.jar;D:\Java\jdk1.8.0_40\jre\lib\jce.jar;D:\Java\jdk1.8.0_40\jre\lib\charsets.jar;D:\Java\jdk1.8.0_40\jre\lib\jfr.jar;D:\Java\jdk1.8.0_40\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}  
[DEBUG] 2015-12-01 15:39:47,951(2583) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[DEBUG] 2015-12-01 15:39:47,951(2583) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3604) –> [main] Static SQL for entity: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:39:47,951(2583) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3609) –> [main]  Version select: select id from test where id =?  
[DEBUG] 2015-12-01 15:39:47,951(2583) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3612) –> [main]  Snapshot select: select testentity_.id, testentity_.name as name2_0_ from test testentity_ where testentity_.id=?  
[DEBUG] 2015-12-01 15:39:47,951(2583) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3615) –> [main]  Insert 0: insert into test (name, id) values (?, ?)  
[DEBUG] 2015-12-01 15:39:47,966(2598) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3616) –> [main]  Update 0: update test set name=? where id=?  
[DEBUG] 2015-12-01 15:39:47,966(2598) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3617) –> [main]  Delete 0: delete from test where id=?  
[DEBUG] 2015-12-01 15:39:47,966(2598) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [NONE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:39:47,966(2598) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:39:47,966(2598) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:39:47,966(2598) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE_NOWAIT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:39:47,966(2598) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [FORCE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:39:47,966(2598) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? lock in share mode  
[DEBUG] 2015-12-01 15:39:47,966(2598) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_WRITE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:39:47,966(2598) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:39:47,966(2598) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:39:47,966(2598) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:39:47,966(2598) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:39:47,993(2625) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:39:47,995(2627) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:75) –> [main] Registering SessionFactory: 75ef325e-4cf8-4566-84b6-477fa34aa3be (<unnamed>)  
[DEBUG] 2015-12-01 15:39:47,996(2628) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:82) –> [main] Not binding SessionFactory to JNDI, no JNDI name configured  
[DEBUG] 2015-12-01 15:39:47,997(2629) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:492) –> [main] Instantiated session factory  
[INFO ] 2015-12-01 15:39:47,998(2630) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:182) –> [main] HHH000228: Running hbm2ddl schema update  
[INFO ] 2015-12-01 15:39:47,999(2631) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:193) –> [main] HHH000102: Fetching database metadata  
[INFO ] 2015-12-01 15:39:48,000(2632) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:205) –> [main] HHH000396: Updating schema  
[DEBUG] 2015-12-01 15:39:48,002(2634) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:39:48,003(2635) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:39:48,004(2636) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:39:48,005(2637) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:39:48,005(2637) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:39:48,006(2638) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:39:48,007(2639) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:39:48,007(2639) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:39:48,008(2640) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:39:48,008(2640) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[INFO ] 2015-12-01 15:39:48,026(2658) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] HHH000261: Table found: Test.test  
[INFO ] 2015-12-01 15:39:48,028(2660) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:67) –> [main] HHH000037: Columns: [name, id]  
[INFO ] 2015-12-01 15:39:48,030(2662) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] HHH000108: Foreign keys: []  
[INFO ] 2015-12-01 15:39:48,031(2663) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:70) –> [main] HHH000126: Indexes: [primary]  
[DEBUG] 2015-12-01 15:39:48,032(2664) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-12-01 15:39:48,033(2665) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:242) –> [main] HHH000232: Schema update complete  
[DEBUG] 2015-12-01 15:39:48,034(2666) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1073) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-12-01 15:39:48,035(2667) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1096) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-12-01 15:39:48,035(2667) org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:110) –> [main] Statistics initialized [enabled=false]  
[DEBUG] 2015-12-01 15:39:48,504(3136) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:212) –> [main] Obtaining JDBC connection  
[DEBUG] 2015-12-01 15:39:48,505(3137) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:218) –> [main] Obtained JDBC connection  
[DEBUG] 2015-12-01 15:39:48,516(3148) org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) –> [main] begin  
[DEBUG] 2015-12-01 15:39:48,517(3149) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) –> [main] initial autocommit status: true  
[DEBUG] 2015-12-01 15:39:48,517(3149) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) –> [main] disabling autocommit  
[DEBUG] 2015-12-01 15:39:48,596(3228) org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:130) –> [main] Generated identifier: 0, using strategy: org.hibernate.id.Assigned  
[DEBUG] 2015-12-01 15:39:48,640(3272) org.hibernate.engine.transaction.spi.AbstractTransactionImpl.rollback(AbstractTransactionImpl.java:203) –> [main] rolling back  
[DEBUG] 2015-12-01 15:39:48,641(3273) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doRollback(JdbcTransaction.java:164) –> [main] rolled JDBC Connection  
[DEBUG] 2015-12-01 15:39:48,641(3273) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) –> [main] re-enabling autocommit  
[DEBUG] 2015-12-01 15:39:48,646(3278) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:232) –> [main] Releasing JDBC connection  
[DEBUG] 2015-12-01 15:39:48,646(3278) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:250) –> [main] Released JDBC connection  
[DEBUG] 2015-12-01 15:39:48,683(3315) org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1374) –> [Thread-2] HHH000031: Closing  
[DEBUG] 2015-12-01 15:39:48,690(3322) org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1374) –> [Thread-2] HHH000031: Closing  
[DEBUG] 2015-12-01 15:40:56,293(0) org.hibernate.cfg.Configuration.<clinit>(Configuration.java:184) –> [main] Logging Provider: org.jboss.logging.Log4jLoggerProvider  
[DEBUG] 2015-12-01 15:40:56,340(47) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@5f9b2141  
[DEBUG] 2015-12-01 15:40:56,340(47) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@5f9b2141  
[DEBUG] 2015-12-01 15:40:56,340(47) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5f9b2141  
[DEBUG] 2015-12-01 15:40:56,340(47) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@193f604a  
[DEBUG] 2015-12-01 15:40:56,340(47) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@3514a4c0  
[DEBUG] 2015-12-01 15:40:56,340(47) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@793be5ca  
[DEBUG] 2015-12-01 15:40:56,356(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@6babf3bf  
[DEBUG] 2015-12-01 15:40:56,356(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@6babf3bf  
[DEBUG] 2015-12-01 15:40:56,356(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6babf3bf  
[DEBUG] 2015-12-01 15:40:56,356(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@2b48a640  
[DEBUG] 2015-12-01 15:40:56,356(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@2b48a640  
[DEBUG] 2015-12-01 15:40:56,356(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2b48a640  
[DEBUG] 2015-12-01 15:40:56,371(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@73700b80  
[DEBUG] 2015-12-01 15:40:56,371(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@73700b80  
[DEBUG] 2015-12-01 15:40:56,371(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@73700b80  
[DEBUG] 2015-12-01 15:40:56,371(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@483f6d77  
[DEBUG] 2015-12-01 15:40:56,371(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@483f6d77  
[DEBUG] 2015-12-01 15:40:56,371(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@483f6d77  
[DEBUG] 2015-12-01 15:40:56,371(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@78123e82  
[DEBUG] 2015-12-01 15:40:56,371(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@78123e82  
[DEBUG] 2015-12-01 15:40:56,371(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@78123e82  
[DEBUG] 2015-12-01 15:40:56,387(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@bd4dc25  
[DEBUG] 2015-12-01 15:40:56,387(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@bd4dc25  
[DEBUG] 2015-12-01 15:40:56,387(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@bd4dc25  
[DEBUG] 2015-12-01 15:40:56,387(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@32ee6fee  
[DEBUG] 2015-12-01 15:40:56,387(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@32ee6fee  
[DEBUG] 2015-12-01 15:40:56,387(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@32ee6fee  
[DEBUG] 2015-12-01 15:40:56,387(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2b91004a  
[DEBUG] 2015-12-01 15:40:56,387(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2b91004a  
[DEBUG] 2015-12-01 15:40:56,402(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@22ef9844  
[DEBUG] 2015-12-01 15:40:56,402(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@22ef9844  
[DEBUG] 2015-12-01 15:40:56,402(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration string -> org.hibernate.type.StringType@2f217633  
[DEBUG] 2015-12-01 15:40:56,402(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@2f217633  
[DEBUG] 2015-12-01 15:40:56,402(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4738a206  
[DEBUG] 2015-12-01 15:40:56,402(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@58695725  
[DEBUG] 2015-12-01 15:40:56,402(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration url -> org.hibernate.type.UrlType@7c24b813  
[DEBUG] 2015-12-01 15:40:56,418(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@7c24b813  
[DEBUG] 2015-12-01 15:40:56,418(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration date -> org.hibernate.type.DateType@4f2b503c  
[DEBUG] 2015-12-01 15:40:56,418(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@4f2b503c  
[DEBUG] 2015-12-01 15:40:56,418(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration time -> org.hibernate.type.TimeType@342c38f8  
[DEBUG] 2015-12-01 15:40:56,418(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@342c38f8  
[DEBUG] 2015-12-01 15:40:56,418(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@57cf54e1  
[DEBUG] 2015-12-01 15:40:56,418(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@57cf54e1  
[DEBUG] 2015-12-01 15:40:56,434(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@57cf54e1  
[DEBUG] 2015-12-01 15:40:56,434(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3ee37e5a  
[DEBUG] 2015-12-01 15:40:56,434(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@f0da945  
[DEBUG] 2015-12-01 15:40:56,434(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@f0da945  
[DEBUG] 2015-12-01 15:40:56,434(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@f0da945  
[DEBUG] 2015-12-01 15:40:56,434(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3e11f9e9  
[DEBUG] 2015-12-01 15:40:56,434(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@2c1b194a  
[DEBUG] 2015-12-01 15:40:56,434(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2c1b194a  
[DEBUG] 2015-12-01 15:40:56,449(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@437da279  
[DEBUG] 2015-12-01 15:40:56,449(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@437da279  
[DEBUG] 2015-12-01 15:40:56,449(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@6253c26  
[DEBUG] 2015-12-01 15:40:56,449(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6253c26  
[DEBUG] 2015-12-01 15:40:56,449(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration class -> org.hibernate.type.ClassType@47e2e487  
[DEBUG] 2015-12-01 15:40:56,449(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@47e2e487  
[DEBUG] 2015-12-01 15:40:56,449(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2dc54ad4  
[DEBUG] 2015-12-01 15:40:56,449(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2dc54ad4  
[DEBUG] 2015-12-01 15:40:56,465(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@428640fa  
[DEBUG] 2015-12-01 15:40:56,465(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6bd61f98  
[DEBUG] 2015-12-01 15:40:56,465(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@72e5a8e  
[DEBUG] 2015-12-01 15:40:56,465(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@72e5a8e  
[DEBUG] 2015-12-01 15:40:56,465(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@72e5a8e  
[DEBUG] 2015-12-01 15:40:56,465(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@73e9cf30  
[DEBUG] 2015-12-01 15:40:56,465(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@73e9cf30  
[DEBUG] 2015-12-01 15:40:56,465(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@73e9cf30  
[DEBUG] 2015-12-01 15:40:56,481(188) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration image -> org.hibernate.type.ImageType@5a45133e  
[DEBUG] 2015-12-01 15:40:56,481(188) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@5e600dd5  
[DEBUG] 2015-12-01 15:40:56,481(188) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@5e600dd5  
[DEBUG] 2015-12-01 15:40:56,481(188) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@5e600dd5  
[DEBUG] 2015-12-01 15:40:56,481(188) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@51c668e3  
[DEBUG] 2015-12-01 15:40:56,481(188) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@51c668e3  
[DEBUG] 2015-12-01 15:40:56,481(188) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@51c668e3  
[DEBUG] 2015-12-01 15:40:56,481(188) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration text -> org.hibernate.type.TextType@5824a83d  
[DEBUG] 2015-12-01 15:40:56,496(203) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ntext -> org.hibernate.type.NTextType@229c6181  
[DEBUG] 2015-12-01 15:40:56,512(219) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@4145bad8  
[DEBUG] 2015-12-01 15:40:56,512(219) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4145bad8  
[DEBUG] 2015-12-01 15:40:56,512(219) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@750e2b97  
[DEBUG] 2015-12-01 15:40:56,512(219) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@78e4deb0  
[DEBUG] 2015-12-01 15:40:56,527(234) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@78e4deb0  
[DEBUG] 2015-12-01 15:40:56,527(234) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nclob -> org.hibernate.type.NClobType@543295b0  
[DEBUG] 2015-12-01 15:40:56,543(250) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@543295b0  
[DEBUG] 2015-12-01 15:40:56,543(250) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3b0fe47a  
[DEBUG] 2015-12-01 15:40:56,543(250) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@58cbafc2  
[DEBUG] 2015-12-01 15:40:56,543(250) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@1cf6d1be  
[DEBUG] 2015-12-01 15:40:56,543(250) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@712625fd  
[DEBUG] 2015-12-01 15:40:56,559(266) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@712625fd  
[DEBUG] 2015-12-01 15:40:56,559(266) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1c5920df  
[DEBUG] 2015-12-01 15:40:56,559(266) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@79e4c792  
[DEBUG] 2015-12-01 15:40:56,559(266) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4c60d6e9  
[DEBUG] 2015-12-01 15:40:56,559(266) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4a83a74a  
[DEBUG] 2015-12-01 15:40:56,559(266) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4b29d1d2  
[DEBUG] 2015-12-01 15:40:56,559(266) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@28261e8e  
[DEBUG] 2015-12-01 15:40:56,559(266) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@8519cb4  
[DEBUG] 2015-12-01 15:40:56,559(266) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2d901eb0  
[INFO ] 2015-12-01 15:40:56,606(313) org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66) –> [main] HCANN000001: Hibernate Commons Annotations {4.0.4.Final}  
[INFO ] 2015-12-01 15:40:56,606(313) org.hibernate.Version.logVersion(Version.java:41) –> [main] HHH000412: Hibernate Core {4.2.10.Final}  
[INFO ] 2015-12-01 15:40:56,621(328) org.hibernate.cfg.Environment.<clinit>(Environment.java:238) –> [main] HHH000206: hibernate.properties not found  
[INFO ] 2015-12-01 15:40:56,621(328) org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:345) –> [main] HHH000021: Bytecode provider name : javassist  
[DEBUG] 2015-12-01 15:40:56,637(344) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-12-01 15:40:56,637(344) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-12-01 15:40:56,637(344) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:40:56,637(344) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:40:56,637(344) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-12-01 15:40:56,637(344) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]  
[DEBUG] 2015-12-01 15:40:56,652(359) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-12-01 15:40:56,652(359) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-12-01 15:40:56,652(359) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-12-01 15:40:56,652(359) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-12-01 15:40:56,652(359) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-12-01 15:40:56,652(359) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-12-01 15:40:56,652(359) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-12-01 15:40:56,652(359) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-12-01 15:40:56,668(375) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]  
[DEBUG] 2015-12-01 15:40:56,715(422) org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) –> [main] Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].  
[DEBUG] 2015-12-01 15:40:56,746(453) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1781) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-12-01 15:40:57,184(891) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:121) –> [main] Database ->
       name : MySQL
    version : 5.6.22
      major : 5
      minor : 6  
[DEBUG] 2015-12-01 15:40:57,185(892) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:127) –> [main] Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[DEBUG] 2015-12-01 15:40:57,185(892) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:133) –> [main] JDBC version : 4.0  
[INFO ] 2015-12-01 15:40:57,217(924) org.hibernate.dialect.Dialect.<init>(Dialect.java:130) –> [main] HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-12-01 15:40:57,233(940) org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:120) –> [main] HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException  
[DEBUG] 2015-12-01 15:40:57,280(987) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:40:57,280(987) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:40:57,280(987) org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:534) –> [main] Binding entity from annotated class: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:40:57,327(1034) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}  
[DEBUG] 2015-12-01 15:40:57,342(1049) org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1118) –> [main] No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED  
[DEBUG] 2015-12-01 15:40:57,389(1096) org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:394) –> [main] Import with entity name TestEntity  
[DEBUG] 2015-12-01 15:40:57,389(1096) org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:564) –> [main] Bind entity com.it_sucre.entity.TestEntity on table test  
[DEBUG] 2015-12-01 15:40:57,452(1159) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=id, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:40:57,452(1159) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property id with lazy=false  
[DEBUG] 2015-12-01 15:40:57,467(1174) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for id  
[DEBUG] 2015-12-01 15:40:57,467(1174) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property id  
[DEBUG] 2015-12-01 15:40:57,483(1190) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=name, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:40:57,483(1190) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property name with lazy=false  
[DEBUG] 2015-12-01 15:40:57,483(1190) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for name  
[DEBUG] 2015-12-01 15:40:57,483(1190) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property name  
[DEBUG] 2015-12-01 15:40:57,483(1190) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for id  
[DEBUG] 2015-12-01 15:40:57,483(1190) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for name  
[DEBUG] 2015-12-01 15:40:57,499(1206) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:40:57,499(1206) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:40:57,499(1206) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:40:57,499(1206) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:40:57,499(1206) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:40:57,499(1206) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:40:57,499(1206) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:40:57,499(1206) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[DEBUG] 2015-12-01 15:40:57,514(1221) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:117) –> [main] Automatic flush during beforeCompletion(): disabled  
[DEBUG] 2015-12-01 15:40:57,514(1221) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:123) –> [main] Automatic session close at end of transaction: disabled  
[DEBUG] 2015-12-01 15:40:57,514(1221) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:134) –> [main] JDBC batch size: 15  
[DEBUG] 2015-12-01 15:40:57,514(1221) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:140) –> [main] JDBC batch updates for versioned data: disabled  
[DEBUG] 2015-12-01 15:40:57,514(1221) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:150) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-12-01 15:40:57,514(1221) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:156) –> [main] Wrap result sets: disabled  
[DEBUG] 2015-12-01 15:40:57,514(1221) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:162) –> [main] JDBC3 getGeneratedKeys(): enabled  
[DEBUG] 2015-12-01 15:40:57,530(1237) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:174) –> [main] multi-tenancy strategy : NONE  
[DEBUG] 2015-12-01 15:40:57,530(1237) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:180) –> [main] Connection release mode: auto  
[INFO ] 2015-12-01 15:40:57,530(1237) org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:68) –> [main] HHH000399: Using default transaction strategy (direct JDBC transactions)  
[DEBUG] 2015-12-01 15:40:57,530(1237) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Using BatchFetchStyle : LEGACY  
[DEBUG] 2015-12-01 15:40:57,530(1237) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:221) –> [main] Maximum outer join fetch depth: 2  
[DEBUG] 2015-12-01 15:40:57,530(1237) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:227) –> [main] Default batch fetch size: 1  
[DEBUG] 2015-12-01 15:40:57,530(1237) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:233) –> [main] Generate SQL with comments: disabled  
[DEBUG] 2015-12-01 15:40:57,530(1237) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:239) –> [main] Order SQL updates by primary key: disabled  
[DEBUG] 2015-12-01 15:40:57,530(1237) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Order SQL inserts for batching: disabled  
[DEBUG] 2015-12-01 15:40:57,530(1237) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Default null ordering: none  
[DEBUG] 2015-12-01 15:40:57,530(1237) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:584) –> [main] Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-12-01 15:40:57,561(1268) org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) –> [main] HHH000397: Using ASTQueryTranslatorFactory  
[DEBUG] 2015-12-01 15:40:57,561(1268) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:263) –> [main] Query language substitutions: {}  
[DEBUG] 2015-12-01 15:40:57,561(1268) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:269) –> [main] JPA-QL strict compliance: disabled  
[DEBUG] 2015-12-01 15:40:57,561(1268) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:277) –> [main] Second-level cache: enabled  
[DEBUG] 2015-12-01 15:40:57,561(1268) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:283) –> [main] Query cache: disabled  
[DEBUG] 2015-12-01 15:40:57,561(1268) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:524) –> [main] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory  
[DEBUG] 2015-12-01 15:40:57,561(1268) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:534) –> [main] org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.  
[DEBUG] 2015-12-01 15:40:57,561(1268) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:306) –> [main] Optimize cache for minimal puts: disabled  
[DEBUG] 2015-12-01 15:40:57,561(1268) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:321) –> [main] Structured second-level cache entries: disabled  
[DEBUG] 2015-12-01 15:40:57,561(1268) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:331) –> [main] Second-level cache direct-reference entries: disabled  
[DEBUG] 2015-12-01 15:40:57,577(1284) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:339) –> [main] Statistics: disabled  
[DEBUG] 2015-12-01 15:40:57,577(1284) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:345) –> [main] Deleted entity synthetic identifier rollback: disabled  
[DEBUG] 2015-12-01 15:40:57,577(1284) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:372) –> [main] Default entity-mode: pojo  
[DEBUG] 2015-12-01 15:40:57,577(1284) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:378) –> [main] Named query checking : enabled  
[DEBUG] 2015-12-01 15:40:57,577(1284) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:384) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): enabled  
[DEBUG] 2015-12-01 15:40:57,577(1284) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:402) –> [main] Allow initialization of lazy state outside session : : disabled  
[DEBUG] 2015-12-01 15:40:57,577(1284) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:412) –> [main] JTA Track by Thread: enabled  
[DEBUG] 2015-12-01 15:40:57,592(1299) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Building session factory  
[DEBUG] 2015-12-01 15:40:57,608(1315) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:280) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-12-01 15:40:57,608(1315) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:281) –> [main] Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=D:\Java\jdk1.8.0_40\jre\bin, java.vm.version=25.40-b25, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\Java\workspace\demo-chained-transactionmanager, java.runtime.version=1.8.0_40-b26, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate4.SpringSessionContext, java.endorsed.dirs=D:\Java\jdk1.8.0_40\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\奇点之~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8.1, sun.jnu.encoding=GBK, java.library.path=D:\Java\jdk1.8.0_40\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/jdk1.8.0_40/bin/../jre/bin/server;D:/Java/jdk1.8.0_40/bin/../jre/bin;D:/Java/jdk1.8.0_40/bin/../jre/lib/amd64;D:\Java\jdk1.8.0_40/bin;D:\Java\jdk1.8.0_40/lib/dt.jar;D:\Java\jdk1.8.0_40/lib/tools.jar;D:\__ENV__\apache-maven-3.2.1/bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__ENV__\apache-tomcat-7.0.57\bin;D:\__ENV__\apache-tomcat-7.0.57\jre;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\TortoiseSVN\bin;D:\__ENV__\eclipse;;., hibernate.connection.datasource=org.apache.commons.dbcp.BasicDataSource@424ebba3, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=6.3, user.home=C:\Users\奇点之光08老师, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=奇点之光08老师, java.class.path=D:\Java\workspace\demo-chained-transactionmanager\target\test-classes;D:\Java\workspace\demo-chained-transactionmanager\target\classes;D:\__ENV__\repo\ch\qos\logback\logback-core\0.9.28\logback-core-0.9.28.jar;D:\__ENV__\repo\ch\qos\logback\logback-classic\0.9.28\logback-classic-0.9.28.jar;D:\__ENV__\repo\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;D:\__ENV__\repo\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;D:\__ENV__\repo\org\slf4j\slf4j-api\1.7.7\slf4j-api-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-jdk14\1.7.7\slf4j-jdk14-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-log4j12\1.7.7\slf4j-log4j12-1.7.7.jar;D:\__ENV__\repo\mysql\mysql-connector-java\5.1.26\mysql-connector-java-5.1.26.jar;D:\__ENV__\repo\log4j\log4j\1.2.14\log4j-1.2.14.jar;D:\__ENV__\repo\org\springframework\data\spring-data-commons\1.8.0.RELEASE\spring-data-commons-1.8.0.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\slf4j\jcl-over-slf4j\1.7.7\jcl-over-slf4j-1.7.7.jar;D:\__ENV__\repo\org\springframework\spring-context\3.2.4.RELEASE\spring-context-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-aop\3.2.4.RELEASE\spring-aop-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-expression\3.2.4.RELEASE\spring-expression-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-oxm\3.2.4.RELEASE\spring-oxm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\__ENV__\repo\org\springframework\spring-web\3.2.4.RELEASE\spring-web-3.2.4.RELEASE.jar;D:\__ENV__\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\__ENV__\repo\org\springframework\spring-webmvc\3.2.4.RELEASE\spring-webmvc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-orm\3.2.4.RELEASE\spring-orm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-jdbc\3.2.4.RELEASE\spring-jdbc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-tx\3.2.4.RELEASE\spring-tx-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-test\3.2.4.RELEASE\spring-test-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\__ENV__\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\__ENV__\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\__ENV__\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\__ENV__\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-validator\4.2.0.Final\hibernate-validator-4.2.0.Final.jar;D:\__ENV__\repo\javax\validation\validation-api\1.0.0.GA\validation-api-1.0.0.GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-core\4.2.10.Final\hibernate-core-4.2.10.Final.jar;D:\__ENV__\repo\antlr\antlr\2.7.7\antlr-2.7.7.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.1.Final\jboss-transaction-api_1.1_spec-1.0.1.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpcore\4.3.1\httpcore-4.3.1.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpclient\4.3.1\httpclient-4.3.1.jar;D:\__ENV__\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\__ENV__\repo\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpmime\4.3.1\httpmime-4.3.1.jar;D:\__ENV__\repo\redis\clients\jedis\2.7.2\jedis-2.7.2.jar;D:\__ENV__\repo\org\apache\commons\commons-pool2\2.3\commons-pool2-2.3.jar;D:\__ENV__\repo\javax\persistence\persistence-api\1.0.2\persistence-api-1.0.2.jar;D:\__ENV__\repo\org\ansj\ansj_seg\0.9\ansj_seg-0.9.jar;D:\__ENV__\repo\org\ansj\tree_split\1.0.1\tree_split-1.0.1.jar;D:\__ENV__\repo\org\apache\commons-lang3\commons-lang3\3.1\commons-lang3-3.1.jar;D:\__ENV__\repo\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;D:\__ENV__\repo\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;D:\__ENV__\repo\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;D:\__ENV__\repo\commons-io\commons-io\2.4\commons-io-2.4.jar;D:\__ENV__\repo\commons-fileupload\commons-fileupload\1.2.2\commons-fileupload-1.2.2.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\__ENV__\repo\com\googlecode\xmemcached\xmemcached\1.4.1\xmemcached-1.4.1.jar;D:\__ENV__\repo\net\sf\json-lib\json-lib\2.4\json-lib-2.4-jdk15.jar;D:\__ENV__\repo\commons-beanutils\commons-beanutils\1.8.0\commons-beanutils-1.8.0.jar;D:\__ENV__\repo\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;D:\__ENV__\repo\net\sf\ezmorph\ezmorph\1.0.6\ezmorph-1.0.6.jar;D:\__ENV__\repo\org\mybatis\mybatis\3.1.1\mybatis-3.1.1.jar;D:\__ENV__\repo\org\mybatis\mybatis-spring\1.1.1\mybatis-spring-1.1.1.jar;D:\__ENV__\repo\junit\junit\4.11\junit-4.11.jar;D:\__ENV__\repo\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/358/1/.cp/;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/357/1/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.classLoader.application=sun.misc.Launcher$AppClassLoader@3b07d329, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=D:\Java\jdk1.8.0_40\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 62020 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -test com.it_sucre.service.HibernateServiceTest:test, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_40, java.ext.dirs=D:\Java\jdk1.8.0_40\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=D:\Java\jdk1.8.0_40\jre\lib\resources.jar;D:\Java\jdk1.8.0_40\jre\lib\rt.jar;D:\Java\jdk1.8.0_40\jre\lib\sunrsasign.jar;D:\Java\jdk1.8.0_40\jre\lib\jsse.jar;D:\Java\jdk1.8.0_40\jre\lib\jce.jar;D:\Java\jdk1.8.0_40\jre\lib\charsets.jar;D:\Java\jdk1.8.0_40\jre\lib\jfr.jar;D:\Java\jdk1.8.0_40\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}  
[DEBUG] 2015-12-01 15:40:57,811(1518) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[DEBUG] 2015-12-01 15:40:58,155(1862) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3604) –> [main] Static SQL for entity: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:40:58,155(1862) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3609) –> [main]  Version select: select id from test where id =?  
[DEBUG] 2015-12-01 15:40:58,155(1862) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3612) –> [main]  Snapshot select: select testentity_.id, testentity_.name as name2_0_ from test testentity_ where testentity_.id=?  
[DEBUG] 2015-12-01 15:40:58,155(1862) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3615) –> [main]  Insert 0: insert into test (name, id) values (?, ?)  
[DEBUG] 2015-12-01 15:40:58,170(1877) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3616) –> [main]  Update 0: update test set name=? where id=?  
[DEBUG] 2015-12-01 15:40:58,170(1877) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3617) –> [main]  Delete 0: delete from test where id=?  
[DEBUG] 2015-12-01 15:40:58,240(1947) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [NONE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:40:58,240(1947) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:40:58,240(1947) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:40:58,240(1947) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE_NOWAIT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:40:58,240(1947) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [FORCE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:40:58,240(1947) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? lock in share mode  
[DEBUG] 2015-12-01 15:40:58,240(1947) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_WRITE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:40:58,240(1947) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:40:58,240(1947) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:40:58,240(1947) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:40:58,256(1963) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:40:58,256(1963) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:40:58,381(2088) org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:62) –> [main] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4816c290  
[DEBUG] 2015-12-01 15:40:58,381(2088) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:75) –> [main] Registering SessionFactory: 26e416c0-549d-4826-b441-9dc6de4099fc (<unnamed>)  
[DEBUG] 2015-12-01 15:40:58,381(2088) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:82) –> [main] Not binding SessionFactory to JNDI, no JNDI name configured  
[DEBUG] 2015-12-01 15:40:58,381(2088) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:492) –> [main] Instantiated session factory  
[INFO ] 2015-12-01 15:40:58,381(2088) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:182) –> [main] HHH000228: Running hbm2ddl schema update  
[INFO ] 2015-12-01 15:40:58,397(2104) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:193) –> [main] HHH000102: Fetching database metadata  
[INFO ] 2015-12-01 15:40:58,397(2104) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:205) –> [main] HHH000396: Updating schema  
[DEBUG] 2015-12-01 15:40:58,397(2104) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:40:58,397(2104) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:40:58,397(2104) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:40:58,397(2104) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:40:58,397(2104) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:40:58,397(2104) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:40:58,397(2104) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:40:58,397(2104) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:40:58,397(2104) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:40:58,397(2104) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[INFO ] 2015-12-01 15:40:58,444(2151) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] HHH000261: Table found: Test.test  
[INFO ] 2015-12-01 15:40:58,444(2151) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:67) –> [main] HHH000037: Columns: [name, id]  
[INFO ] 2015-12-01 15:40:58,444(2151) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] HHH000108: Foreign keys: []  
[INFO ] 2015-12-01 15:40:58,444(2151) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:70) –> [main] HHH000126: Indexes: [primary]  
[DEBUG] 2015-12-01 15:40:58,444(2151) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-12-01 15:40:58,444(2151) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:242) –> [main] HHH000232: Schema update complete  
[DEBUG] 2015-12-01 15:40:58,444(2151) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1073) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-12-01 15:40:58,444(2151) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1096) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-12-01 15:40:58,444(2151) org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:110) –> [main] Statistics initialized [enabled=false]  
[DEBUG] 2015-12-01 15:40:58,490(2197) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@5f9b2141  
[DEBUG] 2015-12-01 15:40:58,490(2197) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@5f9b2141  
[DEBUG] 2015-12-01 15:40:58,490(2197) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5f9b2141  
[DEBUG] 2015-12-01 15:40:58,490(2197) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@193f604a  
[DEBUG] 2015-12-01 15:40:58,522(2229) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@3514a4c0  
[DEBUG] 2015-12-01 15:40:58,522(2229) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@793be5ca  
[DEBUG] 2015-12-01 15:40:58,522(2229) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@6babf3bf  
[DEBUG] 2015-12-01 15:40:58,522(2229) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@6babf3bf  
[DEBUG] 2015-12-01 15:40:58,522(2229) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6babf3bf  
[DEBUG] 2015-12-01 15:40:58,522(2229) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@2b48a640  
[DEBUG] 2015-12-01 15:40:58,522(2229) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@2b48a640  
[DEBUG] 2015-12-01 15:40:58,522(2229) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2b48a640  
[DEBUG] 2015-12-01 15:40:58,522(2229) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@73700b80  
[DEBUG] 2015-12-01 15:40:58,537(2244) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@73700b80  
[DEBUG] 2015-12-01 15:40:58,537(2244) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@73700b80  
[DEBUG] 2015-12-01 15:40:58,537(2244) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@483f6d77  
[DEBUG] 2015-12-01 15:40:58,537(2244) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@483f6d77  
[DEBUG] 2015-12-01 15:40:58,537(2244) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@483f6d77  
[DEBUG] 2015-12-01 15:40:58,537(2244) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@78123e82  
[DEBUG] 2015-12-01 15:40:58,537(2244) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@78123e82  
[DEBUG] 2015-12-01 15:40:58,537(2244) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@78123e82  
[DEBUG] 2015-12-01 15:40:58,537(2244) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@bd4dc25  
[DEBUG] 2015-12-01 15:40:58,537(2244) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@bd4dc25  
[DEBUG] 2015-12-01 15:40:58,537(2244) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@bd4dc25  
[DEBUG] 2015-12-01 15:40:58,553(2260) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@32ee6fee  
[DEBUG] 2015-12-01 15:40:58,553(2260) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@32ee6fee  
[DEBUG] 2015-12-01 15:40:58,553(2260) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@32ee6fee  
[DEBUG] 2015-12-01 15:40:58,553(2260) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2b91004a  
[DEBUG] 2015-12-01 15:40:58,553(2260) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2b91004a  
[DEBUG] 2015-12-01 15:40:58,553(2260) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@22ef9844  
[DEBUG] 2015-12-01 15:40:58,553(2260) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@22ef9844  
[DEBUG] 2015-12-01 15:40:58,553(2260) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration string -> org.hibernate.type.StringType@2f217633  
[DEBUG] 2015-12-01 15:40:58,553(2260) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@2f217633  
[DEBUG] 2015-12-01 15:40:58,553(2260) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4738a206  
[DEBUG] 2015-12-01 15:40:58,569(2276) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@58695725  
[DEBUG] 2015-12-01 15:40:58,569(2276) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration url -> org.hibernate.type.UrlType@7c24b813  
[DEBUG] 2015-12-01 15:40:58,569(2276) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@7c24b813  
[DEBUG] 2015-12-01 15:40:58,569(2276) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration date -> org.hibernate.type.DateType@4f2b503c  
[DEBUG] 2015-12-01 15:40:58,569(2276) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@4f2b503c  
[DEBUG] 2015-12-01 15:40:58,569(2276) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration time -> org.hibernate.type.TimeType@342c38f8  
[DEBUG] 2015-12-01 15:40:58,569(2276) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@342c38f8  
[DEBUG] 2015-12-01 15:40:58,569(2276) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@57cf54e1  
[DEBUG] 2015-12-01 15:40:58,569(2276) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@57cf54e1  
[DEBUG] 2015-12-01 15:40:58,569(2276) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@57cf54e1  
[DEBUG] 2015-12-01 15:40:58,569(2276) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3ee37e5a  
[DEBUG] 2015-12-01 15:40:58,569(2276) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@f0da945  
[DEBUG] 2015-12-01 15:40:58,569(2276) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@f0da945  
[DEBUG] 2015-12-01 15:40:58,569(2276) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@f0da945  
[DEBUG] 2015-12-01 15:40:58,569(2276) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3e11f9e9  
[DEBUG] 2015-12-01 15:40:58,569(2276) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@2c1b194a  
[DEBUG] 2015-12-01 15:40:58,569(2276) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2c1b194a  
[DEBUG] 2015-12-01 15:40:58,569(2276) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@437da279  
[DEBUG] 2015-12-01 15:40:58,569(2276) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@437da279  
[DEBUG] 2015-12-01 15:40:58,584(2291) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@6253c26  
[DEBUG] 2015-12-01 15:40:58,584(2291) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6253c26  
[DEBUG] 2015-12-01 15:40:58,584(2291) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration class -> org.hibernate.type.ClassType@47e2e487  
[DEBUG] 2015-12-01 15:40:58,584(2291) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@47e2e487  
[DEBUG] 2015-12-01 15:40:58,584(2291) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2dc54ad4  
[DEBUG] 2015-12-01 15:40:58,584(2291) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2dc54ad4  
[DEBUG] 2015-12-01 15:40:58,584(2291) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@428640fa  
[DEBUG] 2015-12-01 15:40:58,584(2291) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6bd61f98  
[DEBUG] 2015-12-01 15:40:58,584(2291) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@72e5a8e  
[DEBUG] 2015-12-01 15:40:58,584(2291) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@72e5a8e  
[DEBUG] 2015-12-01 15:40:58,584(2291) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@72e5a8e  
[DEBUG] 2015-12-01 15:40:58,584(2291) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@73e9cf30  
[DEBUG] 2015-12-01 15:40:58,584(2291) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@73e9cf30  
[DEBUG] 2015-12-01 15:40:58,584(2291) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@73e9cf30  
[DEBUG] 2015-12-01 15:40:58,615(2322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration image -> org.hibernate.type.ImageType@5a45133e  
[DEBUG] 2015-12-01 15:40:58,615(2322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@5e600dd5  
[DEBUG] 2015-12-01 15:40:58,615(2322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@5e600dd5  
[DEBUG] 2015-12-01 15:40:58,615(2322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@5e600dd5  
[DEBUG] 2015-12-01 15:40:58,615(2322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@51c668e3  
[DEBUG] 2015-12-01 15:40:58,615(2322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@51c668e3  
[DEBUG] 2015-12-01 15:40:58,615(2322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@51c668e3  
[DEBUG] 2015-12-01 15:40:58,615(2322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration text -> org.hibernate.type.TextType@5824a83d  
[DEBUG] 2015-12-01 15:40:58,615(2322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ntext -> org.hibernate.type.NTextType@229c6181  
[DEBUG] 2015-12-01 15:40:58,615(2322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@4145bad8  
[DEBUG] 2015-12-01 15:40:58,615(2322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4145bad8  
[DEBUG] 2015-12-01 15:40:58,615(2322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@750e2b97  
[DEBUG] 2015-12-01 15:40:58,615(2322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@78e4deb0  
[DEBUG] 2015-12-01 15:40:58,615(2322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@78e4deb0  
[DEBUG] 2015-12-01 15:40:58,615(2322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nclob -> org.hibernate.type.NClobType@543295b0  
[DEBUG] 2015-12-01 15:40:58,615(2322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@543295b0  
[DEBUG] 2015-12-01 15:40:58,631(2338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3b0fe47a  
[DEBUG] 2015-12-01 15:40:58,631(2338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@58cbafc2  
[DEBUG] 2015-12-01 15:40:58,631(2338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@1cf6d1be  
[DEBUG] 2015-12-01 15:40:58,631(2338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@712625fd  
[DEBUG] 2015-12-01 15:40:58,631(2338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@712625fd  
[DEBUG] 2015-12-01 15:40:58,631(2338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@54afd745  
[DEBUG] 2015-12-01 15:40:58,631(2338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@fff25f1  
[DEBUG] 2015-12-01 15:40:58,631(2338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@263f04ca  
[DEBUG] 2015-12-01 15:40:58,631(2338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5a021cb9  
[DEBUG] 2015-12-01 15:40:58,631(2338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@f31c0c6  
[DEBUG] 2015-12-01 15:40:58,631(2338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4a9419d7  
[DEBUG] 2015-12-01 15:40:58,631(2338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2e8ab815  
[DEBUG] 2015-12-01 15:40:58,631(2338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@d1f74b8  
[DEBUG] 2015-12-01 15:40:58,631(2338) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-12-01 15:40:58,631(2338) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-12-01 15:40:58,631(2338) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:40:58,631(2338) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:40:58,631(2338) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-12-01 15:40:58,631(2338) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]  
[DEBUG] 2015-12-01 15:40:58,647(2354) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-12-01 15:40:58,647(2354) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-12-01 15:40:58,647(2354) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-12-01 15:40:58,647(2354) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-12-01 15:40:58,663(2370) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-12-01 15:40:58,664(2371) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-12-01 15:40:58,665(2372) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-12-01 15:40:58,666(2373) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-12-01 15:40:58,667(2374) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]  
[DEBUG] 2015-12-01 15:40:58,709(2416) org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) –> [main] Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].  
[DEBUG] 2015-12-01 15:40:58,716(2423) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1781) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-12-01 15:40:58,784(2491) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:121) –> [main] Database ->
       name : MySQL
    version : 5.6.22
      major : 5
      minor : 6  
[DEBUG] 2015-12-01 15:40:58,785(2492) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:127) –> [main] Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[DEBUG] 2015-12-01 15:40:58,786(2493) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:133) –> [main] JDBC version : 4.0  
[INFO ] 2015-12-01 15:40:58,791(2498) org.hibernate.dialect.Dialect.<init>(Dialect.java:130) –> [main] HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-12-01 15:40:58,793(2500) org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:120) –> [main] HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException  
[DEBUG] 2015-12-01 15:40:58,794(2501) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:40:58,794(2501) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:40:58,795(2502) org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:534) –> [main] Binding entity from annotated class: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:40:58,796(2503) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}  
[DEBUG] 2015-12-01 15:40:58,796(2503) org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1118) –> [main] No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED  
[DEBUG] 2015-12-01 15:40:58,798(2505) org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:394) –> [main] Import with entity name TestEntity  
[DEBUG] 2015-12-01 15:40:58,799(2506) org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:564) –> [main] Bind entity com.it_sucre.entity.TestEntity on table test  
[DEBUG] 2015-12-01 15:40:58,802(2509) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=id, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:40:58,803(2510) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property id with lazy=false  
[DEBUG] 2015-12-01 15:40:58,804(2511) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for id  
[DEBUG] 2015-12-01 15:40:58,804(2511) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property id  
[DEBUG] 2015-12-01 15:40:58,805(2512) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=name, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:40:58,806(2513) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property name with lazy=false  
[DEBUG] 2015-12-01 15:40:58,807(2514) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for name  
[DEBUG] 2015-12-01 15:40:58,808(2515) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property name  
[DEBUG] 2015-12-01 15:40:58,808(2515) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for id  
[DEBUG] 2015-12-01 15:40:58,809(2516) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for name  
[DEBUG] 2015-12-01 15:40:58,810(2517) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:40:58,811(2518) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:40:58,811(2518) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:40:58,812(2519) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:40:58,812(2519) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:40:58,813(2520) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:40:58,813(2520) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:40:58,814(2521) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[DEBUG] 2015-12-01 15:40:58,817(2524) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:117) –> [main] Automatic flush during beforeCompletion(): disabled  
[DEBUG] 2015-12-01 15:40:58,817(2524) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:123) –> [main] Automatic session close at end of transaction: disabled  
[DEBUG] 2015-12-01 15:40:58,818(2525) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:134) –> [main] JDBC batch size: 15  
[DEBUG] 2015-12-01 15:40:58,818(2525) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:140) –> [main] JDBC batch updates for versioned data: disabled  
[DEBUG] 2015-12-01 15:40:58,819(2526) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:150) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-12-01 15:40:58,820(2527) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:156) –> [main] Wrap result sets: disabled  
[DEBUG] 2015-12-01 15:40:58,821(2528) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:162) –> [main] JDBC3 getGeneratedKeys(): enabled  
[DEBUG] 2015-12-01 15:40:58,821(2528) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:174) –> [main] multi-tenancy strategy : NONE  
[DEBUG] 2015-12-01 15:40:58,823(2530) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:180) –> [main] Connection release mode: auto  
[INFO ] 2015-12-01 15:40:58,824(2531) org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:68) –> [main] HHH000399: Using default transaction strategy (direct JDBC transactions)  
[DEBUG] 2015-12-01 15:40:58,826(2533) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Using BatchFetchStyle : LEGACY  
[DEBUG] 2015-12-01 15:40:58,827(2534) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:221) –> [main] Maximum outer join fetch depth: 2  
[DEBUG] 2015-12-01 15:40:58,828(2535) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:227) –> [main] Default batch fetch size: 1  
[DEBUG] 2015-12-01 15:40:58,829(2536) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:233) –> [main] Generate SQL with comments: disabled  
[DEBUG] 2015-12-01 15:40:58,829(2536) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:239) –> [main] Order SQL updates by primary key: disabled  
[DEBUG] 2015-12-01 15:40:58,830(2537) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Order SQL inserts for batching: disabled  
[DEBUG] 2015-12-01 15:40:58,830(2537) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Default null ordering: none  
[DEBUG] 2015-12-01 15:40:58,832(2539) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:584) –> [main] Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-12-01 15:40:58,834(2541) org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) –> [main] HHH000397: Using ASTQueryTranslatorFactory  
[DEBUG] 2015-12-01 15:40:58,834(2541) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:263) –> [main] Query language substitutions: {}  
[DEBUG] 2015-12-01 15:40:58,835(2542) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:269) –> [main] JPA-QL strict compliance: disabled  
[DEBUG] 2015-12-01 15:40:58,836(2543) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:277) –> [main] Second-level cache: enabled  
[DEBUG] 2015-12-01 15:40:58,837(2544) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:283) –> [main] Query cache: disabled  
[DEBUG] 2015-12-01 15:40:58,838(2545) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:524) –> [main] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory  
[DEBUG] 2015-12-01 15:40:58,839(2546) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:534) –> [main] org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.  
[DEBUG] 2015-12-01 15:40:58,840(2547) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:306) –> [main] Optimize cache for minimal puts: disabled  
[DEBUG] 2015-12-01 15:40:58,841(2548) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:321) –> [main] Structured second-level cache entries: disabled  
[DEBUG] 2015-12-01 15:40:58,844(2551) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:331) –> [main] Second-level cache direct-reference entries: disabled  
[DEBUG] 2015-12-01 15:40:58,845(2552) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:339) –> [main] Statistics: disabled  
[DEBUG] 2015-12-01 15:40:58,846(2553) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:345) –> [main] Deleted entity synthetic identifier rollback: disabled  
[DEBUG] 2015-12-01 15:40:58,862(2569) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:372) –> [main] Default entity-mode: pojo  
[DEBUG] 2015-12-01 15:40:58,864(2571) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:378) –> [main] Named query checking : enabled  
[DEBUG] 2015-12-01 15:40:58,864(2571) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:384) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): enabled  
[DEBUG] 2015-12-01 15:40:58,866(2573) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:402) –> [main] Allow initialization of lazy state outside session : : disabled  
[DEBUG] 2015-12-01 15:40:58,867(2574) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:412) –> [main] JTA Track by Thread: enabled  
[DEBUG] 2015-12-01 15:40:58,869(2576) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Building session factory  
[DEBUG] 2015-12-01 15:40:58,871(2578) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:280) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-12-01 15:40:58,873(2580) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:281) –> [main] Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=D:\Java\jdk1.8.0_40\jre\bin, java.vm.version=25.40-b25, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\Java\workspace\demo-chained-transactionmanager, java.runtime.version=1.8.0_40-b26, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate4.SpringSessionContext, java.endorsed.dirs=D:\Java\jdk1.8.0_40\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\奇点之~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8.1, sun.jnu.encoding=GBK, java.library.path=D:\Java\jdk1.8.0_40\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/jdk1.8.0_40/bin/../jre/bin/server;D:/Java/jdk1.8.0_40/bin/../jre/bin;D:/Java/jdk1.8.0_40/bin/../jre/lib/amd64;D:\Java\jdk1.8.0_40/bin;D:\Java\jdk1.8.0_40/lib/dt.jar;D:\Java\jdk1.8.0_40/lib/tools.jar;D:\__ENV__\apache-maven-3.2.1/bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__ENV__\apache-tomcat-7.0.57\bin;D:\__ENV__\apache-tomcat-7.0.57\jre;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\TortoiseSVN\bin;D:\__ENV__\eclipse;;., hibernate.connection.datasource=org.apache.commons.dbcp.BasicDataSource@1a6f5124, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=6.3, user.home=C:\Users\奇点之光08老师, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=奇点之光08老师, java.class.path=D:\Java\workspace\demo-chained-transactionmanager\target\test-classes;D:\Java\workspace\demo-chained-transactionmanager\target\classes;D:\__ENV__\repo\ch\qos\logback\logback-core\0.9.28\logback-core-0.9.28.jar;D:\__ENV__\repo\ch\qos\logback\logback-classic\0.9.28\logback-classic-0.9.28.jar;D:\__ENV__\repo\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;D:\__ENV__\repo\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;D:\__ENV__\repo\org\slf4j\slf4j-api\1.7.7\slf4j-api-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-jdk14\1.7.7\slf4j-jdk14-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-log4j12\1.7.7\slf4j-log4j12-1.7.7.jar;D:\__ENV__\repo\mysql\mysql-connector-java\5.1.26\mysql-connector-java-5.1.26.jar;D:\__ENV__\repo\log4j\log4j\1.2.14\log4j-1.2.14.jar;D:\__ENV__\repo\org\springframework\data\spring-data-commons\1.8.0.RELEASE\spring-data-commons-1.8.0.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\slf4j\jcl-over-slf4j\1.7.7\jcl-over-slf4j-1.7.7.jar;D:\__ENV__\repo\org\springframework\spring-context\3.2.4.RELEASE\spring-context-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-aop\3.2.4.RELEASE\spring-aop-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-expression\3.2.4.RELEASE\spring-expression-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-oxm\3.2.4.RELEASE\spring-oxm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\__ENV__\repo\org\springframework\spring-web\3.2.4.RELEASE\spring-web-3.2.4.RELEASE.jar;D:\__ENV__\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\__ENV__\repo\org\springframework\spring-webmvc\3.2.4.RELEASE\spring-webmvc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-orm\3.2.4.RELEASE\spring-orm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-jdbc\3.2.4.RELEASE\spring-jdbc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-tx\3.2.4.RELEASE\spring-tx-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-test\3.2.4.RELEASE\spring-test-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\__ENV__\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\__ENV__\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\__ENV__\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\__ENV__\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-validator\4.2.0.Final\hibernate-validator-4.2.0.Final.jar;D:\__ENV__\repo\javax\validation\validation-api\1.0.0.GA\validation-api-1.0.0.GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-core\4.2.10.Final\hibernate-core-4.2.10.Final.jar;D:\__ENV__\repo\antlr\antlr\2.7.7\antlr-2.7.7.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.1.Final\jboss-transaction-api_1.1_spec-1.0.1.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpcore\4.3.1\httpcore-4.3.1.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpclient\4.3.1\httpclient-4.3.1.jar;D:\__ENV__\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\__ENV__\repo\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpmime\4.3.1\httpmime-4.3.1.jar;D:\__ENV__\repo\redis\clients\jedis\2.7.2\jedis-2.7.2.jar;D:\__ENV__\repo\org\apache\commons\commons-pool2\2.3\commons-pool2-2.3.jar;D:\__ENV__\repo\javax\persistence\persistence-api\1.0.2\persistence-api-1.0.2.jar;D:\__ENV__\repo\org\ansj\ansj_seg\0.9\ansj_seg-0.9.jar;D:\__ENV__\repo\org\ansj\tree_split\1.0.1\tree_split-1.0.1.jar;D:\__ENV__\repo\org\apache\commons-lang3\commons-lang3\3.1\commons-lang3-3.1.jar;D:\__ENV__\repo\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;D:\__ENV__\repo\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;D:\__ENV__\repo\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;D:\__ENV__\repo\commons-io\commons-io\2.4\commons-io-2.4.jar;D:\__ENV__\repo\commons-fileupload\commons-fileupload\1.2.2\commons-fileupload-1.2.2.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\__ENV__\repo\com\googlecode\xmemcached\xmemcached\1.4.1\xmemcached-1.4.1.jar;D:\__ENV__\repo\net\sf\json-lib\json-lib\2.4\json-lib-2.4-jdk15.jar;D:\__ENV__\repo\commons-beanutils\commons-beanutils\1.8.0\commons-beanutils-1.8.0.jar;D:\__ENV__\repo\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;D:\__ENV__\repo\net\sf\ezmorph\ezmorph\1.0.6\ezmorph-1.0.6.jar;D:\__ENV__\repo\org\mybatis\mybatis\3.1.1\mybatis-3.1.1.jar;D:\__ENV__\repo\org\mybatis\mybatis-spring\1.1.1\mybatis-spring-1.1.1.jar;D:\__ENV__\repo\junit\junit\4.11\junit-4.11.jar;D:\__ENV__\repo\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/358/1/.cp/;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/357/1/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.classLoader.application=sun.misc.Launcher$AppClassLoader@3b07d329, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=D:\Java\jdk1.8.0_40\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 62020 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -test com.it_sucre.service.HibernateServiceTest:test, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_40, java.ext.dirs=D:\Java\jdk1.8.0_40\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=D:\Java\jdk1.8.0_40\jre\lib\resources.jar;D:\Java\jdk1.8.0_40\jre\lib\rt.jar;D:\Java\jdk1.8.0_40\jre\lib\sunrsasign.jar;D:\Java\jdk1.8.0_40\jre\lib\jsse.jar;D:\Java\jdk1.8.0_40\jre\lib\jce.jar;D:\Java\jdk1.8.0_40\jre\lib\charsets.jar;D:\Java\jdk1.8.0_40\jre\lib\jfr.jar;D:\Java\jdk1.8.0_40\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}  
[DEBUG] 2015-12-01 15:40:58,888(2595) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[DEBUG] 2015-12-01 15:40:58,891(2598) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3604) –> [main] Static SQL for entity: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:40:58,893(2600) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3609) –> [main]  Version select: select id from test where id =?  
[DEBUG] 2015-12-01 15:40:58,894(2601) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3612) –> [main]  Snapshot select: select testentity_.id, testentity_.name as name2_0_ from test testentity_ where testentity_.id=?  
[DEBUG] 2015-12-01 15:40:58,895(2602) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3615) –> [main]  Insert 0: insert into test (name, id) values (?, ?)  
[DEBUG] 2015-12-01 15:40:58,895(2602) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3616) –> [main]  Update 0: update test set name=? where id=?  
[DEBUG] 2015-12-01 15:40:58,896(2603) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3617) –> [main]  Delete 0: delete from test where id=?  
[DEBUG] 2015-12-01 15:40:58,897(2604) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [NONE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:40:58,900(2607) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:40:58,905(2612) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:40:58,906(2613) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE_NOWAIT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:40:58,907(2614) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [FORCE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:40:58,909(2616) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? lock in share mode  
[DEBUG] 2015-12-01 15:40:58,911(2618) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_WRITE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:40:58,912(2619) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:40:58,912(2619) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:40:58,913(2620) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:40:58,914(2621) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:40:58,914(2621) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:40:58,915(2622) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:75) –> [main] Registering SessionFactory: 3c345861-da14-42ce-97bd-c98cbede8b28 (<unnamed>)  
[DEBUG] 2015-12-01 15:40:58,915(2622) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:82) –> [main] Not binding SessionFactory to JNDI, no JNDI name configured  
[DEBUG] 2015-12-01 15:40:58,916(2623) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:492) –> [main] Instantiated session factory  
[INFO ] 2015-12-01 15:40:58,916(2623) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:182) –> [main] HHH000228: Running hbm2ddl schema update  
[INFO ] 2015-12-01 15:40:58,917(2624) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:193) –> [main] HHH000102: Fetching database metadata  
[INFO ] 2015-12-01 15:40:58,917(2624) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:205) –> [main] HHH000396: Updating schema  
[DEBUG] 2015-12-01 15:40:58,918(2625) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:40:58,919(2626) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:40:58,919(2626) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:40:58,920(2627) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:40:58,920(2627) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:40:58,920(2627) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:40:58,920(2627) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:40:58,921(2628) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:40:58,921(2628) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:40:58,922(2629) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[INFO ] 2015-12-01 15:40:58,942(2649) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] HHH000261: Table found: Test.test  
[INFO ] 2015-12-01 15:40:58,942(2649) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:67) –> [main] HHH000037: Columns: [name, id]  
[INFO ] 2015-12-01 15:40:58,943(2650) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] HHH000108: Foreign keys: []  
[INFO ] 2015-12-01 15:40:58,943(2650) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:70) –> [main] HHH000126: Indexes: [primary]  
[DEBUG] 2015-12-01 15:40:58,944(2651) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-12-01 15:40:58,945(2652) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:242) –> [main] HHH000232: Schema update complete  
[DEBUG] 2015-12-01 15:40:58,946(2653) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1073) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-12-01 15:40:58,946(2653) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1096) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-12-01 15:40:58,947(2654) org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:110) –> [main] Statistics initialized [enabled=false]  
[DEBUG] 2015-12-01 15:40:59,559(3266) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:212) –> [main] Obtaining JDBC connection  
[DEBUG] 2015-12-01 15:40:59,559(3266) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:218) –> [main] Obtained JDBC connection  
[DEBUG] 2015-12-01 15:40:59,559(3266) org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) –> [main] begin  
[DEBUG] 2015-12-01 15:40:59,559(3266) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) –> [main] initial autocommit status: true  
[DEBUG] 2015-12-01 15:40:59,559(3266) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) –> [main] disabling autocommit  
[DEBUG] 2015-12-01 15:40:59,622(3329) org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:130) –> [main] Generated identifier: 0, using strategy: org.hibernate.id.Assigned  
[DEBUG] 2015-12-01 15:40:59,637(3344) org.hibernate.engine.transaction.spi.AbstractTransactionImpl.rollback(AbstractTransactionImpl.java:203) –> [main] rolling back  
[DEBUG] 2015-12-01 15:40:59,637(3344) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doRollback(JdbcTransaction.java:164) –> [main] rolled JDBC Connection  
[DEBUG] 2015-12-01 15:40:59,637(3344) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) –> [main] re-enabling autocommit  
[DEBUG] 2015-12-01 15:40:59,637(3344) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:232) –> [main] Releasing JDBC connection  
[DEBUG] 2015-12-01 15:40:59,637(3344) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:250) –> [main] Released JDBC connection  
[DEBUG] 2015-12-01 15:40:59,668(3375) org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1374) –> [Thread-2] HHH000031: Closing  
[DEBUG] 2015-12-01 15:40:59,684(3391) org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1374) –> [Thread-2] HHH000031: Closing  
[DEBUG] 2015-12-01 15:41:15,277(0) org.hibernate.cfg.Configuration.<clinit>(Configuration.java:184) –> [main] Logging Provider: org.jboss.logging.Log4jLoggerProvider  
[DEBUG] 2015-12-01 15:41:15,308(31) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@5f9b2141  
[DEBUG] 2015-12-01 15:41:15,308(31) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@5f9b2141  
[DEBUG] 2015-12-01 15:41:15,308(31) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5f9b2141  
[DEBUG] 2015-12-01 15:41:15,308(31) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@193f604a  
[DEBUG] 2015-12-01 15:41:15,308(31) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@3514a4c0  
[DEBUG] 2015-12-01 15:41:15,324(47) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@793be5ca  
[DEBUG] 2015-12-01 15:41:15,324(47) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@6babf3bf  
[DEBUG] 2015-12-01 15:41:15,324(47) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@6babf3bf  
[DEBUG] 2015-12-01 15:41:15,324(47) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6babf3bf  
[DEBUG] 2015-12-01 15:41:15,339(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@2b48a640  
[DEBUG] 2015-12-01 15:41:15,339(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@2b48a640  
[DEBUG] 2015-12-01 15:41:15,339(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2b48a640  
[DEBUG] 2015-12-01 15:41:15,339(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@73700b80  
[DEBUG] 2015-12-01 15:41:15,339(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@73700b80  
[DEBUG] 2015-12-01 15:41:15,339(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@73700b80  
[DEBUG] 2015-12-01 15:41:15,339(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@483f6d77  
[DEBUG] 2015-12-01 15:41:15,339(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@483f6d77  
[DEBUG] 2015-12-01 15:41:15,339(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@483f6d77  
[DEBUG] 2015-12-01 15:41:15,355(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@78123e82  
[DEBUG] 2015-12-01 15:41:15,355(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@78123e82  
[DEBUG] 2015-12-01 15:41:15,355(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@78123e82  
[DEBUG] 2015-12-01 15:41:15,355(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@bd4dc25  
[DEBUG] 2015-12-01 15:41:15,355(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@bd4dc25  
[DEBUG] 2015-12-01 15:41:15,355(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@bd4dc25  
[DEBUG] 2015-12-01 15:41:15,355(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@32ee6fee  
[DEBUG] 2015-12-01 15:41:15,355(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@32ee6fee  
[DEBUG] 2015-12-01 15:41:15,355(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@32ee6fee  
[DEBUG] 2015-12-01 15:41:15,370(93) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2b91004a  
[DEBUG] 2015-12-01 15:41:15,370(93) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2b91004a  
[DEBUG] 2015-12-01 15:41:15,370(93) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@22ef9844  
[DEBUG] 2015-12-01 15:41:15,370(93) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@22ef9844  
[DEBUG] 2015-12-01 15:41:15,370(93) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration string -> org.hibernate.type.StringType@2f217633  
[DEBUG] 2015-12-01 15:41:15,370(93) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@2f217633  
[DEBUG] 2015-12-01 15:41:15,386(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4738a206  
[DEBUG] 2015-12-01 15:41:15,386(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@58695725  
[DEBUG] 2015-12-01 15:41:15,386(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration url -> org.hibernate.type.UrlType@7c24b813  
[DEBUG] 2015-12-01 15:41:15,386(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@7c24b813  
[DEBUG] 2015-12-01 15:41:15,402(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration date -> org.hibernate.type.DateType@4f2b503c  
[DEBUG] 2015-12-01 15:41:15,402(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@4f2b503c  
[DEBUG] 2015-12-01 15:41:15,402(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration time -> org.hibernate.type.TimeType@342c38f8  
[DEBUG] 2015-12-01 15:41:15,402(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@342c38f8  
[DEBUG] 2015-12-01 15:41:15,402(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@57cf54e1  
[DEBUG] 2015-12-01 15:41:15,402(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@57cf54e1  
[DEBUG] 2015-12-01 15:41:15,402(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@57cf54e1  
[DEBUG] 2015-12-01 15:41:15,402(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3ee37e5a  
[DEBUG] 2015-12-01 15:41:15,417(140) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@f0da945  
[DEBUG] 2015-12-01 15:41:15,417(140) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@f0da945  
[DEBUG] 2015-12-01 15:41:15,417(140) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@f0da945  
[DEBUG] 2015-12-01 15:41:15,417(140) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3e11f9e9  
[DEBUG] 2015-12-01 15:41:15,417(140) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@2c1b194a  
[DEBUG] 2015-12-01 15:41:15,417(140) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2c1b194a  
[DEBUG] 2015-12-01 15:41:15,417(140) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@437da279  
[DEBUG] 2015-12-01 15:41:15,417(140) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@437da279  
[DEBUG] 2015-12-01 15:41:15,417(140) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@6253c26  
[DEBUG] 2015-12-01 15:41:15,417(140) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6253c26  
[DEBUG] 2015-12-01 15:41:15,417(140) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration class -> org.hibernate.type.ClassType@47e2e487  
[DEBUG] 2015-12-01 15:41:15,433(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@47e2e487  
[DEBUG] 2015-12-01 15:41:15,433(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2dc54ad4  
[DEBUG] 2015-12-01 15:41:15,433(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2dc54ad4  
[DEBUG] 2015-12-01 15:41:15,433(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@428640fa  
[DEBUG] 2015-12-01 15:41:15,433(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6bd61f98  
[DEBUG] 2015-12-01 15:41:15,433(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@72e5a8e  
[DEBUG] 2015-12-01 15:41:15,433(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@72e5a8e  
[DEBUG] 2015-12-01 15:41:15,433(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@72e5a8e  
[DEBUG] 2015-12-01 15:41:15,449(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@73e9cf30  
[DEBUG] 2015-12-01 15:41:15,449(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@73e9cf30  
[DEBUG] 2015-12-01 15:41:15,449(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@73e9cf30  
[DEBUG] 2015-12-01 15:41:15,449(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration image -> org.hibernate.type.ImageType@5a45133e  
[DEBUG] 2015-12-01 15:41:15,449(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@5e600dd5  
[DEBUG] 2015-12-01 15:41:15,449(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@5e600dd5  
[DEBUG] 2015-12-01 15:41:15,449(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@5e600dd5  
[DEBUG] 2015-12-01 15:41:15,464(187) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@51c668e3  
[DEBUG] 2015-12-01 15:41:15,464(187) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@51c668e3  
[DEBUG] 2015-12-01 15:41:15,464(187) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@51c668e3  
[DEBUG] 2015-12-01 15:41:15,464(187) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration text -> org.hibernate.type.TextType@5824a83d  
[DEBUG] 2015-12-01 15:41:15,464(187) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ntext -> org.hibernate.type.NTextType@229c6181  
[DEBUG] 2015-12-01 15:41:15,495(218) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@4145bad8  
[DEBUG] 2015-12-01 15:41:15,511(234) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4145bad8  
[DEBUG] 2015-12-01 15:41:15,511(234) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@750e2b97  
[DEBUG] 2015-12-01 15:41:15,527(250) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@78e4deb0  
[DEBUG] 2015-12-01 15:41:15,527(250) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@78e4deb0  
[DEBUG] 2015-12-01 15:41:15,527(250) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nclob -> org.hibernate.type.NClobType@543295b0  
[DEBUG] 2015-12-01 15:41:15,527(250) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@543295b0  
[DEBUG] 2015-12-01 15:41:15,527(250) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3b0fe47a  
[DEBUG] 2015-12-01 15:41:15,542(265) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@58cbafc2  
[DEBUG] 2015-12-01 15:41:15,542(265) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@1cf6d1be  
[DEBUG] 2015-12-01 15:41:15,542(265) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@712625fd  
[DEBUG] 2015-12-01 15:41:15,542(265) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@712625fd  
[DEBUG] 2015-12-01 15:41:15,542(265) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1c5920df  
[DEBUG] 2015-12-01 15:41:15,558(281) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@79e4c792  
[DEBUG] 2015-12-01 15:41:15,558(281) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4c60d6e9  
[DEBUG] 2015-12-01 15:41:15,558(281) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4a83a74a  
[DEBUG] 2015-12-01 15:41:15,558(281) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4b29d1d2  
[DEBUG] 2015-12-01 15:41:15,558(281) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@28261e8e  
[DEBUG] 2015-12-01 15:41:15,558(281) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@8519cb4  
[DEBUG] 2015-12-01 15:41:15,558(281) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2d901eb0  
[INFO ] 2015-12-01 15:41:15,589(312) org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66) –> [main] HCANN000001: Hibernate Commons Annotations {4.0.4.Final}  
[INFO ] 2015-12-01 15:41:15,605(328) org.hibernate.Version.logVersion(Version.java:41) –> [main] HHH000412: Hibernate Core {4.2.10.Final}  
[INFO ] 2015-12-01 15:41:15,605(328) org.hibernate.cfg.Environment.<clinit>(Environment.java:238) –> [main] HHH000206: hibernate.properties not found  
[INFO ] 2015-12-01 15:41:15,605(328) org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:345) –> [main] HHH000021: Bytecode provider name : javassist  
[DEBUG] 2015-12-01 15:41:15,636(359) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-12-01 15:41:15,636(359) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-12-01 15:41:15,636(359) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:41:15,636(359) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:41:15,636(359) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-12-01 15:41:15,636(359) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]  
[DEBUG] 2015-12-01 15:41:15,652(375) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-12-01 15:41:15,652(375) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-12-01 15:41:15,652(375) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-12-01 15:41:15,652(375) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-12-01 15:41:15,652(375) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-12-01 15:41:15,652(375) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-12-01 15:41:15,652(375) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-12-01 15:41:15,652(375) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-12-01 15:41:15,652(375) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]  
[DEBUG] 2015-12-01 15:41:15,699(422) org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) –> [main] Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].  
[DEBUG] 2015-12-01 15:41:15,745(468) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1781) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-12-01 15:41:16,167(890) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:121) –> [main] Database ->
       name : MySQL
    version : 5.6.22
      major : 5
      minor : 6  
[DEBUG] 2015-12-01 15:41:16,178(901) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:127) –> [main] Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[DEBUG] 2015-12-01 15:41:16,178(901) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:133) –> [main] JDBC version : 4.0  
[INFO ] 2015-12-01 15:41:16,195(918) org.hibernate.dialect.Dialect.<init>(Dialect.java:130) –> [main] HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-12-01 15:41:16,226(949) org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:120) –> [main] HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException  
[DEBUG] 2015-12-01 15:41:16,257(980) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:41:16,257(980) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:41:16,273(996) org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:534) –> [main] Binding entity from annotated class: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:41:16,335(1058) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}  
[DEBUG] 2015-12-01 15:41:16,335(1058) org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1118) –> [main] No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED  
[DEBUG] 2015-12-01 15:41:16,367(1090) org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:394) –> [main] Import with entity name TestEntity  
[DEBUG] 2015-12-01 15:41:16,382(1105) org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:564) –> [main] Bind entity com.it_sucre.entity.TestEntity on table test  
[DEBUG] 2015-12-01 15:41:16,429(1152) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=id, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:41:16,445(1168) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property id with lazy=false  
[DEBUG] 2015-12-01 15:41:16,445(1168) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for id  
[DEBUG] 2015-12-01 15:41:16,445(1168) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property id  
[DEBUG] 2015-12-01 15:41:16,460(1183) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=name, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:41:16,460(1183) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property name with lazy=false  
[DEBUG] 2015-12-01 15:41:16,460(1183) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for name  
[DEBUG] 2015-12-01 15:41:16,460(1183) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property name  
[DEBUG] 2015-12-01 15:41:16,460(1183) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for id  
[DEBUG] 2015-12-01 15:41:16,460(1183) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for name  
[DEBUG] 2015-12-01 15:41:16,460(1183) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:41:16,476(1199) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:41:16,476(1199) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:41:16,476(1199) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:41:16,476(1199) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:41:16,476(1199) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:41:16,476(1199) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:41:16,476(1199) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[DEBUG] 2015-12-01 15:41:16,492(1215) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:117) –> [main] Automatic flush during beforeCompletion(): disabled  
[DEBUG] 2015-12-01 15:41:16,492(1215) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:123) –> [main] Automatic session close at end of transaction: disabled  
[DEBUG] 2015-12-01 15:41:16,507(1230) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:134) –> [main] JDBC batch size: 15  
[DEBUG] 2015-12-01 15:41:16,507(1230) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:140) –> [main] JDBC batch updates for versioned data: disabled  
[DEBUG] 2015-12-01 15:41:16,507(1230) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:150) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-12-01 15:41:16,507(1230) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:156) –> [main] Wrap result sets: disabled  
[DEBUG] 2015-12-01 15:41:16,507(1230) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:162) –> [main] JDBC3 getGeneratedKeys(): enabled  
[DEBUG] 2015-12-01 15:41:16,507(1230) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:174) –> [main] multi-tenancy strategy : NONE  
[DEBUG] 2015-12-01 15:41:16,507(1230) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:180) –> [main] Connection release mode: auto  
[INFO ] 2015-12-01 15:41:16,507(1230) org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:68) –> [main] HHH000399: Using default transaction strategy (direct JDBC transactions)  
[DEBUG] 2015-12-01 15:41:16,507(1230) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Using BatchFetchStyle : LEGACY  
[DEBUG] 2015-12-01 15:41:16,507(1230) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:221) –> [main] Maximum outer join fetch depth: 2  
[DEBUG] 2015-12-01 15:41:16,507(1230) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:227) –> [main] Default batch fetch size: 1  
[DEBUG] 2015-12-01 15:41:16,507(1230) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:233) –> [main] Generate SQL with comments: disabled  
[DEBUG] 2015-12-01 15:41:16,507(1230) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:239) –> [main] Order SQL updates by primary key: disabled  
[DEBUG] 2015-12-01 15:41:16,507(1230) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Order SQL inserts for batching: disabled  
[DEBUG] 2015-12-01 15:41:16,507(1230) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Default null ordering: none  
[DEBUG] 2015-12-01 15:41:16,507(1230) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:584) –> [main] Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-12-01 15:41:16,539(1262) org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) –> [main] HHH000397: Using ASTQueryTranslatorFactory  
[DEBUG] 2015-12-01 15:41:16,539(1262) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:263) –> [main] Query language substitutions: {}  
[DEBUG] 2015-12-01 15:41:16,539(1262) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:269) –> [main] JPA-QL strict compliance: disabled  
[DEBUG] 2015-12-01 15:41:16,539(1262) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:277) –> [main] Second-level cache: enabled  
[DEBUG] 2015-12-01 15:41:16,539(1262) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:283) –> [main] Query cache: disabled  
[DEBUG] 2015-12-01 15:41:16,539(1262) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:524) –> [main] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory  
[DEBUG] 2015-12-01 15:41:16,539(1262) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:534) –> [main] org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.  
[DEBUG] 2015-12-01 15:41:16,539(1262) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:306) –> [main] Optimize cache for minimal puts: disabled  
[DEBUG] 2015-12-01 15:41:16,539(1262) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:321) –> [main] Structured second-level cache entries: disabled  
[DEBUG] 2015-12-01 15:41:16,539(1262) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:331) –> [main] Second-level cache direct-reference entries: disabled  
[DEBUG] 2015-12-01 15:41:16,539(1262) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:339) –> [main] Statistics: disabled  
[DEBUG] 2015-12-01 15:41:16,539(1262) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:345) –> [main] Deleted entity synthetic identifier rollback: disabled  
[DEBUG] 2015-12-01 15:41:16,539(1262) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:372) –> [main] Default entity-mode: pojo  
[DEBUG] 2015-12-01 15:41:16,539(1262) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:378) –> [main] Named query checking : enabled  
[DEBUG] 2015-12-01 15:41:16,539(1262) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:384) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): enabled  
[DEBUG] 2015-12-01 15:41:16,539(1262) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:402) –> [main] Allow initialization of lazy state outside session : : disabled  
[DEBUG] 2015-12-01 15:41:16,554(1277) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:412) –> [main] JTA Track by Thread: enabled  
[DEBUG] 2015-12-01 15:41:16,570(1293) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Building session factory  
[DEBUG] 2015-12-01 15:41:16,585(1308) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:280) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-12-01 15:41:16,585(1308) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:281) –> [main] Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=D:\Java\jdk1.8.0_40\jre\bin, java.vm.version=25.40-b25, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\Java\workspace\demo-chained-transactionmanager, java.runtime.version=1.8.0_40-b26, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate4.SpringSessionContext, java.endorsed.dirs=D:\Java\jdk1.8.0_40\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\奇点之~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8.1, sun.jnu.encoding=GBK, java.library.path=D:\Java\jdk1.8.0_40\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/jdk1.8.0_40/bin/../jre/bin/server;D:/Java/jdk1.8.0_40/bin/../jre/bin;D:/Java/jdk1.8.0_40/bin/../jre/lib/amd64;D:\Java\jdk1.8.0_40/bin;D:\Java\jdk1.8.0_40/lib/dt.jar;D:\Java\jdk1.8.0_40/lib/tools.jar;D:\__ENV__\apache-maven-3.2.1/bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__ENV__\apache-tomcat-7.0.57\bin;D:\__ENV__\apache-tomcat-7.0.57\jre;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\TortoiseSVN\bin;D:\__ENV__\eclipse;;., hibernate.connection.datasource=org.apache.commons.dbcp.BasicDataSource@424ebba3, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=6.3, user.home=C:\Users\奇点之光08老师, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=奇点之光08老师, java.class.path=D:\Java\workspace\demo-chained-transactionmanager\target\test-classes;D:\Java\workspace\demo-chained-transactionmanager\target\classes;D:\__ENV__\repo\ch\qos\logback\logback-core\0.9.28\logback-core-0.9.28.jar;D:\__ENV__\repo\ch\qos\logback\logback-classic\0.9.28\logback-classic-0.9.28.jar;D:\__ENV__\repo\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;D:\__ENV__\repo\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;D:\__ENV__\repo\org\slf4j\slf4j-api\1.7.7\slf4j-api-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-jdk14\1.7.7\slf4j-jdk14-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-log4j12\1.7.7\slf4j-log4j12-1.7.7.jar;D:\__ENV__\repo\mysql\mysql-connector-java\5.1.26\mysql-connector-java-5.1.26.jar;D:\__ENV__\repo\log4j\log4j\1.2.14\log4j-1.2.14.jar;D:\__ENV__\repo\org\springframework\data\spring-data-commons\1.8.0.RELEASE\spring-data-commons-1.8.0.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\slf4j\jcl-over-slf4j\1.7.7\jcl-over-slf4j-1.7.7.jar;D:\__ENV__\repo\org\springframework\spring-context\3.2.4.RELEASE\spring-context-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-aop\3.2.4.RELEASE\spring-aop-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-expression\3.2.4.RELEASE\spring-expression-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-oxm\3.2.4.RELEASE\spring-oxm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\__ENV__\repo\org\springframework\spring-web\3.2.4.RELEASE\spring-web-3.2.4.RELEASE.jar;D:\__ENV__\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\__ENV__\repo\org\springframework\spring-webmvc\3.2.4.RELEASE\spring-webmvc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-orm\3.2.4.RELEASE\spring-orm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-jdbc\3.2.4.RELEASE\spring-jdbc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-tx\3.2.4.RELEASE\spring-tx-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-test\3.2.4.RELEASE\spring-test-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\__ENV__\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\__ENV__\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\__ENV__\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\__ENV__\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-validator\4.2.0.Final\hibernate-validator-4.2.0.Final.jar;D:\__ENV__\repo\javax\validation\validation-api\1.0.0.GA\validation-api-1.0.0.GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-core\4.2.10.Final\hibernate-core-4.2.10.Final.jar;D:\__ENV__\repo\antlr\antlr\2.7.7\antlr-2.7.7.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.1.Final\jboss-transaction-api_1.1_spec-1.0.1.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpcore\4.3.1\httpcore-4.3.1.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpclient\4.3.1\httpclient-4.3.1.jar;D:\__ENV__\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\__ENV__\repo\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpmime\4.3.1\httpmime-4.3.1.jar;D:\__ENV__\repo\redis\clients\jedis\2.7.2\jedis-2.7.2.jar;D:\__ENV__\repo\org\apache\commons\commons-pool2\2.3\commons-pool2-2.3.jar;D:\__ENV__\repo\javax\persistence\persistence-api\1.0.2\persistence-api-1.0.2.jar;D:\__ENV__\repo\org\ansj\ansj_seg\0.9\ansj_seg-0.9.jar;D:\__ENV__\repo\org\ansj\tree_split\1.0.1\tree_split-1.0.1.jar;D:\__ENV__\repo\org\apache\commons-lang3\commons-lang3\3.1\commons-lang3-3.1.jar;D:\__ENV__\repo\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;D:\__ENV__\repo\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;D:\__ENV__\repo\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;D:\__ENV__\repo\commons-io\commons-io\2.4\commons-io-2.4.jar;D:\__ENV__\repo\commons-fileupload\commons-fileupload\1.2.2\commons-fileupload-1.2.2.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\__ENV__\repo\com\googlecode\xmemcached\xmemcached\1.4.1\xmemcached-1.4.1.jar;D:\__ENV__\repo\net\sf\json-lib\json-lib\2.4\json-lib-2.4-jdk15.jar;D:\__ENV__\repo\commons-beanutils\commons-beanutils\1.8.0\commons-beanutils-1.8.0.jar;D:\__ENV__\repo\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;D:\__ENV__\repo\net\sf\ezmorph\ezmorph\1.0.6\ezmorph-1.0.6.jar;D:\__ENV__\repo\org\mybatis\mybatis\3.1.1\mybatis-3.1.1.jar;D:\__ENV__\repo\org\mybatis\mybatis-spring\1.1.1\mybatis-spring-1.1.1.jar;D:\__ENV__\repo\junit\junit\4.11\junit-4.11.jar;D:\__ENV__\repo\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/358/1/.cp/;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/357/1/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.classLoader.application=sun.misc.Launcher$AppClassLoader@3b07d329, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=D:\Java\jdk1.8.0_40\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 62027 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -test com.it_sucre.service.HibernateServiceTest:test, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_40, java.ext.dirs=D:\Java\jdk1.8.0_40\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=D:\Java\jdk1.8.0_40\jre\lib\resources.jar;D:\Java\jdk1.8.0_40\jre\lib\rt.jar;D:\Java\jdk1.8.0_40\jre\lib\sunrsasign.jar;D:\Java\jdk1.8.0_40\jre\lib\jsse.jar;D:\Java\jdk1.8.0_40\jre\lib\jce.jar;D:\Java\jdk1.8.0_40\jre\lib\charsets.jar;D:\Java\jdk1.8.0_40\jre\lib\jfr.jar;D:\Java\jdk1.8.0_40\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}  
[DEBUG] 2015-12-01 15:41:16,820(1543) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[DEBUG] 2015-12-01 15:41:17,117(1840) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3604) –> [main] Static SQL for entity: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:41:17,117(1840) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3609) –> [main]  Version select: select id from test where id =?  
[DEBUG] 2015-12-01 15:41:17,117(1840) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3612) –> [main]  Snapshot select: select testentity_.id, testentity_.name as name2_0_ from test testentity_ where testentity_.id=?  
[DEBUG] 2015-12-01 15:41:17,117(1840) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3615) –> [main]  Insert 0: insert into test (name, id) values (?, ?)  
[DEBUG] 2015-12-01 15:41:17,117(1840) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3616) –> [main]  Update 0: update test set name=? where id=?  
[DEBUG] 2015-12-01 15:41:17,132(1855) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3617) –> [main]  Delete 0: delete from test where id=?  
[DEBUG] 2015-12-01 15:41:17,164(1887) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [NONE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:41:17,164(1887) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:41:17,164(1887) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:41:17,164(1887) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE_NOWAIT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:41:17,181(1904) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [FORCE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:41:17,181(1904) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? lock in share mode  
[DEBUG] 2015-12-01 15:41:17,181(1904) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_WRITE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:41:17,181(1904) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:41:17,181(1904) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:41:17,181(1904) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:41:17,197(1920) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:41:17,197(1920) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:41:17,322(2045) org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:62) –> [main] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4816c290  
[DEBUG] 2015-12-01 15:41:17,322(2045) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:75) –> [main] Registering SessionFactory: 5edd5c95-847f-415d-8838-f6d71e69054d (<unnamed>)  
[DEBUG] 2015-12-01 15:41:17,322(2045) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:82) –> [main] Not binding SessionFactory to JNDI, no JNDI name configured  
[DEBUG] 2015-12-01 15:41:17,322(2045) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:492) –> [main] Instantiated session factory  
[INFO ] 2015-12-01 15:41:17,338(2061) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:182) –> [main] HHH000228: Running hbm2ddl schema update  
[INFO ] 2015-12-01 15:41:17,338(2061) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:193) –> [main] HHH000102: Fetching database metadata  
[INFO ] 2015-12-01 15:41:17,353(2076) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:205) –> [main] HHH000396: Updating schema  
[DEBUG] 2015-12-01 15:41:17,353(2076) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:41:17,353(2076) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:41:17,353(2076) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:41:17,353(2076) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:41:17,353(2076) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:41:17,353(2076) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:41:17,353(2076) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:41:17,353(2076) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:41:17,353(2076) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:41:17,353(2076) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[INFO ] 2015-12-01 15:41:17,400(2123) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] HHH000261: Table found: Test.test  
[INFO ] 2015-12-01 15:41:17,400(2123) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:67) –> [main] HHH000037: Columns: [name, id]  
[INFO ] 2015-12-01 15:41:17,400(2123) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] HHH000108: Foreign keys: []  
[INFO ] 2015-12-01 15:41:17,400(2123) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:70) –> [main] HHH000126: Indexes: [primary]  
[DEBUG] 2015-12-01 15:41:17,400(2123) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-12-01 15:41:17,400(2123) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:242) –> [main] HHH000232: Schema update complete  
[DEBUG] 2015-12-01 15:41:17,400(2123) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1073) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-12-01 15:41:17,400(2123) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1096) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-12-01 15:41:17,416(2139) org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:110) –> [main] Statistics initialized [enabled=false]  
[DEBUG] 2015-12-01 15:41:17,478(2201) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@5f9b2141  
[DEBUG] 2015-12-01 15:41:17,478(2201) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@5f9b2141  
[DEBUG] 2015-12-01 15:41:17,478(2201) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5f9b2141  
[DEBUG] 2015-12-01 15:41:17,478(2201) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@193f604a  
[DEBUG] 2015-12-01 15:41:17,494(2217) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@3514a4c0  
[DEBUG] 2015-12-01 15:41:17,494(2217) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@793be5ca  
[DEBUG] 2015-12-01 15:41:17,494(2217) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@6babf3bf  
[DEBUG] 2015-12-01 15:41:17,494(2217) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@6babf3bf  
[DEBUG] 2015-12-01 15:41:17,494(2217) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6babf3bf  
[DEBUG] 2015-12-01 15:41:17,494(2217) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@2b48a640  
[DEBUG] 2015-12-01 15:41:17,494(2217) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@2b48a640  
[DEBUG] 2015-12-01 15:41:17,494(2217) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2b48a640  
[DEBUG] 2015-12-01 15:41:17,494(2217) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@73700b80  
[DEBUG] 2015-12-01 15:41:17,494(2217) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@73700b80  
[DEBUG] 2015-12-01 15:41:17,494(2217) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@73700b80  
[DEBUG] 2015-12-01 15:41:17,494(2217) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@483f6d77  
[DEBUG] 2015-12-01 15:41:17,494(2217) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@483f6d77  
[DEBUG] 2015-12-01 15:41:17,510(2233) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@483f6d77  
[DEBUG] 2015-12-01 15:41:17,510(2233) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@78123e82  
[DEBUG] 2015-12-01 15:41:17,510(2233) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@78123e82  
[DEBUG] 2015-12-01 15:41:17,510(2233) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@78123e82  
[DEBUG] 2015-12-01 15:41:17,510(2233) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@bd4dc25  
[DEBUG] 2015-12-01 15:41:17,510(2233) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@bd4dc25  
[DEBUG] 2015-12-01 15:41:17,510(2233) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@bd4dc25  
[DEBUG] 2015-12-01 15:41:17,510(2233) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@32ee6fee  
[DEBUG] 2015-12-01 15:41:17,525(2248) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@32ee6fee  
[DEBUG] 2015-12-01 15:41:17,525(2248) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@32ee6fee  
[DEBUG] 2015-12-01 15:41:17,525(2248) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2b91004a  
[DEBUG] 2015-12-01 15:41:17,525(2248) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2b91004a  
[DEBUG] 2015-12-01 15:41:17,525(2248) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@22ef9844  
[DEBUG] 2015-12-01 15:41:17,525(2248) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@22ef9844  
[DEBUG] 2015-12-01 15:41:17,525(2248) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration string -> org.hibernate.type.StringType@2f217633  
[DEBUG] 2015-12-01 15:41:17,525(2248) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@2f217633  
[DEBUG] 2015-12-01 15:41:17,525(2248) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4738a206  
[DEBUG] 2015-12-01 15:41:17,525(2248) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@58695725  
[DEBUG] 2015-12-01 15:41:17,525(2248) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration url -> org.hibernate.type.UrlType@7c24b813  
[DEBUG] 2015-12-01 15:41:17,525(2248) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@7c24b813  
[DEBUG] 2015-12-01 15:41:17,525(2248) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration date -> org.hibernate.type.DateType@4f2b503c  
[DEBUG] 2015-12-01 15:41:17,525(2248) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@4f2b503c  
[DEBUG] 2015-12-01 15:41:17,525(2248) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration time -> org.hibernate.type.TimeType@342c38f8  
[DEBUG] 2015-12-01 15:41:17,525(2248) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@342c38f8  
[DEBUG] 2015-12-01 15:41:17,525(2248) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@57cf54e1  
[DEBUG] 2015-12-01 15:41:17,525(2248) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@57cf54e1  
[DEBUG] 2015-12-01 15:41:17,525(2248) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@57cf54e1  
[DEBUG] 2015-12-01 15:41:17,525(2248) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3ee37e5a  
[DEBUG] 2015-12-01 15:41:17,525(2248) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@f0da945  
[DEBUG] 2015-12-01 15:41:17,525(2248) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@f0da945  
[DEBUG] 2015-12-01 15:41:17,541(2264) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@f0da945  
[DEBUG] 2015-12-01 15:41:17,541(2264) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3e11f9e9  
[DEBUG] 2015-12-01 15:41:17,541(2264) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@2c1b194a  
[DEBUG] 2015-12-01 15:41:17,541(2264) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2c1b194a  
[DEBUG] 2015-12-01 15:41:17,541(2264) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@437da279  
[DEBUG] 2015-12-01 15:41:17,541(2264) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@437da279  
[DEBUG] 2015-12-01 15:41:17,541(2264) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@6253c26  
[DEBUG] 2015-12-01 15:41:17,541(2264) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6253c26  
[DEBUG] 2015-12-01 15:41:17,541(2264) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration class -> org.hibernate.type.ClassType@47e2e487  
[DEBUG] 2015-12-01 15:41:17,541(2264) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@47e2e487  
[DEBUG] 2015-12-01 15:41:17,541(2264) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2dc54ad4  
[DEBUG] 2015-12-01 15:41:17,541(2264) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2dc54ad4  
[DEBUG] 2015-12-01 15:41:17,541(2264) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@428640fa  
[DEBUG] 2015-12-01 15:41:17,541(2264) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6bd61f98  
[DEBUG] 2015-12-01 15:41:17,541(2264) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@72e5a8e  
[DEBUG] 2015-12-01 15:41:17,541(2264) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@72e5a8e  
[DEBUG] 2015-12-01 15:41:17,541(2264) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@72e5a8e  
[DEBUG] 2015-12-01 15:41:17,541(2264) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@73e9cf30  
[DEBUG] 2015-12-01 15:41:17,541(2264) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@73e9cf30  
[DEBUG] 2015-12-01 15:41:17,541(2264) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@73e9cf30  
[DEBUG] 2015-12-01 15:41:17,561(2284) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration image -> org.hibernate.type.ImageType@5a45133e  
[DEBUG] 2015-12-01 15:41:17,562(2285) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@5e600dd5  
[DEBUG] 2015-12-01 15:41:17,564(2287) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@5e600dd5  
[DEBUG] 2015-12-01 15:41:17,564(2287) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@5e600dd5  
[DEBUG] 2015-12-01 15:41:17,565(2288) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@51c668e3  
[DEBUG] 2015-12-01 15:41:17,565(2288) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@51c668e3  
[DEBUG] 2015-12-01 15:41:17,566(2289) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@51c668e3  
[DEBUG] 2015-12-01 15:41:17,566(2289) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration text -> org.hibernate.type.TextType@5824a83d  
[DEBUG] 2015-12-01 15:41:17,567(2290) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ntext -> org.hibernate.type.NTextType@229c6181  
[DEBUG] 2015-12-01 15:41:17,567(2290) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@4145bad8  
[DEBUG] 2015-12-01 15:41:17,568(2291) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4145bad8  
[DEBUG] 2015-12-01 15:41:17,568(2291) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@750e2b97  
[DEBUG] 2015-12-01 15:41:17,569(2292) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@78e4deb0  
[DEBUG] 2015-12-01 15:41:17,569(2292) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@78e4deb0  
[DEBUG] 2015-12-01 15:41:17,570(2293) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nclob -> org.hibernate.type.NClobType@543295b0  
[DEBUG] 2015-12-01 15:41:17,570(2293) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@543295b0  
[DEBUG] 2015-12-01 15:41:17,571(2294) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3b0fe47a  
[DEBUG] 2015-12-01 15:41:17,571(2294) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@58cbafc2  
[DEBUG] 2015-12-01 15:41:17,572(2295) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@1cf6d1be  
[DEBUG] 2015-12-01 15:41:17,572(2295) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@712625fd  
[DEBUG] 2015-12-01 15:41:17,573(2296) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@712625fd  
[DEBUG] 2015-12-01 15:41:17,573(2296) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@54afd745  
[DEBUG] 2015-12-01 15:41:17,574(2297) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@fff25f1  
[DEBUG] 2015-12-01 15:41:17,574(2297) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@263f04ca  
[DEBUG] 2015-12-01 15:41:17,574(2297) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5a021cb9  
[DEBUG] 2015-12-01 15:41:17,576(2299) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@f31c0c6  
[DEBUG] 2015-12-01 15:41:17,576(2299) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4a9419d7  
[DEBUG] 2015-12-01 15:41:17,577(2300) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2e8ab815  
[DEBUG] 2015-12-01 15:41:17,578(2301) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@d1f74b8  
[DEBUG] 2015-12-01 15:41:17,578(2301) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-12-01 15:41:17,579(2302) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-12-01 15:41:17,579(2302) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:41:17,580(2303) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:41:17,580(2303) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-12-01 15:41:17,581(2304) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]  
[DEBUG] 2015-12-01 15:41:17,581(2304) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-12-01 15:41:17,582(2305) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-12-01 15:41:17,582(2305) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-12-01 15:41:17,583(2306) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-12-01 15:41:17,583(2306) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-12-01 15:41:17,584(2307) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-12-01 15:41:17,584(2307) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-12-01 15:41:17,585(2308) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-12-01 15:41:17,585(2308) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]  
[DEBUG] 2015-12-01 15:41:17,620(2343) org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) –> [main] Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].  
[DEBUG] 2015-12-01 15:41:17,624(2347) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1781) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-12-01 15:41:17,678(2401) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:121) –> [main] Database ->
       name : MySQL
    version : 5.6.22
      major : 5
      minor : 6  
[DEBUG] 2015-12-01 15:41:17,679(2402) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:127) –> [main] Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[DEBUG] 2015-12-01 15:41:17,680(2403) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:133) –> [main] JDBC version : 4.0  
[INFO ] 2015-12-01 15:41:17,687(2410) org.hibernate.dialect.Dialect.<init>(Dialect.java:130) –> [main] HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-12-01 15:41:17,689(2412) org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:120) –> [main] HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException  
[DEBUG] 2015-12-01 15:41:17,692(2415) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:41:17,693(2416) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:41:17,693(2416) org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:534) –> [main] Binding entity from annotated class: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:41:17,694(2417) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}  
[DEBUG] 2015-12-01 15:41:17,696(2419) org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1118) –> [main] No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED  
[DEBUG] 2015-12-01 15:41:17,696(2419) org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:394) –> [main] Import with entity name TestEntity  
[DEBUG] 2015-12-01 15:41:17,697(2420) org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:564) –> [main] Bind entity com.it_sucre.entity.TestEntity on table test  
[DEBUG] 2015-12-01 15:41:17,699(2422) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=id, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:41:17,700(2423) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property id with lazy=false  
[DEBUG] 2015-12-01 15:41:17,701(2424) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for id  
[DEBUG] 2015-12-01 15:41:17,701(2424) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property id  
[DEBUG] 2015-12-01 15:41:17,702(2425) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=name, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:41:17,703(2426) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property name with lazy=false  
[DEBUG] 2015-12-01 15:41:17,703(2426) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for name  
[DEBUG] 2015-12-01 15:41:17,704(2427) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property name  
[DEBUG] 2015-12-01 15:41:17,704(2427) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for id  
[DEBUG] 2015-12-01 15:41:17,705(2428) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for name  
[DEBUG] 2015-12-01 15:41:17,705(2428) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:41:17,706(2429) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:41:17,706(2429) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:41:17,707(2430) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:41:17,707(2430) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:41:17,707(2430) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:41:17,708(2431) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:41:17,708(2431) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[DEBUG] 2015-12-01 15:41:17,710(2433) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:117) –> [main] Automatic flush during beforeCompletion(): disabled  
[DEBUG] 2015-12-01 15:41:17,710(2433) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:123) –> [main] Automatic session close at end of transaction: disabled  
[DEBUG] 2015-12-01 15:41:17,711(2434) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:134) –> [main] JDBC batch size: 15  
[DEBUG] 2015-12-01 15:41:17,712(2435) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:140) –> [main] JDBC batch updates for versioned data: disabled  
[DEBUG] 2015-12-01 15:41:17,713(2436) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:150) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-12-01 15:41:17,714(2437) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:156) –> [main] Wrap result sets: disabled  
[DEBUG] 2015-12-01 15:41:17,714(2437) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:162) –> [main] JDBC3 getGeneratedKeys(): enabled  
[DEBUG] 2015-12-01 15:41:17,715(2438) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:174) –> [main] multi-tenancy strategy : NONE  
[DEBUG] 2015-12-01 15:41:17,716(2439) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:180) –> [main] Connection release mode: auto  
[INFO ] 2015-12-01 15:41:17,717(2440) org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:68) –> [main] HHH000399: Using default transaction strategy (direct JDBC transactions)  
[DEBUG] 2015-12-01 15:41:17,720(2443) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Using BatchFetchStyle : LEGACY  
[DEBUG] 2015-12-01 15:41:17,722(2445) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:221) –> [main] Maximum outer join fetch depth: 2  
[DEBUG] 2015-12-01 15:41:17,723(2446) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:227) –> [main] Default batch fetch size: 1  
[DEBUG] 2015-12-01 15:41:17,724(2447) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:233) –> [main] Generate SQL with comments: disabled  
[DEBUG] 2015-12-01 15:41:17,724(2447) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:239) –> [main] Order SQL updates by primary key: disabled  
[DEBUG] 2015-12-01 15:41:17,725(2448) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Order SQL inserts for batching: disabled  
[DEBUG] 2015-12-01 15:41:17,725(2448) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Default null ordering: none  
[DEBUG] 2015-12-01 15:41:17,726(2449) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:584) –> [main] Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-12-01 15:41:17,727(2450) org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) –> [main] HHH000397: Using ASTQueryTranslatorFactory  
[DEBUG] 2015-12-01 15:41:17,727(2450) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:263) –> [main] Query language substitutions: {}  
[DEBUG] 2015-12-01 15:41:17,728(2451) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:269) –> [main] JPA-QL strict compliance: disabled  
[DEBUG] 2015-12-01 15:41:17,728(2451) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:277) –> [main] Second-level cache: enabled  
[DEBUG] 2015-12-01 15:41:17,729(2452) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:283) –> [main] Query cache: disabled  
[DEBUG] 2015-12-01 15:41:17,730(2453) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:524) –> [main] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory  
[DEBUG] 2015-12-01 15:41:17,731(2454) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:534) –> [main] org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.  
[DEBUG] 2015-12-01 15:41:17,731(2454) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:306) –> [main] Optimize cache for minimal puts: disabled  
[DEBUG] 2015-12-01 15:41:17,732(2455) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:321) –> [main] Structured second-level cache entries: disabled  
[DEBUG] 2015-12-01 15:41:17,735(2458) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:331) –> [main] Second-level cache direct-reference entries: disabled  
[DEBUG] 2015-12-01 15:41:17,736(2459) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:339) –> [main] Statistics: disabled  
[DEBUG] 2015-12-01 15:41:17,752(2475) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:345) –> [main] Deleted entity synthetic identifier rollback: disabled  
[DEBUG] 2015-12-01 15:41:17,753(2476) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:372) –> [main] Default entity-mode: pojo  
[DEBUG] 2015-12-01 15:41:17,754(2477) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:378) –> [main] Named query checking : enabled  
[DEBUG] 2015-12-01 15:41:17,755(2478) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:384) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): enabled  
[DEBUG] 2015-12-01 15:41:17,757(2480) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:402) –> [main] Allow initialization of lazy state outside session : : disabled  
[DEBUG] 2015-12-01 15:41:17,758(2481) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:412) –> [main] JTA Track by Thread: enabled  
[DEBUG] 2015-12-01 15:41:17,759(2482) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Building session factory  
[DEBUG] 2015-12-01 15:41:17,763(2486) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:280) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-12-01 15:41:17,767(2490) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:281) –> [main] Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=D:\Java\jdk1.8.0_40\jre\bin, java.vm.version=25.40-b25, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\Java\workspace\demo-chained-transactionmanager, java.runtime.version=1.8.0_40-b26, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate4.SpringSessionContext, java.endorsed.dirs=D:\Java\jdk1.8.0_40\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\奇点之~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8.1, sun.jnu.encoding=GBK, java.library.path=D:\Java\jdk1.8.0_40\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/jdk1.8.0_40/bin/../jre/bin/server;D:/Java/jdk1.8.0_40/bin/../jre/bin;D:/Java/jdk1.8.0_40/bin/../jre/lib/amd64;D:\Java\jdk1.8.0_40/bin;D:\Java\jdk1.8.0_40/lib/dt.jar;D:\Java\jdk1.8.0_40/lib/tools.jar;D:\__ENV__\apache-maven-3.2.1/bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__ENV__\apache-tomcat-7.0.57\bin;D:\__ENV__\apache-tomcat-7.0.57\jre;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\TortoiseSVN\bin;D:\__ENV__\eclipse;;., hibernate.connection.datasource=org.apache.commons.dbcp.BasicDataSource@1a6f5124, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=6.3, user.home=C:\Users\奇点之光08老师, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=奇点之光08老师, java.class.path=D:\Java\workspace\demo-chained-transactionmanager\target\test-classes;D:\Java\workspace\demo-chained-transactionmanager\target\classes;D:\__ENV__\repo\ch\qos\logback\logback-core\0.9.28\logback-core-0.9.28.jar;D:\__ENV__\repo\ch\qos\logback\logback-classic\0.9.28\logback-classic-0.9.28.jar;D:\__ENV__\repo\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;D:\__ENV__\repo\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;D:\__ENV__\repo\org\slf4j\slf4j-api\1.7.7\slf4j-api-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-jdk14\1.7.7\slf4j-jdk14-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-log4j12\1.7.7\slf4j-log4j12-1.7.7.jar;D:\__ENV__\repo\mysql\mysql-connector-java\5.1.26\mysql-connector-java-5.1.26.jar;D:\__ENV__\repo\log4j\log4j\1.2.14\log4j-1.2.14.jar;D:\__ENV__\repo\org\springframework\data\spring-data-commons\1.8.0.RELEASE\spring-data-commons-1.8.0.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\slf4j\jcl-over-slf4j\1.7.7\jcl-over-slf4j-1.7.7.jar;D:\__ENV__\repo\org\springframework\spring-context\3.2.4.RELEASE\spring-context-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-aop\3.2.4.RELEASE\spring-aop-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-expression\3.2.4.RELEASE\spring-expression-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-oxm\3.2.4.RELEASE\spring-oxm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\__ENV__\repo\org\springframework\spring-web\3.2.4.RELEASE\spring-web-3.2.4.RELEASE.jar;D:\__ENV__\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\__ENV__\repo\org\springframework\spring-webmvc\3.2.4.RELEASE\spring-webmvc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-orm\3.2.4.RELEASE\spring-orm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-jdbc\3.2.4.RELEASE\spring-jdbc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-tx\3.2.4.RELEASE\spring-tx-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-test\3.2.4.RELEASE\spring-test-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\__ENV__\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\__ENV__\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\__ENV__\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\__ENV__\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-validator\4.2.0.Final\hibernate-validator-4.2.0.Final.jar;D:\__ENV__\repo\javax\validation\validation-api\1.0.0.GA\validation-api-1.0.0.GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-core\4.2.10.Final\hibernate-core-4.2.10.Final.jar;D:\__ENV__\repo\antlr\antlr\2.7.7\antlr-2.7.7.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.1.Final\jboss-transaction-api_1.1_spec-1.0.1.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpcore\4.3.1\httpcore-4.3.1.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpclient\4.3.1\httpclient-4.3.1.jar;D:\__ENV__\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\__ENV__\repo\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpmime\4.3.1\httpmime-4.3.1.jar;D:\__ENV__\repo\redis\clients\jedis\2.7.2\jedis-2.7.2.jar;D:\__ENV__\repo\org\apache\commons\commons-pool2\2.3\commons-pool2-2.3.jar;D:\__ENV__\repo\javax\persistence\persistence-api\1.0.2\persistence-api-1.0.2.jar;D:\__ENV__\repo\org\ansj\ansj_seg\0.9\ansj_seg-0.9.jar;D:\__ENV__\repo\org\ansj\tree_split\1.0.1\tree_split-1.0.1.jar;D:\__ENV__\repo\org\apache\commons-lang3\commons-lang3\3.1\commons-lang3-3.1.jar;D:\__ENV__\repo\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;D:\__ENV__\repo\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;D:\__ENV__\repo\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;D:\__ENV__\repo\commons-io\commons-io\2.4\commons-io-2.4.jar;D:\__ENV__\repo\commons-fileupload\commons-fileupload\1.2.2\commons-fileupload-1.2.2.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\__ENV__\repo\com\googlecode\xmemcached\xmemcached\1.4.1\xmemcached-1.4.1.jar;D:\__ENV__\repo\net\sf\json-lib\json-lib\2.4\json-lib-2.4-jdk15.jar;D:\__ENV__\repo\commons-beanutils\commons-beanutils\1.8.0\commons-beanutils-1.8.0.jar;D:\__ENV__\repo\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;D:\__ENV__\repo\net\sf\ezmorph\ezmorph\1.0.6\ezmorph-1.0.6.jar;D:\__ENV__\repo\org\mybatis\mybatis\3.1.1\mybatis-3.1.1.jar;D:\__ENV__\repo\org\mybatis\mybatis-spring\1.1.1\mybatis-spring-1.1.1.jar;D:\__ENV__\repo\junit\junit\4.11\junit-4.11.jar;D:\__ENV__\repo\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/358/1/.cp/;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/357/1/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.classLoader.application=sun.misc.Launcher$AppClassLoader@3b07d329, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=D:\Java\jdk1.8.0_40\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 62027 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -test com.it_sucre.service.HibernateServiceTest:test, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_40, java.ext.dirs=D:\Java\jdk1.8.0_40\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=D:\Java\jdk1.8.0_40\jre\lib\resources.jar;D:\Java\jdk1.8.0_40\jre\lib\rt.jar;D:\Java\jdk1.8.0_40\jre\lib\sunrsasign.jar;D:\Java\jdk1.8.0_40\jre\lib\jsse.jar;D:\Java\jdk1.8.0_40\jre\lib\jce.jar;D:\Java\jdk1.8.0_40\jre\lib\charsets.jar;D:\Java\jdk1.8.0_40\jre\lib\jfr.jar;D:\Java\jdk1.8.0_40\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}  
[DEBUG] 2015-12-01 15:41:17,787(2510) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[DEBUG] 2015-12-01 15:41:17,789(2512) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3604) –> [main] Static SQL for entity: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:41:17,790(2513) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3609) –> [main]  Version select: select id from test where id =?  
[DEBUG] 2015-12-01 15:41:17,791(2514) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3612) –> [main]  Snapshot select: select testentity_.id, testentity_.name as name2_0_ from test testentity_ where testentity_.id=?  
[DEBUG] 2015-12-01 15:41:17,792(2515) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3615) –> [main]  Insert 0: insert into test (name, id) values (?, ?)  
[DEBUG] 2015-12-01 15:41:17,792(2515) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3616) –> [main]  Update 0: update test set name=? where id=?  
[DEBUG] 2015-12-01 15:41:17,793(2516) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3617) –> [main]  Delete 0: delete from test where id=?  
[DEBUG] 2015-12-01 15:41:17,794(2517) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [NONE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:41:17,795(2518) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:41:17,796(2519) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:41:17,798(2521) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE_NOWAIT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:41:17,799(2522) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [FORCE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:41:17,801(2524) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? lock in share mode  
[DEBUG] 2015-12-01 15:41:17,803(2526) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_WRITE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:41:17,805(2528) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:41:17,807(2530) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:41:17,808(2531) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:41:17,810(2533) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:41:17,811(2534) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:41:17,812(2535) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:75) –> [main] Registering SessionFactory: 4882f3cf-33d4-4bb0-a7ae-6b10ef17555b (<unnamed>)  
[DEBUG] 2015-12-01 15:41:17,812(2535) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:82) –> [main] Not binding SessionFactory to JNDI, no JNDI name configured  
[DEBUG] 2015-12-01 15:41:17,813(2536) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:492) –> [main] Instantiated session factory  
[INFO ] 2015-12-01 15:41:17,814(2537) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:182) –> [main] HHH000228: Running hbm2ddl schema update  
[INFO ] 2015-12-01 15:41:17,814(2537) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:193) –> [main] HHH000102: Fetching database metadata  
[INFO ] 2015-12-01 15:41:17,815(2538) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:205) –> [main] HHH000396: Updating schema  
[DEBUG] 2015-12-01 15:41:17,815(2538) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:41:17,816(2539) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:41:17,816(2539) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:41:17,817(2540) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:41:17,817(2540) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:41:17,817(2540) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:41:17,818(2541) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:41:17,818(2541) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:41:17,818(2541) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:41:17,819(2542) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[INFO ] 2015-12-01 15:41:17,836(2559) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] HHH000261: Table found: Test.test  
[INFO ] 2015-12-01 15:41:17,837(2560) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:67) –> [main] HHH000037: Columns: [name, id]  
[INFO ] 2015-12-01 15:41:17,837(2560) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] HHH000108: Foreign keys: []  
[INFO ] 2015-12-01 15:41:17,838(2561) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:70) –> [main] HHH000126: Indexes: [primary]  
[DEBUG] 2015-12-01 15:41:17,839(2562) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-12-01 15:41:17,839(2562) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:242) –> [main] HHH000232: Schema update complete  
[DEBUG] 2015-12-01 15:41:17,840(2563) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1073) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-12-01 15:41:17,841(2564) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1096) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-12-01 15:41:17,842(2565) org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:110) –> [main] Statistics initialized [enabled=false]  
[DEBUG] 2015-12-01 15:41:18,363(3086) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:212) –> [main] Obtaining JDBC connection  
[DEBUG] 2015-12-01 15:41:18,379(3102) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:218) –> [main] Obtained JDBC connection  
[DEBUG] 2015-12-01 15:41:18,394(3117) org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) –> [main] begin  
[DEBUG] 2015-12-01 15:41:18,394(3117) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) –> [main] initial autocommit status: true  
[DEBUG] 2015-12-01 15:41:18,394(3117) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) –> [main] disabling autocommit  
[DEBUG] 2015-12-01 15:41:18,519(3242) org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:130) –> [main] Generated identifier: 0, using strategy: org.hibernate.id.Assigned  
[DEBUG] 2015-12-01 15:41:18,551(3274) org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) –> [main] committing  
[DEBUG] 2015-12-01 15:41:18,572(3295) org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:147) –> [main] Processing flush-time cascades  
[DEBUG] 2015-12-01 15:41:18,576(3299) org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:188) –> [main] Dirty checking collections  
[DEBUG] 2015-12-01 15:41:18,581(3304) org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121) –> [main] Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects  
[DEBUG] 2015-12-01 15:41:18,582(3305) org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:128) –> [main] Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections  
[DEBUG] 2015-12-01 15:41:18,585(3308) org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) –> [main] Listing entities:  
[DEBUG] 2015-12-01 15:41:18,587(3310) org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) –> [main] com.it_sucre.entity.TestEntity{name=hibernate, id=0}  
[DEBUG] 2015-12-01 15:41:18,657(3380) org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) –> [main] 
    insert 
    into
        test
        (name, id) 
    values
        (?, ?)  
[DEBUG] 2015-12-01 15:41:18,724(3447) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) –> [main] committed JDBC Connection  
[DEBUG] 2015-12-01 15:41:18,724(3447) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) –> [main] re-enabling autocommit  
[DEBUG] 2015-12-01 15:41:18,729(3452) org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:182) –> [main] HHH000420: Closing un-released batch  
[DEBUG] 2015-12-01 15:41:18,730(3453) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:232) –> [main] Releasing JDBC connection  
[DEBUG] 2015-12-01 15:41:18,730(3453) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:250) –> [main] Released JDBC connection  
[DEBUG] 2015-12-01 15:41:18,745(3468) org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1374) –> [Thread-2] HHH000031: Closing  
[DEBUG] 2015-12-01 15:41:18,745(3468) org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1374) –> [Thread-2] HHH000031: Closing  
[DEBUG] 2015-12-01 16:33:06,432(0) org.hibernate.cfg.Configuration.<clinit>(Configuration.java:184) –> [main] Logging Provider: org.jboss.logging.Log4jLoggerProvider  
[DEBUG] 2015-12-01 16:33:06,465(33) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@5f9b2141  
[DEBUG] 2015-12-01 16:33:06,466(34) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@5f9b2141  
[DEBUG] 2015-12-01 16:33:06,467(35) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5f9b2141  
[DEBUG] 2015-12-01 16:33:06,469(37) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@193f604a  
[DEBUG] 2015-12-01 16:33:06,473(41) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@3514a4c0  
[DEBUG] 2015-12-01 16:33:06,478(46) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@793be5ca  
[DEBUG] 2015-12-01 16:33:06,481(49) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@6babf3bf  
[DEBUG] 2015-12-01 16:33:06,483(51) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@6babf3bf  
[DEBUG] 2015-12-01 16:33:06,484(52) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6babf3bf  
[DEBUG] 2015-12-01 16:33:06,486(54) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@2b48a640  
[DEBUG] 2015-12-01 16:33:06,487(55) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@2b48a640  
[DEBUG] 2015-12-01 16:33:06,487(55) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2b48a640  
[DEBUG] 2015-12-01 16:33:06,491(59) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@73700b80  
[DEBUG] 2015-12-01 16:33:06,492(60) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@73700b80  
[DEBUG] 2015-12-01 16:33:06,493(61) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@73700b80  
[DEBUG] 2015-12-01 16:33:06,497(65) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@483f6d77  
[DEBUG] 2015-12-01 16:33:06,498(66) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@483f6d77  
[DEBUG] 2015-12-01 16:33:06,498(66) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@483f6d77  
[DEBUG] 2015-12-01 16:33:06,501(69) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@78123e82  
[DEBUG] 2015-12-01 16:33:06,502(70) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@78123e82  
[DEBUG] 2015-12-01 16:33:06,503(71) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@78123e82  
[DEBUG] 2015-12-01 16:33:06,506(74) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@bd4dc25  
[DEBUG] 2015-12-01 16:33:06,507(75) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@bd4dc25  
[DEBUG] 2015-12-01 16:33:06,507(75) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@bd4dc25  
[DEBUG] 2015-12-01 16:33:06,512(80) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@32ee6fee  
[DEBUG] 2015-12-01 16:33:06,513(81) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@32ee6fee  
[DEBUG] 2015-12-01 16:33:06,514(82) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@32ee6fee  
[DEBUG] 2015-12-01 16:33:06,518(86) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2b91004a  
[DEBUG] 2015-12-01 16:33:06,519(87) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2b91004a  
[DEBUG] 2015-12-01 16:33:06,522(90) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@22ef9844  
[DEBUG] 2015-12-01 16:33:06,524(92) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@22ef9844  
[DEBUG] 2015-12-01 16:33:06,528(96) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration string -> org.hibernate.type.StringType@2f217633  
[DEBUG] 2015-12-01 16:33:06,531(99) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@2f217633  
[DEBUG] 2015-12-01 16:33:06,535(103) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4738a206  
[DEBUG] 2015-12-01 16:33:06,537(105) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@58695725  
[DEBUG] 2015-12-01 16:33:06,540(108) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration url -> org.hibernate.type.UrlType@7c24b813  
[DEBUG] 2015-12-01 16:33:06,541(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@7c24b813  
[DEBUG] 2015-12-01 16:33:06,547(115) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration date -> org.hibernate.type.DateType@4f2b503c  
[DEBUG] 2015-12-01 16:33:06,548(116) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@4f2b503c  
[DEBUG] 2015-12-01 16:33:06,552(120) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration time -> org.hibernate.type.TimeType@342c38f8  
[DEBUG] 2015-12-01 16:33:06,552(120) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@342c38f8  
[DEBUG] 2015-12-01 16:33:06,555(123) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@57cf54e1  
[DEBUG] 2015-12-01 16:33:06,557(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@57cf54e1  
[DEBUG] 2015-12-01 16:33:06,557(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@57cf54e1  
[DEBUG] 2015-12-01 16:33:06,562(130) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3ee37e5a  
[DEBUG] 2015-12-01 16:33:06,565(133) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@f0da945  
[DEBUG] 2015-12-01 16:33:06,566(134) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@f0da945  
[DEBUG] 2015-12-01 16:33:06,567(135) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@f0da945  
[DEBUG] 2015-12-01 16:33:06,568(136) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3e11f9e9  
[DEBUG] 2015-12-01 16:33:06,571(139) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@2c1b194a  
[DEBUG] 2015-12-01 16:33:06,571(139) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2c1b194a  
[DEBUG] 2015-12-01 16:33:06,574(142) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@437da279  
[DEBUG] 2015-12-01 16:33:06,574(142) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@437da279  
[DEBUG] 2015-12-01 16:33:06,577(145) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@6253c26  
[DEBUG] 2015-12-01 16:33:06,578(146) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6253c26  
[DEBUG] 2015-12-01 16:33:06,581(149) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration class -> org.hibernate.type.ClassType@47e2e487  
[DEBUG] 2015-12-01 16:33:06,582(150) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@47e2e487  
[DEBUG] 2015-12-01 16:33:06,585(153) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2dc54ad4  
[DEBUG] 2015-12-01 16:33:06,586(154) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2dc54ad4  
[DEBUG] 2015-12-01 16:33:06,587(155) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@428640fa  
[DEBUG] 2015-12-01 16:33:06,589(157) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6bd61f98  
[DEBUG] 2015-12-01 16:33:06,592(160) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@72e5a8e  
[DEBUG] 2015-12-01 16:33:06,594(162) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@72e5a8e  
[DEBUG] 2015-12-01 16:33:06,601(169) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@72e5a8e  
[DEBUG] 2015-12-01 16:33:06,604(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@73e9cf30  
[DEBUG] 2015-12-01 16:33:06,605(173) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@73e9cf30  
[DEBUG] 2015-12-01 16:33:06,606(174) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@73e9cf30  
[DEBUG] 2015-12-01 16:33:06,609(177) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration image -> org.hibernate.type.ImageType@5a45133e  
[DEBUG] 2015-12-01 16:33:06,613(181) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@5e600dd5  
[DEBUG] 2015-12-01 16:33:06,614(182) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@5e600dd5  
[DEBUG] 2015-12-01 16:33:06,615(183) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@5e600dd5  
[DEBUG] 2015-12-01 16:33:06,618(186) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@51c668e3  
[DEBUG] 2015-12-01 16:33:06,619(187) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@51c668e3  
[DEBUG] 2015-12-01 16:33:06,620(188) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@51c668e3  
[DEBUG] 2015-12-01 16:33:06,642(210) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration text -> org.hibernate.type.TextType@5824a83d  
[DEBUG] 2015-12-01 16:33:06,654(222) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ntext -> org.hibernate.type.NTextType@229c6181  
[DEBUG] 2015-12-01 16:33:06,669(237) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@4145bad8  
[DEBUG] 2015-12-01 16:33:06,670(238) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4145bad8  
[DEBUG] 2015-12-01 16:33:06,672(240) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@750e2b97  
[DEBUG] 2015-12-01 16:33:06,684(252) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@78e4deb0  
[DEBUG] 2015-12-01 16:33:06,685(253) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@78e4deb0  
[DEBUG] 2015-12-01 16:33:06,693(261) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nclob -> org.hibernate.type.NClobType@543295b0  
[DEBUG] 2015-12-01 16:33:06,695(263) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@543295b0  
[DEBUG] 2015-12-01 16:33:06,698(266) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3b0fe47a  
[DEBUG] 2015-12-01 16:33:06,699(267) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@58cbafc2  
[DEBUG] 2015-12-01 16:33:06,702(270) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@1cf6d1be  
[DEBUG] 2015-12-01 16:33:06,708(276) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@712625fd  
[DEBUG] 2015-12-01 16:33:06,710(278) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@712625fd  
[DEBUG] 2015-12-01 16:33:06,713(281) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1c5920df  
[DEBUG] 2015-12-01 16:33:06,715(283) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@79e4c792  
[DEBUG] 2015-12-01 16:33:06,716(284) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4c60d6e9  
[DEBUG] 2015-12-01 16:33:06,717(285) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4a83a74a  
[DEBUG] 2015-12-01 16:33:06,717(285) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4b29d1d2  
[DEBUG] 2015-12-01 16:33:06,718(286) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@28261e8e  
[DEBUG] 2015-12-01 16:33:06,719(287) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@8519cb4  
[DEBUG] 2015-12-01 16:33:06,722(290) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2d901eb0  
[INFO ] 2015-12-01 16:33:06,768(336) org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66) –> [main] HCANN000001: Hibernate Commons Annotations {4.0.4.Final}  
[INFO ] 2015-12-01 16:33:06,779(347) org.hibernate.Version.logVersion(Version.java:41) –> [main] HHH000412: Hibernate Core {4.2.10.Final}  
[INFO ] 2015-12-01 16:33:06,782(350) org.hibernate.cfg.Environment.<clinit>(Environment.java:238) –> [main] HHH000206: hibernate.properties not found  
[INFO ] 2015-12-01 16:33:06,785(353) org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:345) –> [main] HHH000021: Bytecode provider name : javassist  
[DEBUG] 2015-12-01 16:33:06,803(371) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-12-01 16:33:06,804(372) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-12-01 16:33:06,806(374) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 16:33:06,807(375) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 16:33:06,810(378) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-12-01 16:33:06,811(379) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]  
[DEBUG] 2015-12-01 16:33:06,812(380) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-12-01 16:33:06,815(383) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-12-01 16:33:06,817(385) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-12-01 16:33:06,818(386) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-12-01 16:33:06,819(387) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-12-01 16:33:06,820(388) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-12-01 16:33:06,822(390) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-12-01 16:33:06,826(394) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-12-01 16:33:06,832(400) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]  
[DEBUG] 2015-12-01 16:33:06,884(452) org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) –> [main] Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].  
[DEBUG] 2015-12-01 16:33:06,919(487) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1781) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-12-01 16:33:07,341(909) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:121) –> [main] Database ->
       name : MySQL
    version : 5.6.22
      major : 5
      minor : 6  
[DEBUG] 2015-12-01 16:33:07,342(910) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:127) –> [main] Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[DEBUG] 2015-12-01 16:33:07,343(911) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:133) –> [main] JDBC version : 4.0  
[INFO ] 2015-12-01 16:33:07,370(938) org.hibernate.dialect.Dialect.<init>(Dialect.java:130) –> [main] HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-12-01 16:33:07,385(953) org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:120) –> [main] HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException  
[DEBUG] 2015-12-01 16:33:07,444(1012) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 16:33:07,445(1013) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 16:33:07,451(1019) org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:534) –> [main] Binding entity from annotated class: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 16:33:07,495(1063) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}  
[DEBUG] 2015-12-01 16:33:07,501(1069) org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1118) –> [main] No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED  
[DEBUG] 2015-12-01 16:33:07,540(1108) org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:394) –> [main] Import with entity name TestEntity  
[DEBUG] 2015-12-01 16:33:07,554(1122) org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:564) –> [main] Bind entity com.it_sucre.entity.TestEntity on table test  
[DEBUG] 2015-12-01 16:33:07,612(1180) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=id, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 16:33:07,621(1189) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property id with lazy=false  
[DEBUG] 2015-12-01 16:33:07,652(1220) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for id  
[DEBUG] 2015-12-01 16:33:07,659(1227) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property id  
[DEBUG] 2015-12-01 16:33:07,672(1240) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=name, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 16:33:07,673(1241) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property name with lazy=false  
[DEBUG] 2015-12-01 16:33:07,674(1242) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for name  
[DEBUG] 2015-12-01 16:33:07,675(1243) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property name  
[DEBUG] 2015-12-01 16:33:07,679(1247) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for id  
[DEBUG] 2015-12-01 16:33:07,680(1248) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for name  
[DEBUG] 2015-12-01 16:33:07,681(1249) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 16:33:07,684(1252) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 16:33:07,685(1253) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 16:33:07,686(1254) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 16:33:07,687(1255) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 16:33:07,687(1255) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 16:33:07,688(1256) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 16:33:07,688(1256) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[DEBUG] 2015-12-01 16:33:07,707(1275) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:117) –> [main] Automatic flush during beforeCompletion(): disabled  
[DEBUG] 2015-12-01 16:33:07,710(1278) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:123) –> [main] Automatic session close at end of transaction: disabled  
[DEBUG] 2015-12-01 16:33:07,711(1279) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:134) –> [main] JDBC batch size: 15  
[DEBUG] 2015-12-01 16:33:07,711(1279) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:140) –> [main] JDBC batch updates for versioned data: disabled  
[DEBUG] 2015-12-01 16:33:07,712(1280) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:150) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-12-01 16:33:07,715(1283) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:156) –> [main] Wrap result sets: disabled  
[DEBUG] 2015-12-01 16:33:07,716(1284) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:162) –> [main] JDBC3 getGeneratedKeys(): enabled  
[DEBUG] 2015-12-01 16:33:07,718(1286) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:174) –> [main] multi-tenancy strategy : NONE  
[DEBUG] 2015-12-01 16:33:07,719(1287) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:180) –> [main] Connection release mode: auto  
[INFO ] 2015-12-01 16:33:07,720(1288) org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:68) –> [main] HHH000399: Using default transaction strategy (direct JDBC transactions)  
[DEBUG] 2015-12-01 16:33:07,730(1298) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Using BatchFetchStyle : LEGACY  
[DEBUG] 2015-12-01 16:33:07,730(1298) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:221) –> [main] Maximum outer join fetch depth: 2  
[DEBUG] 2015-12-01 16:33:07,731(1299) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:227) –> [main] Default batch fetch size: 1  
[DEBUG] 2015-12-01 16:33:07,731(1299) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:233) –> [main] Generate SQL with comments: disabled  
[DEBUG] 2015-12-01 16:33:07,732(1300) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:239) –> [main] Order SQL updates by primary key: disabled  
[DEBUG] 2015-12-01 16:33:07,732(1300) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Order SQL inserts for batching: disabled  
[DEBUG] 2015-12-01 16:33:07,733(1301) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Default null ordering: none  
[DEBUG] 2015-12-01 16:33:07,751(1319) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:584) –> [main] Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-12-01 16:33:07,755(1323) org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) –> [main] HHH000397: Using ASTQueryTranslatorFactory  
[DEBUG] 2015-12-01 16:33:07,756(1324) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:263) –> [main] Query language substitutions: {}  
[DEBUG] 2015-12-01 16:33:07,756(1324) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:269) –> [main] JPA-QL strict compliance: disabled  
[DEBUG] 2015-12-01 16:33:07,757(1325) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:277) –> [main] Second-level cache: enabled  
[DEBUG] 2015-12-01 16:33:07,757(1325) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:283) –> [main] Query cache: disabled  
[DEBUG] 2015-12-01 16:33:07,759(1327) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:524) –> [main] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory  
[DEBUG] 2015-12-01 16:33:07,762(1330) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:534) –> [main] org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.  
[DEBUG] 2015-12-01 16:33:07,766(1334) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:306) –> [main] Optimize cache for minimal puts: disabled  
[DEBUG] 2015-12-01 16:33:07,769(1337) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:321) –> [main] Structured second-level cache entries: disabled  
[DEBUG] 2015-12-01 16:33:07,769(1337) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:331) –> [main] Second-level cache direct-reference entries: disabled  
[DEBUG] 2015-12-01 16:33:07,770(1338) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:339) –> [main] Statistics: disabled  
[DEBUG] 2015-12-01 16:33:07,771(1339) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:345) –> [main] Deleted entity synthetic identifier rollback: disabled  
[DEBUG] 2015-12-01 16:33:07,771(1339) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:372) –> [main] Default entity-mode: pojo  
[DEBUG] 2015-12-01 16:33:07,772(1340) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:378) –> [main] Named query checking : enabled  
[DEBUG] 2015-12-01 16:33:07,773(1341) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:384) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): enabled  
[DEBUG] 2015-12-01 16:33:07,773(1341) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:402) –> [main] Allow initialization of lazy state outside session : : disabled  
[DEBUG] 2015-12-01 16:33:07,774(1342) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:412) –> [main] JTA Track by Thread: enabled  
[DEBUG] 2015-12-01 16:33:07,787(1355) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Building session factory  
[DEBUG] 2015-12-01 16:33:07,810(1378) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:280) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-12-01 16:33:07,811(1379) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:281) –> [main] Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=D:\Java\jdk1.8.0_40\jre\bin, java.vm.version=25.40-b25, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\Java\workspace\demo-chained-transactionmanager, java.runtime.version=1.8.0_40-b26, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate4.SpringSessionContext, java.endorsed.dirs=D:\Java\jdk1.8.0_40\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\奇点之~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8.1, sun.jnu.encoding=GBK, java.library.path=D:\Java\jdk1.8.0_40\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/jdk1.8.0_40/bin/../jre/bin/server;D:/Java/jdk1.8.0_40/bin/../jre/bin;D:/Java/jdk1.8.0_40/bin/../jre/lib/amd64;D:\Java\jdk1.8.0_40/bin;D:\Java\jdk1.8.0_40/lib/dt.jar;D:\Java\jdk1.8.0_40/lib/tools.jar;D:\__ENV__\apache-maven-3.2.1/bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__ENV__\apache-tomcat-7.0.57\bin;D:\__ENV__\apache-tomcat-7.0.57\jre;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\TortoiseSVN\bin;D:\__ENV__\eclipse;;., hibernate.connection.datasource=org.apache.commons.dbcp.BasicDataSource@424ebba3, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=6.3, user.home=C:\Users\奇点之光08老师, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=奇点之光08老师, java.class.path=D:\Java\workspace\demo-chained-transactionmanager\target\test-classes;D:\Java\workspace\demo-chained-transactionmanager\target\classes;D:\__ENV__\repo\ch\qos\logback\logback-core\0.9.28\logback-core-0.9.28.jar;D:\__ENV__\repo\ch\qos\logback\logback-classic\0.9.28\logback-classic-0.9.28.jar;D:\__ENV__\repo\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;D:\__ENV__\repo\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;D:\__ENV__\repo\org\slf4j\slf4j-api\1.7.7\slf4j-api-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-jdk14\1.7.7\slf4j-jdk14-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-log4j12\1.7.7\slf4j-log4j12-1.7.7.jar;D:\__ENV__\repo\mysql\mysql-connector-java\5.1.26\mysql-connector-java-5.1.26.jar;D:\__ENV__\repo\log4j\log4j\1.2.14\log4j-1.2.14.jar;D:\__ENV__\repo\org\springframework\data\spring-data-commons\1.8.0.RELEASE\spring-data-commons-1.8.0.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\slf4j\jcl-over-slf4j\1.7.7\jcl-over-slf4j-1.7.7.jar;D:\__ENV__\repo\org\springframework\spring-context\3.2.4.RELEASE\spring-context-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-aop\3.2.4.RELEASE\spring-aop-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-expression\3.2.4.RELEASE\spring-expression-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-oxm\3.2.4.RELEASE\spring-oxm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\__ENV__\repo\org\springframework\spring-web\3.2.4.RELEASE\spring-web-3.2.4.RELEASE.jar;D:\__ENV__\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\__ENV__\repo\org\springframework\spring-webmvc\3.2.4.RELEASE\spring-webmvc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-orm\3.2.4.RELEASE\spring-orm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-jdbc\3.2.4.RELEASE\spring-jdbc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-tx\3.2.4.RELEASE\spring-tx-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-test\3.2.4.RELEASE\spring-test-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\__ENV__\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\__ENV__\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\__ENV__\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\__ENV__\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-validator\4.2.0.Final\hibernate-validator-4.2.0.Final.jar;D:\__ENV__\repo\javax\validation\validation-api\1.0.0.GA\validation-api-1.0.0.GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-core\4.2.10.Final\hibernate-core-4.2.10.Final.jar;D:\__ENV__\repo\antlr\antlr\2.7.7\antlr-2.7.7.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.1.Final\jboss-transaction-api_1.1_spec-1.0.1.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpcore\4.3.1\httpcore-4.3.1.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpclient\4.3.1\httpclient-4.3.1.jar;D:\__ENV__\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\__ENV__\repo\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpmime\4.3.1\httpmime-4.3.1.jar;D:\__ENV__\repo\redis\clients\jedis\2.7.2\jedis-2.7.2.jar;D:\__ENV__\repo\org\apache\commons\commons-pool2\2.3\commons-pool2-2.3.jar;D:\__ENV__\repo\javax\persistence\persistence-api\1.0.2\persistence-api-1.0.2.jar;D:\__ENV__\repo\org\ansj\ansj_seg\0.9\ansj_seg-0.9.jar;D:\__ENV__\repo\org\ansj\tree_split\1.0.1\tree_split-1.0.1.jar;D:\__ENV__\repo\org\apache\commons-lang3\commons-lang3\3.1\commons-lang3-3.1.jar;D:\__ENV__\repo\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;D:\__ENV__\repo\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;D:\__ENV__\repo\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;D:\__ENV__\repo\commons-io\commons-io\2.4\commons-io-2.4.jar;D:\__ENV__\repo\commons-fileupload\commons-fileupload\1.2.2\commons-fileupload-1.2.2.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\__ENV__\repo\com\googlecode\xmemcached\xmemcached\1.4.1\xmemcached-1.4.1.jar;D:\__ENV__\repo\net\sf\json-lib\json-lib\2.4\json-lib-2.4-jdk15.jar;D:\__ENV__\repo\commons-beanutils\commons-beanutils\1.8.0\commons-beanutils-1.8.0.jar;D:\__ENV__\repo\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;D:\__ENV__\repo\net\sf\ezmorph\ezmorph\1.0.6\ezmorph-1.0.6.jar;D:\__ENV__\repo\org\mybatis\mybatis\3.1.1\mybatis-3.1.1.jar;D:\__ENV__\repo\org\mybatis\mybatis-spring\1.1.1\mybatis-spring-1.1.1.jar;D:\__ENV__\repo\junit\junit\4.11\junit-4.11.jar;D:\__ENV__\repo\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/358/1/.cp/;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/357/1/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.classLoader.application=sun.misc.Launcher$AppClassLoader@3b07d329, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=D:\Java\jdk1.8.0_40\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 62576 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -test com.it_sucre.service.HibernateServiceTest:test, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_40, java.ext.dirs=D:\Java\jdk1.8.0_40\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=D:\Java\jdk1.8.0_40\jre\lib\resources.jar;D:\Java\jdk1.8.0_40\jre\lib\rt.jar;D:\Java\jdk1.8.0_40\jre\lib\sunrsasign.jar;D:\Java\jdk1.8.0_40\jre\lib\jsse.jar;D:\Java\jdk1.8.0_40\jre\lib\jce.jar;D:\Java\jdk1.8.0_40\jre\lib\charsets.jar;D:\Java\jdk1.8.0_40\jre\lib\jfr.jar;D:\Java\jdk1.8.0_40\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}  
[DEBUG] 2015-12-01 16:33:08,079(1647) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[DEBUG] 2015-12-01 16:33:08,333(1901) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3604) –> [main] Static SQL for entity: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 16:33:08,356(1924) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3609) –> [main]  Version select: select id from test where id =?  
[DEBUG] 2015-12-01 16:33:08,365(1933) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3612) –> [main]  Snapshot select: select testentity_.id, testentity_.name as name2_0_ from test testentity_ where testentity_.id=?  
[DEBUG] 2015-12-01 16:33:08,368(1936) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3615) –> [main]  Insert 0: insert into test (name, id) values (?, ?)  
[DEBUG] 2015-12-01 16:33:08,370(1938) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3616) –> [main]  Update 0: update test set name=? where id=?  
[DEBUG] 2015-12-01 16:33:08,378(1946) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3617) –> [main]  Delete 0: delete from test where id=?  
[DEBUG] 2015-12-01 16:33:08,453(2021) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [NONE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 16:33:08,454(2022) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 16:33:08,455(2023) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 16:33:08,457(2025) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE_NOWAIT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 16:33:08,457(2025) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [FORCE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 16:33:08,458(2026) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? lock in share mode  
[DEBUG] 2015-12-01 16:33:08,460(2028) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_WRITE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 16:33:08,464(2032) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 16:33:08,466(2034) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 16:33:08,468(2036) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 16:33:08,481(2049) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 16:33:08,483(2051) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 16:33:08,576(2144) org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:62) –> [main] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4816c290  
[DEBUG] 2015-12-01 16:33:08,579(2147) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:75) –> [main] Registering SessionFactory: bd2f7089-0157-48f4-a345-100c44968290 (<unnamed>)  
[DEBUG] 2015-12-01 16:33:08,579(2147) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:82) –> [main] Not binding SessionFactory to JNDI, no JNDI name configured  
[DEBUG] 2015-12-01 16:33:08,580(2148) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:492) –> [main] Instantiated session factory  
[INFO ] 2015-12-01 16:33:08,590(2158) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:182) –> [main] HHH000228: Running hbm2ddl schema update  
[INFO ] 2015-12-01 16:33:08,591(2159) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:193) –> [main] HHH000102: Fetching database metadata  
[INFO ] 2015-12-01 16:33:08,602(2170) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:205) –> [main] HHH000396: Updating schema  
[DEBUG] 2015-12-01 16:33:08,603(2171) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 16:33:08,603(2171) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 16:33:08,603(2171) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 16:33:08,604(2172) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 16:33:08,604(2172) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 16:33:08,605(2173) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 16:33:08,605(2173) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 16:33:08,605(2173) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 16:33:08,606(2174) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 16:33:08,606(2174) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[INFO ] 2015-12-01 16:33:08,648(2216) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] HHH000261: Table found: Test.test  
[INFO ] 2015-12-01 16:33:08,649(2217) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:67) –> [main] HHH000037: Columns: [name, id]  
[INFO ] 2015-12-01 16:33:08,650(2218) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] HHH000108: Foreign keys: []  
[INFO ] 2015-12-01 16:33:08,650(2218) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:70) –> [main] HHH000126: Indexes: [primary]  
[DEBUG] 2015-12-01 16:33:08,652(2220) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-12-01 16:33:08,653(2221) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:242) –> [main] HHH000232: Schema update complete  
[DEBUG] 2015-12-01 16:33:08,655(2223) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1073) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-12-01 16:33:08,656(2224) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1096) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-12-01 16:33:08,669(2237) org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:110) –> [main] Statistics initialized [enabled=false]  
[DEBUG] 2015-12-01 16:33:08,733(2301) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@5f9b2141  
[DEBUG] 2015-12-01 16:33:08,733(2301) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@5f9b2141  
[DEBUG] 2015-12-01 16:33:08,734(2302) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5f9b2141  
[DEBUG] 2015-12-01 16:33:08,734(2302) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@193f604a  
[DEBUG] 2015-12-01 16:33:08,735(2303) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@3514a4c0  
[DEBUG] 2015-12-01 16:33:08,736(2304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@793be5ca  
[DEBUG] 2015-12-01 16:33:08,736(2304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@6babf3bf  
[DEBUG] 2015-12-01 16:33:08,737(2305) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@6babf3bf  
[DEBUG] 2015-12-01 16:33:08,737(2305) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6babf3bf  
[DEBUG] 2015-12-01 16:33:08,738(2306) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@2b48a640  
[DEBUG] 2015-12-01 16:33:08,738(2306) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@2b48a640  
[DEBUG] 2015-12-01 16:33:08,739(2307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2b48a640  
[DEBUG] 2015-12-01 16:33:08,740(2308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@73700b80  
[DEBUG] 2015-12-01 16:33:08,741(2309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@73700b80  
[DEBUG] 2015-12-01 16:33:08,741(2309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@73700b80  
[DEBUG] 2015-12-01 16:33:08,741(2309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@483f6d77  
[DEBUG] 2015-12-01 16:33:08,742(2310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@483f6d77  
[DEBUG] 2015-12-01 16:33:08,743(2311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@483f6d77  
[DEBUG] 2015-12-01 16:33:08,743(2311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@78123e82  
[DEBUG] 2015-12-01 16:33:08,743(2311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@78123e82  
[DEBUG] 2015-12-01 16:33:08,744(2312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@78123e82  
[DEBUG] 2015-12-01 16:33:08,745(2313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@bd4dc25  
[DEBUG] 2015-12-01 16:33:08,745(2313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@bd4dc25  
[DEBUG] 2015-12-01 16:33:08,746(2314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@bd4dc25  
[DEBUG] 2015-12-01 16:33:08,746(2314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@32ee6fee  
[DEBUG] 2015-12-01 16:33:08,747(2315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@32ee6fee  
[DEBUG] 2015-12-01 16:33:08,747(2315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@32ee6fee  
[DEBUG] 2015-12-01 16:33:08,748(2316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2b91004a  
[DEBUG] 2015-12-01 16:33:08,748(2316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2b91004a  
[DEBUG] 2015-12-01 16:33:08,749(2317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@22ef9844  
[DEBUG] 2015-12-01 16:33:08,749(2317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@22ef9844  
[DEBUG] 2015-12-01 16:33:08,750(2318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration string -> org.hibernate.type.StringType@2f217633  
[DEBUG] 2015-12-01 16:33:08,750(2318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@2f217633  
[DEBUG] 2015-12-01 16:33:08,753(2321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4738a206  
[DEBUG] 2015-12-01 16:33:08,754(2322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@58695725  
[DEBUG] 2015-12-01 16:33:08,754(2322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration url -> org.hibernate.type.UrlType@7c24b813  
[DEBUG] 2015-12-01 16:33:08,755(2323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@7c24b813  
[DEBUG] 2015-12-01 16:33:08,755(2323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration date -> org.hibernate.type.DateType@4f2b503c  
[DEBUG] 2015-12-01 16:33:08,756(2324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@4f2b503c  
[DEBUG] 2015-12-01 16:33:08,756(2324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration time -> org.hibernate.type.TimeType@342c38f8  
[DEBUG] 2015-12-01 16:33:08,757(2325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@342c38f8  
[DEBUG] 2015-12-01 16:33:08,757(2325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@57cf54e1  
[DEBUG] 2015-12-01 16:33:08,758(2326) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@57cf54e1  
[DEBUG] 2015-12-01 16:33:08,758(2326) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@57cf54e1  
[DEBUG] 2015-12-01 16:33:08,759(2327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3ee37e5a  
[DEBUG] 2015-12-01 16:33:08,759(2327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@f0da945  
[DEBUG] 2015-12-01 16:33:08,760(2328) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@f0da945  
[DEBUG] 2015-12-01 16:33:08,760(2328) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@f0da945  
[DEBUG] 2015-12-01 16:33:08,761(2329) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3e11f9e9  
[DEBUG] 2015-12-01 16:33:08,761(2329) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@2c1b194a  
[DEBUG] 2015-12-01 16:33:08,764(2332) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2c1b194a  
[DEBUG] 2015-12-01 16:33:08,765(2333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@437da279  
[DEBUG] 2015-12-01 16:33:08,765(2333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@437da279  
[DEBUG] 2015-12-01 16:33:08,766(2334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@6253c26  
[DEBUG] 2015-12-01 16:33:08,766(2334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6253c26  
[DEBUG] 2015-12-01 16:33:08,767(2335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration class -> org.hibernate.type.ClassType@47e2e487  
[DEBUG] 2015-12-01 16:33:08,767(2335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@47e2e487  
[DEBUG] 2015-12-01 16:33:08,768(2336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2dc54ad4  
[DEBUG] 2015-12-01 16:33:08,769(2337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2dc54ad4  
[DEBUG] 2015-12-01 16:33:08,769(2337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@428640fa  
[DEBUG] 2015-12-01 16:33:08,770(2338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6bd61f98  
[DEBUG] 2015-12-01 16:33:08,770(2338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@72e5a8e  
[DEBUG] 2015-12-01 16:33:08,771(2339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@72e5a8e  
[DEBUG] 2015-12-01 16:33:08,771(2339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@72e5a8e  
[DEBUG] 2015-12-01 16:33:08,772(2340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@73e9cf30  
[DEBUG] 2015-12-01 16:33:08,772(2340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@73e9cf30  
[DEBUG] 2015-12-01 16:33:08,772(2340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@73e9cf30  
[DEBUG] 2015-12-01 16:33:08,773(2341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration image -> org.hibernate.type.ImageType@5a45133e  
[DEBUG] 2015-12-01 16:33:08,774(2342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@5e600dd5  
[DEBUG] 2015-12-01 16:33:08,774(2342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@5e600dd5  
[DEBUG] 2015-12-01 16:33:08,775(2343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@5e600dd5  
[DEBUG] 2015-12-01 16:33:08,776(2344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@51c668e3  
[DEBUG] 2015-12-01 16:33:08,776(2344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@51c668e3  
[DEBUG] 2015-12-01 16:33:08,777(2345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@51c668e3  
[DEBUG] 2015-12-01 16:33:08,777(2345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration text -> org.hibernate.type.TextType@5824a83d  
[DEBUG] 2015-12-01 16:33:08,786(2354) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ntext -> org.hibernate.type.NTextType@229c6181  
[DEBUG] 2015-12-01 16:33:08,786(2354) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@4145bad8  
[DEBUG] 2015-12-01 16:33:08,787(2355) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4145bad8  
[DEBUG] 2015-12-01 16:33:08,787(2355) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@750e2b97  
[DEBUG] 2015-12-01 16:33:08,788(2356) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@78e4deb0  
[DEBUG] 2015-12-01 16:33:08,788(2356) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@78e4deb0  
[DEBUG] 2015-12-01 16:33:08,789(2357) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nclob -> org.hibernate.type.NClobType@543295b0  
[DEBUG] 2015-12-01 16:33:08,789(2357) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@543295b0  
[DEBUG] 2015-12-01 16:33:08,802(2370) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3b0fe47a  
[DEBUG] 2015-12-01 16:33:08,803(2371) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@58cbafc2  
[DEBUG] 2015-12-01 16:33:08,803(2371) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@1cf6d1be  
[DEBUG] 2015-12-01 16:33:08,804(2372) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@712625fd  
[DEBUG] 2015-12-01 16:33:08,805(2373) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@712625fd  
[DEBUG] 2015-12-01 16:33:08,805(2373) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@54afd745  
[DEBUG] 2015-12-01 16:33:08,806(2374) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@fff25f1  
[DEBUG] 2015-12-01 16:33:08,806(2374) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@263f04ca  
[DEBUG] 2015-12-01 16:33:08,807(2375) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5a021cb9  
[DEBUG] 2015-12-01 16:33:08,808(2376) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@f31c0c6  
[DEBUG] 2015-12-01 16:33:08,808(2376) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4a9419d7  
[DEBUG] 2015-12-01 16:33:08,811(2379) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2e8ab815  
[DEBUG] 2015-12-01 16:33:08,812(2380) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@d1f74b8  
[DEBUG] 2015-12-01 16:33:08,813(2381) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-12-01 16:33:08,813(2381) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-12-01 16:33:08,814(2382) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 16:33:08,814(2382) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 16:33:08,815(2383) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-12-01 16:33:08,816(2384) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]  
[DEBUG] 2015-12-01 16:33:08,816(2384) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-12-01 16:33:08,817(2385) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-12-01 16:33:08,817(2385) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-12-01 16:33:08,818(2386) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-12-01 16:33:08,819(2387) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-12-01 16:33:08,819(2387) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-12-01 16:33:08,821(2389) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-12-01 16:33:08,821(2389) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-12-01 16:33:08,822(2390) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]  
[DEBUG] 2015-12-01 16:33:08,840(2408) org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) –> [main] Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].  
[DEBUG] 2015-12-01 16:33:08,844(2412) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1781) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-12-01 16:33:08,931(2499) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:121) –> [main] Database ->
       name : MySQL
    version : 5.6.22
      major : 5
      minor : 6  
[DEBUG] 2015-12-01 16:33:08,932(2500) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:127) –> [main] Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[DEBUG] 2015-12-01 16:33:08,933(2501) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:133) –> [main] JDBC version : 4.0  
[INFO ] 2015-12-01 16:33:08,960(2528) org.hibernate.dialect.Dialect.<init>(Dialect.java:130) –> [main] HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-12-01 16:33:08,969(2537) org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:120) –> [main] HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException  
[DEBUG] 2015-12-01 16:33:08,972(2540) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 16:33:08,973(2541) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 16:33:08,973(2541) org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:534) –> [main] Binding entity from annotated class: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 16:33:08,974(2542) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}  
[DEBUG] 2015-12-01 16:33:08,975(2543) org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1118) –> [main] No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED  
[DEBUG] 2015-12-01 16:33:08,977(2545) org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:394) –> [main] Import with entity name TestEntity  
[DEBUG] 2015-12-01 16:33:08,978(2546) org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:564) –> [main] Bind entity com.it_sucre.entity.TestEntity on table test  
[DEBUG] 2015-12-01 16:33:08,981(2549) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=id, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 16:33:08,983(2551) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property id with lazy=false  
[DEBUG] 2015-12-01 16:33:08,997(2565) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for id  
[DEBUG] 2015-12-01 16:33:08,999(2567) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property id  
[DEBUG] 2015-12-01 16:33:08,999(2567) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=name, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 16:33:09,000(2568) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property name with lazy=false  
[DEBUG] 2015-12-01 16:33:09,001(2569) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for name  
[DEBUG] 2015-12-01 16:33:09,002(2570) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property name  
[DEBUG] 2015-12-01 16:33:09,003(2571) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for id  
[DEBUG] 2015-12-01 16:33:09,005(2573) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for name  
[DEBUG] 2015-12-01 16:33:09,006(2574) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 16:33:09,007(2575) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 16:33:09,008(2576) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 16:33:09,008(2576) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 16:33:09,009(2577) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 16:33:09,009(2577) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 16:33:09,010(2578) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 16:33:09,011(2579) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[DEBUG] 2015-12-01 16:33:09,012(2580) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:117) –> [main] Automatic flush during beforeCompletion(): disabled  
[DEBUG] 2015-12-01 16:33:09,013(2581) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:123) –> [main] Automatic session close at end of transaction: disabled  
[DEBUG] 2015-12-01 16:33:09,014(2582) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:134) –> [main] JDBC batch size: 15  
[DEBUG] 2015-12-01 16:33:09,014(2582) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:140) –> [main] JDBC batch updates for versioned data: disabled  
[DEBUG] 2015-12-01 16:33:09,015(2583) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:150) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-12-01 16:33:09,015(2583) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:156) –> [main] Wrap result sets: disabled  
[DEBUG] 2015-12-01 16:33:09,016(2584) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:162) –> [main] JDBC3 getGeneratedKeys(): enabled  
[DEBUG] 2015-12-01 16:33:09,017(2585) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:174) –> [main] multi-tenancy strategy : NONE  
[DEBUG] 2015-12-01 16:33:09,018(2586) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:180) –> [main] Connection release mode: auto  
[INFO ] 2015-12-01 16:33:09,019(2587) org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:68) –> [main] HHH000399: Using default transaction strategy (direct JDBC transactions)  
[DEBUG] 2015-12-01 16:33:09,019(2587) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Using BatchFetchStyle : LEGACY  
[DEBUG] 2015-12-01 16:33:09,022(2590) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:221) –> [main] Maximum outer join fetch depth: 2  
[DEBUG] 2015-12-01 16:33:09,024(2592) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:227) –> [main] Default batch fetch size: 1  
[DEBUG] 2015-12-01 16:33:09,024(2592) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:233) –> [main] Generate SQL with comments: disabled  
[DEBUG] 2015-12-01 16:33:09,027(2595) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:239) –> [main] Order SQL updates by primary key: disabled  
[DEBUG] 2015-12-01 16:33:09,028(2596) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Order SQL inserts for batching: disabled  
[DEBUG] 2015-12-01 16:33:09,029(2597) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Default null ordering: none  
[DEBUG] 2015-12-01 16:33:09,030(2598) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:584) –> [main] Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-12-01 16:33:09,031(2599) org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) –> [main] HHH000397: Using ASTQueryTranslatorFactory  
[DEBUG] 2015-12-01 16:33:09,032(2600) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:263) –> [main] Query language substitutions: {}  
[DEBUG] 2015-12-01 16:33:09,034(2602) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:269) –> [main] JPA-QL strict compliance: disabled  
[DEBUG] 2015-12-01 16:33:09,040(2608) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:277) –> [main] Second-level cache: enabled  
[DEBUG] 2015-12-01 16:33:09,041(2609) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:283) –> [main] Query cache: disabled  
[DEBUG] 2015-12-01 16:33:09,044(2612) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:524) –> [main] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory  
[DEBUG] 2015-12-01 16:33:09,046(2614) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:534) –> [main] org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.  
[DEBUG] 2015-12-01 16:33:09,047(2615) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:306) –> [main] Optimize cache for minimal puts: disabled  
[DEBUG] 2015-12-01 16:33:09,048(2616) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:321) –> [main] Structured second-level cache entries: disabled  
[DEBUG] 2015-12-01 16:33:09,054(2622) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:331) –> [main] Second-level cache direct-reference entries: disabled  
[DEBUG] 2015-12-01 16:33:09,063(2631) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:339) –> [main] Statistics: disabled  
[DEBUG] 2015-12-01 16:33:09,064(2632) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:345) –> [main] Deleted entity synthetic identifier rollback: disabled  
[DEBUG] 2015-12-01 16:33:09,065(2633) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:372) –> [main] Default entity-mode: pojo  
[DEBUG] 2015-12-01 16:33:09,066(2634) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:378) –> [main] Named query checking : enabled  
[DEBUG] 2015-12-01 16:33:09,067(2635) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:384) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): enabled  
[DEBUG] 2015-12-01 16:33:09,068(2636) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:402) –> [main] Allow initialization of lazy state outside session : : disabled  
[DEBUG] 2015-12-01 16:33:09,069(2637) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:412) –> [main] JTA Track by Thread: enabled  
[DEBUG] 2015-12-01 16:33:09,070(2638) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Building session factory  
[DEBUG] 2015-12-01 16:33:09,073(2641) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:280) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-12-01 16:33:09,074(2642) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:281) –> [main] Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=D:\Java\jdk1.8.0_40\jre\bin, java.vm.version=25.40-b25, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\Java\workspace\demo-chained-transactionmanager, java.runtime.version=1.8.0_40-b26, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate4.SpringSessionContext, java.endorsed.dirs=D:\Java\jdk1.8.0_40\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\奇点之~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8.1, sun.jnu.encoding=GBK, java.library.path=D:\Java\jdk1.8.0_40\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/jdk1.8.0_40/bin/../jre/bin/server;D:/Java/jdk1.8.0_40/bin/../jre/bin;D:/Java/jdk1.8.0_40/bin/../jre/lib/amd64;D:\Java\jdk1.8.0_40/bin;D:\Java\jdk1.8.0_40/lib/dt.jar;D:\Java\jdk1.8.0_40/lib/tools.jar;D:\__ENV__\apache-maven-3.2.1/bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__ENV__\apache-tomcat-7.0.57\bin;D:\__ENV__\apache-tomcat-7.0.57\jre;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\TortoiseSVN\bin;D:\__ENV__\eclipse;;., hibernate.connection.datasource=org.apache.commons.dbcp.BasicDataSource@1a6f5124, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=6.3, user.home=C:\Users\奇点之光08老师, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=奇点之光08老师, java.class.path=D:\Java\workspace\demo-chained-transactionmanager\target\test-classes;D:\Java\workspace\demo-chained-transactionmanager\target\classes;D:\__ENV__\repo\ch\qos\logback\logback-core\0.9.28\logback-core-0.9.28.jar;D:\__ENV__\repo\ch\qos\logback\logback-classic\0.9.28\logback-classic-0.9.28.jar;D:\__ENV__\repo\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;D:\__ENV__\repo\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;D:\__ENV__\repo\org\slf4j\slf4j-api\1.7.7\slf4j-api-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-jdk14\1.7.7\slf4j-jdk14-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-log4j12\1.7.7\slf4j-log4j12-1.7.7.jar;D:\__ENV__\repo\mysql\mysql-connector-java\5.1.26\mysql-connector-java-5.1.26.jar;D:\__ENV__\repo\log4j\log4j\1.2.14\log4j-1.2.14.jar;D:\__ENV__\repo\org\springframework\data\spring-data-commons\1.8.0.RELEASE\spring-data-commons-1.8.0.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\slf4j\jcl-over-slf4j\1.7.7\jcl-over-slf4j-1.7.7.jar;D:\__ENV__\repo\org\springframework\spring-context\3.2.4.RELEASE\spring-context-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-aop\3.2.4.RELEASE\spring-aop-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-expression\3.2.4.RELEASE\spring-expression-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-oxm\3.2.4.RELEASE\spring-oxm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\__ENV__\repo\org\springframework\spring-web\3.2.4.RELEASE\spring-web-3.2.4.RELEASE.jar;D:\__ENV__\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\__ENV__\repo\org\springframework\spring-webmvc\3.2.4.RELEASE\spring-webmvc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-orm\3.2.4.RELEASE\spring-orm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-jdbc\3.2.4.RELEASE\spring-jdbc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-tx\3.2.4.RELEASE\spring-tx-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-test\3.2.4.RELEASE\spring-test-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\__ENV__\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\__ENV__\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\__ENV__\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\__ENV__\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-validator\4.2.0.Final\hibernate-validator-4.2.0.Final.jar;D:\__ENV__\repo\javax\validation\validation-api\1.0.0.GA\validation-api-1.0.0.GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-core\4.2.10.Final\hibernate-core-4.2.10.Final.jar;D:\__ENV__\repo\antlr\antlr\2.7.7\antlr-2.7.7.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.1.Final\jboss-transaction-api_1.1_spec-1.0.1.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpcore\4.3.1\httpcore-4.3.1.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpclient\4.3.1\httpclient-4.3.1.jar;D:\__ENV__\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\__ENV__\repo\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpmime\4.3.1\httpmime-4.3.1.jar;D:\__ENV__\repo\redis\clients\jedis\2.7.2\jedis-2.7.2.jar;D:\__ENV__\repo\org\apache\commons\commons-pool2\2.3\commons-pool2-2.3.jar;D:\__ENV__\repo\javax\persistence\persistence-api\1.0.2\persistence-api-1.0.2.jar;D:\__ENV__\repo\org\ansj\ansj_seg\0.9\ansj_seg-0.9.jar;D:\__ENV__\repo\org\ansj\tree_split\1.0.1\tree_split-1.0.1.jar;D:\__ENV__\repo\org\apache\commons-lang3\commons-lang3\3.1\commons-lang3-3.1.jar;D:\__ENV__\repo\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;D:\__ENV__\repo\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;D:\__ENV__\repo\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;D:\__ENV__\repo\commons-io\commons-io\2.4\commons-io-2.4.jar;D:\__ENV__\repo\commons-fileupload\commons-fileupload\1.2.2\commons-fileupload-1.2.2.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\__ENV__\repo\com\googlecode\xmemcached\xmemcached\1.4.1\xmemcached-1.4.1.jar;D:\__ENV__\repo\net\sf\json-lib\json-lib\2.4\json-lib-2.4-jdk15.jar;D:\__ENV__\repo\commons-beanutils\commons-beanutils\1.8.0\commons-beanutils-1.8.0.jar;D:\__ENV__\repo\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;D:\__ENV__\repo\net\sf\ezmorph\ezmorph\1.0.6\ezmorph-1.0.6.jar;D:\__ENV__\repo\org\mybatis\mybatis\3.1.1\mybatis-3.1.1.jar;D:\__ENV__\repo\org\mybatis\mybatis-spring\1.1.1\mybatis-spring-1.1.1.jar;D:\__ENV__\repo\junit\junit\4.11\junit-4.11.jar;D:\__ENV__\repo\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/358/1/.cp/;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/357/1/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.classLoader.application=sun.misc.Launcher$AppClassLoader@3b07d329, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=D:\Java\jdk1.8.0_40\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 62576 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -test com.it_sucre.service.HibernateServiceTest:test, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_40, java.ext.dirs=D:\Java\jdk1.8.0_40\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=D:\Java\jdk1.8.0_40\jre\lib\resources.jar;D:\Java\jdk1.8.0_40\jre\lib\rt.jar;D:\Java\jdk1.8.0_40\jre\lib\sunrsasign.jar;D:\Java\jdk1.8.0_40\jre\lib\jsse.jar;D:\Java\jdk1.8.0_40\jre\lib\jce.jar;D:\Java\jdk1.8.0_40\jre\lib\charsets.jar;D:\Java\jdk1.8.0_40\jre\lib\jfr.jar;D:\Java\jdk1.8.0_40\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}  
[DEBUG] 2015-12-01 16:33:09,105(2673) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[DEBUG] 2015-12-01 16:33:09,110(2678) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3604) –> [main] Static SQL for entity: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 16:33:09,111(2679) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3609) –> [main]  Version select: select id from test where id =?  
[DEBUG] 2015-12-01 16:33:09,112(2680) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3612) –> [main]  Snapshot select: select testentity_.id, testentity_.name as name2_0_ from test testentity_ where testentity_.id=?  
[DEBUG] 2015-12-01 16:33:09,113(2681) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3615) –> [main]  Insert 0: insert into test (name, id) values (?, ?)  
[DEBUG] 2015-12-01 16:33:09,114(2682) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3616) –> [main]  Update 0: update test set name=? where id=?  
[DEBUG] 2015-12-01 16:33:09,115(2683) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3617) –> [main]  Delete 0: delete from test where id=?  
[DEBUG] 2015-12-01 16:33:09,116(2684) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [NONE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 16:33:09,117(2685) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 16:33:09,117(2685) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 16:33:09,118(2686) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE_NOWAIT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 16:33:09,119(2687) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [FORCE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 16:33:09,119(2687) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? lock in share mode  
[DEBUG] 2015-12-01 16:33:09,120(2688) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_WRITE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 16:33:09,121(2689) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 16:33:09,122(2690) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 16:33:09,123(2691) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 16:33:09,124(2692) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 16:33:09,127(2695) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 16:33:09,128(2696) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:75) –> [main] Registering SessionFactory: fd919bc0-bd13-4f33-9739-8603db96a068 (<unnamed>)  
[DEBUG] 2015-12-01 16:33:09,128(2696) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:82) –> [main] Not binding SessionFactory to JNDI, no JNDI name configured  
[DEBUG] 2015-12-01 16:33:09,129(2697) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:492) –> [main] Instantiated session factory  
[INFO ] 2015-12-01 16:33:09,130(2698) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:182) –> [main] HHH000228: Running hbm2ddl schema update  
[INFO ] 2015-12-01 16:33:09,130(2698) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:193) –> [main] HHH000102: Fetching database metadata  
[INFO ] 2015-12-01 16:33:09,131(2699) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:205) –> [main] HHH000396: Updating schema  
[DEBUG] 2015-12-01 16:33:09,132(2700) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 16:33:09,133(2701) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 16:33:09,133(2701) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 16:33:09,134(2702) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 16:33:09,134(2702) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 16:33:09,135(2703) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 16:33:09,135(2703) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 16:33:09,136(2704) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 16:33:09,136(2704) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 16:33:09,137(2705) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[INFO ] 2015-12-01 16:33:09,152(2720) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] HHH000261: Table found: Test.test  
[INFO ] 2015-12-01 16:33:09,153(2721) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:67) –> [main] HHH000037: Columns: [name, id]  
[INFO ] 2015-12-01 16:33:09,153(2721) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] HHH000108: Foreign keys: []  
[INFO ] 2015-12-01 16:33:09,155(2723) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:70) –> [main] HHH000126: Indexes: [primary]  
[DEBUG] 2015-12-01 16:33:09,155(2723) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-12-01 16:33:09,156(2724) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:242) –> [main] HHH000232: Schema update complete  
[DEBUG] 2015-12-01 16:33:09,157(2725) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1073) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-12-01 16:33:09,157(2725) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1096) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-12-01 16:33:09,158(2726) org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:110) –> [main] Statistics initialized [enabled=false]  
[DEBUG] 2015-12-01 16:33:09,647(3215) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:212) –> [main] Obtaining JDBC connection  
[DEBUG] 2015-12-01 16:33:09,648(3216) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:218) –> [main] Obtained JDBC connection  
[DEBUG] 2015-12-01 16:33:09,657(3225) org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) –> [main] begin  
[DEBUG] 2015-12-01 16:33:09,658(3226) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) –> [main] initial autocommit status: true  
[DEBUG] 2015-12-01 16:33:09,658(3226) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) –> [main] disabling autocommit  
[DEBUG] 2015-12-01 16:33:09,715(3283) org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:130) –> [main] Generated identifier: 0, using strategy: org.hibernate.id.Assigned  
[DEBUG] 2015-12-01 16:33:09,734(3302) org.hibernate.engine.transaction.spi.AbstractTransactionImpl.rollback(AbstractTransactionImpl.java:203) –> [main] rolling back  
[DEBUG] 2015-12-01 16:33:09,735(3303) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doRollback(JdbcTransaction.java:164) –> [main] rolled JDBC Connection  
[DEBUG] 2015-12-01 16:33:09,736(3304) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) –> [main] re-enabling autocommit  
[DEBUG] 2015-12-01 16:33:09,739(3307) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:232) –> [main] Releasing JDBC connection  
[DEBUG] 2015-12-01 16:33:09,740(3308) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:250) –> [main] Released JDBC connection  
[DEBUG] 2015-12-01 16:33:09,761(3329) org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1374) –> [Thread-2] HHH000031: Closing  
[DEBUG] 2015-12-01 16:33:09,764(3332) org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1374) –> [Thread-2] HHH000031: Closing  
[DEBUG] 2015-12-01 16:33:28,417(0) org.hibernate.cfg.Configuration.<clinit>(Configuration.java:184) –> [main] Logging Provider: org.jboss.logging.Log4jLoggerProvider  
[DEBUG] 2015-12-01 16:33:28,448(31) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@5f9b2141  
[DEBUG] 2015-12-01 16:33:28,449(32) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@5f9b2141  
[DEBUG] 2015-12-01 16:33:28,450(33) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5f9b2141  
[DEBUG] 2015-12-01 16:33:28,453(36) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@193f604a  
[DEBUG] 2015-12-01 16:33:28,456(39) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@3514a4c0  
[DEBUG] 2015-12-01 16:33:28,459(42) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@793be5ca  
[DEBUG] 2015-12-01 16:33:28,466(49) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@6babf3bf  
[DEBUG] 2015-12-01 16:33:28,468(51) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@6babf3bf  
[DEBUG] 2015-12-01 16:33:28,469(52) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6babf3bf  
[DEBUG] 2015-12-01 16:33:28,471(54) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@2b48a640  
[DEBUG] 2015-12-01 16:33:28,471(54) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@2b48a640  
[DEBUG] 2015-12-01 16:33:28,472(55) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2b48a640  
[DEBUG] 2015-12-01 16:33:28,476(59) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@73700b80  
[DEBUG] 2015-12-01 16:33:28,477(60) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@73700b80  
[DEBUG] 2015-12-01 16:33:28,478(61) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@73700b80  
[DEBUG] 2015-12-01 16:33:28,480(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@483f6d77  
[DEBUG] 2015-12-01 16:33:28,481(64) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@483f6d77  
[DEBUG] 2015-12-01 16:33:28,481(64) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@483f6d77  
[DEBUG] 2015-12-01 16:33:28,484(67) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@78123e82  
[DEBUG] 2015-12-01 16:33:28,486(69) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@78123e82  
[DEBUG] 2015-12-01 16:33:28,487(70) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@78123e82  
[DEBUG] 2015-12-01 16:33:28,490(73) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@bd4dc25  
[DEBUG] 2015-12-01 16:33:28,491(74) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@bd4dc25  
[DEBUG] 2015-12-01 16:33:28,491(74) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@bd4dc25  
[DEBUG] 2015-12-01 16:33:28,495(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@32ee6fee  
[DEBUG] 2015-12-01 16:33:28,497(80) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@32ee6fee  
[DEBUG] 2015-12-01 16:33:28,498(81) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@32ee6fee  
[DEBUG] 2015-12-01 16:33:28,501(84) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2b91004a  
[DEBUG] 2015-12-01 16:33:28,502(85) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2b91004a  
[DEBUG] 2015-12-01 16:33:28,505(88) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@22ef9844  
[DEBUG] 2015-12-01 16:33:28,506(89) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@22ef9844  
[DEBUG] 2015-12-01 16:33:28,510(93) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration string -> org.hibernate.type.StringType@2f217633  
[DEBUG] 2015-12-01 16:33:28,513(96) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@2f217633  
[DEBUG] 2015-12-01 16:33:28,515(98) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4738a206  
[DEBUG] 2015-12-01 16:33:28,517(100) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@58695725  
[DEBUG] 2015-12-01 16:33:28,520(103) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration url -> org.hibernate.type.UrlType@7c24b813  
[DEBUG] 2015-12-01 16:33:28,521(104) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@7c24b813  
[DEBUG] 2015-12-01 16:33:28,526(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration date -> org.hibernate.type.DateType@4f2b503c  
[DEBUG] 2015-12-01 16:33:28,528(111) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@4f2b503c  
[DEBUG] 2015-12-01 16:33:28,531(114) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration time -> org.hibernate.type.TimeType@342c38f8  
[DEBUG] 2015-12-01 16:33:28,532(115) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@342c38f8  
[DEBUG] 2015-12-01 16:33:28,536(119) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@57cf54e1  
[DEBUG] 2015-12-01 16:33:28,537(120) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@57cf54e1  
[DEBUG] 2015-12-01 16:33:28,538(121) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@57cf54e1  
[DEBUG] 2015-12-01 16:33:28,542(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3ee37e5a  
[DEBUG] 2015-12-01 16:33:28,545(128) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@f0da945  
[DEBUG] 2015-12-01 16:33:28,546(129) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@f0da945  
[DEBUG] 2015-12-01 16:33:28,547(130) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@f0da945  
[DEBUG] 2015-12-01 16:33:28,549(132) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3e11f9e9  
[DEBUG] 2015-12-01 16:33:28,553(136) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@2c1b194a  
[DEBUG] 2015-12-01 16:33:28,553(136) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2c1b194a  
[DEBUG] 2015-12-01 16:33:28,555(138) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@437da279  
[DEBUG] 2015-12-01 16:33:28,556(139) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@437da279  
[DEBUG] 2015-12-01 16:33:28,558(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@6253c26  
[DEBUG] 2015-12-01 16:33:28,559(142) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6253c26  
[DEBUG] 2015-12-01 16:33:28,562(145) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration class -> org.hibernate.type.ClassType@47e2e487  
[DEBUG] 2015-12-01 16:33:28,563(146) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@47e2e487  
[DEBUG] 2015-12-01 16:33:28,566(149) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2dc54ad4  
[DEBUG] 2015-12-01 16:33:28,567(150) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2dc54ad4  
[DEBUG] 2015-12-01 16:33:28,568(151) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@428640fa  
[DEBUG] 2015-12-01 16:33:28,570(153) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6bd61f98  
[DEBUG] 2015-12-01 16:33:28,573(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@72e5a8e  
[DEBUG] 2015-12-01 16:33:28,574(157) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@72e5a8e  
[DEBUG] 2015-12-01 16:33:28,574(157) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@72e5a8e  
[DEBUG] 2015-12-01 16:33:28,582(165) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@73e9cf30  
[DEBUG] 2015-12-01 16:33:28,583(166) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@73e9cf30  
[DEBUG] 2015-12-01 16:33:28,585(168) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@73e9cf30  
[DEBUG] 2015-12-01 16:33:28,589(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration image -> org.hibernate.type.ImageType@5a45133e  
[DEBUG] 2015-12-01 16:33:28,592(175) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@5e600dd5  
[DEBUG] 2015-12-01 16:33:28,592(175) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@5e600dd5  
[DEBUG] 2015-12-01 16:33:28,593(176) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@5e600dd5  
[DEBUG] 2015-12-01 16:33:28,599(182) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@51c668e3  
[DEBUG] 2015-12-01 16:33:28,600(183) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@51c668e3  
[DEBUG] 2015-12-01 16:33:28,603(186) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@51c668e3  
[DEBUG] 2015-12-01 16:33:28,606(189) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration text -> org.hibernate.type.TextType@5824a83d  
[DEBUG] 2015-12-01 16:33:28,612(195) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ntext -> org.hibernate.type.NTextType@229c6181  
[DEBUG] 2015-12-01 16:33:28,630(213) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@4145bad8  
[DEBUG] 2015-12-01 16:33:28,640(223) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4145bad8  
[DEBUG] 2015-12-01 16:33:28,643(226) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@750e2b97  
[DEBUG] 2015-12-01 16:33:28,656(239) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@78e4deb0  
[DEBUG] 2015-12-01 16:33:28,657(240) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@78e4deb0  
[DEBUG] 2015-12-01 16:33:28,664(247) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nclob -> org.hibernate.type.NClobType@543295b0  
[DEBUG] 2015-12-01 16:33:28,666(249) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@543295b0  
[DEBUG] 2015-12-01 16:33:28,667(250) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3b0fe47a  
[DEBUG] 2015-12-01 16:33:28,669(252) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@58cbafc2  
[DEBUG] 2015-12-01 16:33:28,672(255) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@1cf6d1be  
[DEBUG] 2015-12-01 16:33:28,680(263) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@712625fd  
[DEBUG] 2015-12-01 16:33:28,680(263) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@712625fd  
[DEBUG] 2015-12-01 16:33:28,682(265) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1c5920df  
[DEBUG] 2015-12-01 16:33:28,684(267) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@79e4c792  
[DEBUG] 2015-12-01 16:33:28,685(268) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4c60d6e9  
[DEBUG] 2015-12-01 16:33:28,685(268) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4a83a74a  
[DEBUG] 2015-12-01 16:33:28,686(269) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4b29d1d2  
[DEBUG] 2015-12-01 16:33:28,687(270) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@28261e8e  
[DEBUG] 2015-12-01 16:33:28,687(270) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@8519cb4  
[DEBUG] 2015-12-01 16:33:28,688(271) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2d901eb0  
[INFO ] 2015-12-01 16:33:28,732(315) org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66) –> [main] HCANN000001: Hibernate Commons Annotations {4.0.4.Final}  
[INFO ] 2015-12-01 16:33:28,744(327) org.hibernate.Version.logVersion(Version.java:41) –> [main] HHH000412: Hibernate Core {4.2.10.Final}  
[INFO ] 2015-12-01 16:33:28,748(331) org.hibernate.cfg.Environment.<clinit>(Environment.java:238) –> [main] HHH000206: hibernate.properties not found  
[INFO ] 2015-12-01 16:33:28,751(334) org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:345) –> [main] HHH000021: Bytecode provider name : javassist  
[DEBUG] 2015-12-01 16:33:28,771(354) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-12-01 16:33:28,772(355) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-12-01 16:33:28,773(356) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 16:33:28,774(357) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 16:33:28,776(359) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-12-01 16:33:28,778(361) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]  
[DEBUG] 2015-12-01 16:33:28,780(363) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-12-01 16:33:28,781(364) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-12-01 16:33:28,782(365) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-12-01 16:33:28,785(368) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-12-01 16:33:28,787(370) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-12-01 16:33:28,791(374) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-12-01 16:33:28,794(377) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-12-01 16:33:28,796(379) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-12-01 16:33:28,800(383) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]  
[DEBUG] 2015-12-01 16:33:28,838(421) org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) –> [main] Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].  
[DEBUG] 2015-12-01 16:33:28,874(457) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1781) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-12-01 16:33:29,308(891) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:121) –> [main] Database ->
       name : MySQL
    version : 5.6.22
      major : 5
      minor : 6  
[DEBUG] 2015-12-01 16:33:29,309(892) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:127) –> [main] Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[DEBUG] 2015-12-01 16:33:29,309(892) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:133) –> [main] JDBC version : 4.0  
[INFO ] 2015-12-01 16:33:29,342(925) org.hibernate.dialect.Dialect.<init>(Dialect.java:130) –> [main] HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-12-01 16:33:29,360(943) org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:120) –> [main] HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException  
[DEBUG] 2015-12-01 16:33:29,409(992) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 16:33:29,410(993) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 16:33:29,416(999) org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:534) –> [main] Binding entity from annotated class: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 16:33:29,468(1051) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}  
[DEBUG] 2015-12-01 16:33:29,474(1057) org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1118) –> [main] No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED  
[DEBUG] 2015-12-01 16:33:29,511(1094) org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:394) –> [main] Import with entity name TestEntity  
[DEBUG] 2015-12-01 16:33:29,527(1110) org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:564) –> [main] Bind entity com.it_sucre.entity.TestEntity on table test  
[DEBUG] 2015-12-01 16:33:29,574(1157) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=id, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 16:33:29,583(1166) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property id with lazy=false  
[DEBUG] 2015-12-01 16:33:29,589(1172) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for id  
[DEBUG] 2015-12-01 16:33:29,592(1175) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property id  
[DEBUG] 2015-12-01 16:33:29,604(1187) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=name, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 16:33:29,605(1188) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property name with lazy=false  
[DEBUG] 2015-12-01 16:33:29,606(1189) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for name  
[DEBUG] 2015-12-01 16:33:29,607(1190) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property name  
[DEBUG] 2015-12-01 16:33:29,613(1196) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for id  
[DEBUG] 2015-12-01 16:33:29,614(1197) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for name  
[DEBUG] 2015-12-01 16:33:29,616(1199) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 16:33:29,623(1206) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 16:33:29,624(1207) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 16:33:29,629(1212) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 16:33:29,630(1213) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 16:33:29,630(1213) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 16:33:29,634(1217) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 16:33:29,635(1218) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[DEBUG] 2015-12-01 16:33:29,654(1237) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:117) –> [main] Automatic flush during beforeCompletion(): disabled  
[DEBUG] 2015-12-01 16:33:29,655(1238) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:123) –> [main] Automatic session close at end of transaction: disabled  
[DEBUG] 2015-12-01 16:33:29,656(1239) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:134) –> [main] JDBC batch size: 15  
[DEBUG] 2015-12-01 16:33:29,657(1240) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:140) –> [main] JDBC batch updates for versioned data: disabled  
[DEBUG] 2015-12-01 16:33:29,658(1241) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:150) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-12-01 16:33:29,658(1241) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:156) –> [main] Wrap result sets: disabled  
[DEBUG] 2015-12-01 16:33:29,659(1242) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:162) –> [main] JDBC3 getGeneratedKeys(): enabled  
[DEBUG] 2015-12-01 16:33:29,660(1243) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:174) –> [main] multi-tenancy strategy : NONE  
[DEBUG] 2015-12-01 16:33:29,661(1244) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:180) –> [main] Connection release mode: auto  
[INFO ] 2015-12-01 16:33:29,662(1245) org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:68) –> [main] HHH000399: Using default transaction strategy (direct JDBC transactions)  
[DEBUG] 2015-12-01 16:33:29,669(1252) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Using BatchFetchStyle : LEGACY  
[DEBUG] 2015-12-01 16:33:29,670(1253) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:221) –> [main] Maximum outer join fetch depth: 2  
[DEBUG] 2015-12-01 16:33:29,671(1254) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:227) –> [main] Default batch fetch size: 1  
[DEBUG] 2015-12-01 16:33:29,672(1255) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:233) –> [main] Generate SQL with comments: disabled  
[DEBUG] 2015-12-01 16:33:29,672(1255) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:239) –> [main] Order SQL updates by primary key: disabled  
[DEBUG] 2015-12-01 16:33:29,673(1256) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Order SQL inserts for batching: disabled  
[DEBUG] 2015-12-01 16:33:29,674(1257) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Default null ordering: none  
[DEBUG] 2015-12-01 16:33:29,700(1283) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:584) –> [main] Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-12-01 16:33:29,708(1291) org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) –> [main] HHH000397: Using ASTQueryTranslatorFactory  
[DEBUG] 2015-12-01 16:33:29,709(1292) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:263) –> [main] Query language substitutions: {}  
[DEBUG] 2015-12-01 16:33:29,710(1293) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:269) –> [main] JPA-QL strict compliance: disabled  
[DEBUG] 2015-12-01 16:33:29,710(1293) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:277) –> [main] Second-level cache: enabled  
[DEBUG] 2015-12-01 16:33:29,711(1294) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:283) –> [main] Query cache: disabled  
[DEBUG] 2015-12-01 16:33:29,712(1295) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:524) –> [main] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory  
[DEBUG] 2015-12-01 16:33:29,715(1298) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:534) –> [main] org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.  
[DEBUG] 2015-12-01 16:33:29,717(1300) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:306) –> [main] Optimize cache for minimal puts: disabled  
[DEBUG] 2015-12-01 16:33:29,720(1303) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:321) –> [main] Structured second-level cache entries: disabled  
[DEBUG] 2015-12-01 16:33:29,721(1304) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:331) –> [main] Second-level cache direct-reference entries: disabled  
[DEBUG] 2015-12-01 16:33:29,722(1305) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:339) –> [main] Statistics: disabled  
[DEBUG] 2015-12-01 16:33:29,723(1306) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:345) –> [main] Deleted entity synthetic identifier rollback: disabled  
[DEBUG] 2015-12-01 16:33:29,723(1306) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:372) –> [main] Default entity-mode: pojo  
[DEBUG] 2015-12-01 16:33:29,724(1307) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:378) –> [main] Named query checking : enabled  
[DEBUG] 2015-12-01 16:33:29,725(1308) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:384) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): enabled  
[DEBUG] 2015-12-01 16:33:29,726(1309) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:402) –> [main] Allow initialization of lazy state outside session : : disabled  
[DEBUG] 2015-12-01 16:33:29,726(1309) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:412) –> [main] JTA Track by Thread: enabled  
[DEBUG] 2015-12-01 16:33:29,742(1325) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Building session factory  
[DEBUG] 2015-12-01 16:33:29,757(1340) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:280) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-12-01 16:33:29,758(1341) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:281) –> [main] Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=D:\Java\jdk1.8.0_40\jre\bin, java.vm.version=25.40-b25, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\Java\workspace\demo-chained-transactionmanager, java.runtime.version=1.8.0_40-b26, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate4.SpringSessionContext, java.endorsed.dirs=D:\Java\jdk1.8.0_40\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\奇点之~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8.1, sun.jnu.encoding=GBK, java.library.path=D:\Java\jdk1.8.0_40\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/jdk1.8.0_40/bin/../jre/bin/server;D:/Java/jdk1.8.0_40/bin/../jre/bin;D:/Java/jdk1.8.0_40/bin/../jre/lib/amd64;D:\Java\jdk1.8.0_40/bin;D:\Java\jdk1.8.0_40/lib/dt.jar;D:\Java\jdk1.8.0_40/lib/tools.jar;D:\__ENV__\apache-maven-3.2.1/bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__ENV__\apache-tomcat-7.0.57\bin;D:\__ENV__\apache-tomcat-7.0.57\jre;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\TortoiseSVN\bin;D:\__ENV__\eclipse;;., hibernate.connection.datasource=org.apache.commons.dbcp.BasicDataSource@424ebba3, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=6.3, user.home=C:\Users\奇点之光08老师, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=奇点之光08老师, java.class.path=D:\Java\workspace\demo-chained-transactionmanager\target\test-classes;D:\Java\workspace\demo-chained-transactionmanager\target\classes;D:\__ENV__\repo\ch\qos\logback\logback-core\0.9.28\logback-core-0.9.28.jar;D:\__ENV__\repo\ch\qos\logback\logback-classic\0.9.28\logback-classic-0.9.28.jar;D:\__ENV__\repo\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;D:\__ENV__\repo\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;D:\__ENV__\repo\org\slf4j\slf4j-api\1.7.7\slf4j-api-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-jdk14\1.7.7\slf4j-jdk14-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-log4j12\1.7.7\slf4j-log4j12-1.7.7.jar;D:\__ENV__\repo\mysql\mysql-connector-java\5.1.26\mysql-connector-java-5.1.26.jar;D:\__ENV__\repo\log4j\log4j\1.2.14\log4j-1.2.14.jar;D:\__ENV__\repo\org\springframework\data\spring-data-commons\1.8.0.RELEASE\spring-data-commons-1.8.0.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\slf4j\jcl-over-slf4j\1.7.7\jcl-over-slf4j-1.7.7.jar;D:\__ENV__\repo\org\springframework\spring-context\3.2.4.RELEASE\spring-context-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-aop\3.2.4.RELEASE\spring-aop-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-expression\3.2.4.RELEASE\spring-expression-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-oxm\3.2.4.RELEASE\spring-oxm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\__ENV__\repo\org\springframework\spring-web\3.2.4.RELEASE\spring-web-3.2.4.RELEASE.jar;D:\__ENV__\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\__ENV__\repo\org\springframework\spring-webmvc\3.2.4.RELEASE\spring-webmvc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-orm\3.2.4.RELEASE\spring-orm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-jdbc\3.2.4.RELEASE\spring-jdbc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-tx\3.2.4.RELEASE\spring-tx-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-test\3.2.4.RELEASE\spring-test-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\__ENV__\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\__ENV__\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\__ENV__\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\__ENV__\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-validator\4.2.0.Final\hibernate-validator-4.2.0.Final.jar;D:\__ENV__\repo\javax\validation\validation-api\1.0.0.GA\validation-api-1.0.0.GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-core\4.2.10.Final\hibernate-core-4.2.10.Final.jar;D:\__ENV__\repo\antlr\antlr\2.7.7\antlr-2.7.7.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.1.Final\jboss-transaction-api_1.1_spec-1.0.1.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpcore\4.3.1\httpcore-4.3.1.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpclient\4.3.1\httpclient-4.3.1.jar;D:\__ENV__\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\__ENV__\repo\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpmime\4.3.1\httpmime-4.3.1.jar;D:\__ENV__\repo\redis\clients\jedis\2.7.2\jedis-2.7.2.jar;D:\__ENV__\repo\org\apache\commons\commons-pool2\2.3\commons-pool2-2.3.jar;D:\__ENV__\repo\javax\persistence\persistence-api\1.0.2\persistence-api-1.0.2.jar;D:\__ENV__\repo\org\ansj\ansj_seg\0.9\ansj_seg-0.9.jar;D:\__ENV__\repo\org\ansj\tree_split\1.0.1\tree_split-1.0.1.jar;D:\__ENV__\repo\org\apache\commons-lang3\commons-lang3\3.1\commons-lang3-3.1.jar;D:\__ENV__\repo\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;D:\__ENV__\repo\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;D:\__ENV__\repo\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;D:\__ENV__\repo\commons-io\commons-io\2.4\commons-io-2.4.jar;D:\__ENV__\repo\commons-fileupload\commons-fileupload\1.2.2\commons-fileupload-1.2.2.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\__ENV__\repo\com\googlecode\xmemcached\xmemcached\1.4.1\xmemcached-1.4.1.jar;D:\__ENV__\repo\net\sf\json-lib\json-lib\2.4\json-lib-2.4-jdk15.jar;D:\__ENV__\repo\commons-beanutils\commons-beanutils\1.8.0\commons-beanutils-1.8.0.jar;D:\__ENV__\repo\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;D:\__ENV__\repo\net\sf\ezmorph\ezmorph\1.0.6\ezmorph-1.0.6.jar;D:\__ENV__\repo\org\mybatis\mybatis\3.1.1\mybatis-3.1.1.jar;D:\__ENV__\repo\org\mybatis\mybatis-spring\1.1.1\mybatis-spring-1.1.1.jar;D:\__ENV__\repo\junit\junit\4.11\junit-4.11.jar;D:\__ENV__\repo\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/358/1/.cp/;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/357/1/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.classLoader.application=sun.misc.Launcher$AppClassLoader@3b07d329, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=D:\Java\jdk1.8.0_40\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 62583 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -test com.it_sucre.service.HibernateServiceTest:test, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_40, java.ext.dirs=D:\Java\jdk1.8.0_40\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=D:\Java\jdk1.8.0_40\jre\lib\resources.jar;D:\Java\jdk1.8.0_40\jre\lib\rt.jar;D:\Java\jdk1.8.0_40\jre\lib\sunrsasign.jar;D:\Java\jdk1.8.0_40\jre\lib\jsse.jar;D:\Java\jdk1.8.0_40\jre\lib\jce.jar;D:\Java\jdk1.8.0_40\jre\lib\charsets.jar;D:\Java\jdk1.8.0_40\jre\lib\jfr.jar;D:\Java\jdk1.8.0_40\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}  
[DEBUG] 2015-12-01 16:33:30,042(1625) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[DEBUG] 2015-12-01 16:33:30,297(1880) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3604) –> [main] Static SQL for entity: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 16:33:30,299(1882) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3609) –> [main]  Version select: select id from test where id =?  
[DEBUG] 2015-12-01 16:33:30,306(1889) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3612) –> [main]  Snapshot select: select testentity_.id, testentity_.name as name2_0_ from test testentity_ where testentity_.id=?  
[DEBUG] 2015-12-01 16:33:30,319(1902) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3615) –> [main]  Insert 0: insert into test (name, id) values (?, ?)  
[DEBUG] 2015-12-01 16:33:30,327(1910) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3616) –> [main]  Update 0: update test set name=? where id=?  
[DEBUG] 2015-12-01 16:33:30,332(1915) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3617) –> [main]  Delete 0: delete from test where id=?  
[DEBUG] 2015-12-01 16:33:30,387(1970) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [NONE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 16:33:30,388(1971) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 16:33:30,389(1972) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 16:33:30,390(1973) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE_NOWAIT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 16:33:30,391(1974) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [FORCE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 16:33:30,392(1975) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? lock in share mode  
[DEBUG] 2015-12-01 16:33:30,394(1977) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_WRITE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 16:33:30,396(1979) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 16:33:30,397(1980) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 16:33:30,399(1982) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 16:33:30,413(1996) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 16:33:30,415(1998) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 16:33:30,517(2100) org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:62) –> [main] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4816c290  
[DEBUG] 2015-12-01 16:33:30,518(2101) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:75) –> [main] Registering SessionFactory: ca2f3cd5-3130-48a9-b1fb-ca96cf561c16 (<unnamed>)  
[DEBUG] 2015-12-01 16:33:30,519(2102) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:82) –> [main] Not binding SessionFactory to JNDI, no JNDI name configured  
[DEBUG] 2015-12-01 16:33:30,520(2103) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:492) –> [main] Instantiated session factory  
[INFO ] 2015-12-01 16:33:30,534(2117) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:182) –> [main] HHH000228: Running hbm2ddl schema update  
[INFO ] 2015-12-01 16:33:30,535(2118) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:193) –> [main] HHH000102: Fetching database metadata  
[INFO ] 2015-12-01 16:33:30,541(2124) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:205) –> [main] HHH000396: Updating schema  
[DEBUG] 2015-12-01 16:33:30,542(2125) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 16:33:30,543(2126) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 16:33:30,543(2126) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 16:33:30,544(2127) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 16:33:30,546(2129) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 16:33:30,546(2129) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 16:33:30,547(2130) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 16:33:30,548(2131) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 16:33:30,548(2131) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 16:33:30,549(2132) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[INFO ] 2015-12-01 16:33:30,595(2178) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] HHH000261: Table found: Test.test  
[INFO ] 2015-12-01 16:33:30,596(2179) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:67) –> [main] HHH000037: Columns: [name, id]  
[INFO ] 2015-12-01 16:33:30,596(2179) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] HHH000108: Foreign keys: []  
[INFO ] 2015-12-01 16:33:30,597(2180) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:70) –> [main] HHH000126: Indexes: [primary]  
[DEBUG] 2015-12-01 16:33:30,598(2181) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-12-01 16:33:30,600(2183) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:242) –> [main] HHH000232: Schema update complete  
[DEBUG] 2015-12-01 16:33:30,602(2185) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1073) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-12-01 16:33:30,603(2186) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1096) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-12-01 16:33:30,623(2206) org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:110) –> [main] Statistics initialized [enabled=false]  
[DEBUG] 2015-12-01 16:33:30,724(2307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@5f9b2141  
[DEBUG] 2015-12-01 16:33:30,725(2308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@5f9b2141  
[DEBUG] 2015-12-01 16:33:30,725(2308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5f9b2141  
[DEBUG] 2015-12-01 16:33:30,727(2310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@193f604a  
[DEBUG] 2015-12-01 16:33:30,727(2310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@3514a4c0  
[DEBUG] 2015-12-01 16:33:30,728(2311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@793be5ca  
[DEBUG] 2015-12-01 16:33:30,728(2311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@6babf3bf  
[DEBUG] 2015-12-01 16:33:30,731(2314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@6babf3bf  
[DEBUG] 2015-12-01 16:33:30,731(2314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6babf3bf  
[DEBUG] 2015-12-01 16:33:30,732(2315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@2b48a640  
[DEBUG] 2015-12-01 16:33:30,733(2316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@2b48a640  
[DEBUG] 2015-12-01 16:33:30,734(2317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2b48a640  
[DEBUG] 2015-12-01 16:33:30,735(2318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@73700b80  
[DEBUG] 2015-12-01 16:33:30,735(2318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@73700b80  
[DEBUG] 2015-12-01 16:33:30,736(2319) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@73700b80  
[DEBUG] 2015-12-01 16:33:30,737(2320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@483f6d77  
[DEBUG] 2015-12-01 16:33:30,739(2322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@483f6d77  
[DEBUG] 2015-12-01 16:33:30,739(2322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@483f6d77  
[DEBUG] 2015-12-01 16:33:30,740(2323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@78123e82  
[DEBUG] 2015-12-01 16:33:30,741(2324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@78123e82  
[DEBUG] 2015-12-01 16:33:30,741(2324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@78123e82  
[DEBUG] 2015-12-01 16:33:30,742(2325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@bd4dc25  
[DEBUG] 2015-12-01 16:33:30,743(2326) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@bd4dc25  
[DEBUG] 2015-12-01 16:33:30,744(2327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@bd4dc25  
[DEBUG] 2015-12-01 16:33:30,744(2327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@32ee6fee  
[DEBUG] 2015-12-01 16:33:30,745(2328) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@32ee6fee  
[DEBUG] 2015-12-01 16:33:30,746(2329) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@32ee6fee  
[DEBUG] 2015-12-01 16:33:30,748(2331) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2b91004a  
[DEBUG] 2015-12-01 16:33:30,749(2332) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2b91004a  
[DEBUG] 2015-12-01 16:33:30,750(2333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@22ef9844  
[DEBUG] 2015-12-01 16:33:30,751(2334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@22ef9844  
[DEBUG] 2015-12-01 16:33:30,751(2334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration string -> org.hibernate.type.StringType@2f217633  
[DEBUG] 2015-12-01 16:33:30,752(2335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@2f217633  
[DEBUG] 2015-12-01 16:33:30,752(2335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4738a206  
[DEBUG] 2015-12-01 16:33:30,753(2336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@58695725  
[DEBUG] 2015-12-01 16:33:30,753(2336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration url -> org.hibernate.type.UrlType@7c24b813  
[DEBUG] 2015-12-01 16:33:30,754(2337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@7c24b813  
[DEBUG] 2015-12-01 16:33:30,755(2338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration date -> org.hibernate.type.DateType@4f2b503c  
[DEBUG] 2015-12-01 16:33:30,755(2338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@4f2b503c  
[DEBUG] 2015-12-01 16:33:30,756(2339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration time -> org.hibernate.type.TimeType@342c38f8  
[DEBUG] 2015-12-01 16:33:30,758(2341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@342c38f8  
[DEBUG] 2015-12-01 16:33:30,761(2344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@57cf54e1  
[DEBUG] 2015-12-01 16:33:30,762(2345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@57cf54e1  
[DEBUG] 2015-12-01 16:33:30,763(2346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@57cf54e1  
[DEBUG] 2015-12-01 16:33:30,763(2346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3ee37e5a  
[DEBUG] 2015-12-01 16:33:30,764(2347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@f0da945  
[DEBUG] 2015-12-01 16:33:30,765(2348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@f0da945  
[DEBUG] 2015-12-01 16:33:30,765(2348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@f0da945  
[DEBUG] 2015-12-01 16:33:30,766(2349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3e11f9e9  
[DEBUG] 2015-12-01 16:33:30,766(2349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@2c1b194a  
[DEBUG] 2015-12-01 16:33:30,768(2351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2c1b194a  
[DEBUG] 2015-12-01 16:33:30,768(2351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@437da279  
[DEBUG] 2015-12-01 16:33:30,769(2352) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@437da279  
[DEBUG] 2015-12-01 16:33:30,769(2352) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@6253c26  
[DEBUG] 2015-12-01 16:33:30,771(2354) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6253c26  
[DEBUG] 2015-12-01 16:33:30,772(2355) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration class -> org.hibernate.type.ClassType@47e2e487  
[DEBUG] 2015-12-01 16:33:30,773(2356) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@47e2e487  
[DEBUG] 2015-12-01 16:33:30,773(2356) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2dc54ad4  
[DEBUG] 2015-12-01 16:33:30,774(2357) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2dc54ad4  
[DEBUG] 2015-12-01 16:33:30,774(2357) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@428640fa  
[DEBUG] 2015-12-01 16:33:30,775(2358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6bd61f98  
[DEBUG] 2015-12-01 16:33:30,775(2358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@72e5a8e  
[DEBUG] 2015-12-01 16:33:30,778(2361) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@72e5a8e  
[DEBUG] 2015-12-01 16:33:30,779(2362) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@72e5a8e  
[DEBUG] 2015-12-01 16:33:30,780(2363) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@73e9cf30  
[DEBUG] 2015-12-01 16:33:30,782(2365) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@73e9cf30  
[DEBUG] 2015-12-01 16:33:30,782(2365) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@73e9cf30  
[DEBUG] 2015-12-01 16:33:30,784(2367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration image -> org.hibernate.type.ImageType@5a45133e  
[DEBUG] 2015-12-01 16:33:30,804(2387) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@5e600dd5  
[DEBUG] 2015-12-01 16:33:30,806(2389) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@5e600dd5  
[DEBUG] 2015-12-01 16:33:30,806(2389) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@5e600dd5  
[DEBUG] 2015-12-01 16:33:30,807(2390) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@51c668e3  
[DEBUG] 2015-12-01 16:33:30,808(2391) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@51c668e3  
[DEBUG] 2015-12-01 16:33:30,809(2392) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@51c668e3  
[DEBUG] 2015-12-01 16:33:30,816(2399) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration text -> org.hibernate.type.TextType@5824a83d  
[DEBUG] 2015-12-01 16:33:30,817(2400) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ntext -> org.hibernate.type.NTextType@229c6181  
[DEBUG] 2015-12-01 16:33:30,818(2401) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@4145bad8  
[DEBUG] 2015-12-01 16:33:30,819(2402) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4145bad8  
[DEBUG] 2015-12-01 16:33:30,821(2404) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@750e2b97  
[DEBUG] 2015-12-01 16:33:30,834(2417) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@78e4deb0  
[DEBUG] 2015-12-01 16:33:30,834(2417) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@78e4deb0  
[DEBUG] 2015-12-01 16:33:30,835(2418) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nclob -> org.hibernate.type.NClobType@543295b0  
[DEBUG] 2015-12-01 16:33:30,838(2421) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@543295b0  
[DEBUG] 2015-12-01 16:33:30,839(2422) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3b0fe47a  
[DEBUG] 2015-12-01 16:33:30,839(2422) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@58cbafc2  
[DEBUG] 2015-12-01 16:33:30,840(2423) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@1cf6d1be  
[DEBUG] 2015-12-01 16:33:30,840(2423) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@712625fd  
[DEBUG] 2015-12-01 16:33:30,841(2424) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@712625fd  
[DEBUG] 2015-12-01 16:33:30,843(2426) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@54afd745  
[DEBUG] 2015-12-01 16:33:30,845(2428) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@fff25f1  
[DEBUG] 2015-12-01 16:33:30,846(2429) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@263f04ca  
[DEBUG] 2015-12-01 16:33:30,846(2429) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5a021cb9  
[DEBUG] 2015-12-01 16:33:30,847(2430) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@f31c0c6  
[DEBUG] 2015-12-01 16:33:30,848(2431) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4a9419d7  
[DEBUG] 2015-12-01 16:33:30,849(2432) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2e8ab815  
[DEBUG] 2015-12-01 16:33:30,850(2433) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@d1f74b8  
[DEBUG] 2015-12-01 16:33:30,863(2446) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-12-01 16:33:30,864(2447) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-12-01 16:33:30,865(2448) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 16:33:30,866(2449) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 16:33:30,867(2450) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-12-01 16:33:30,867(2450) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]  
[DEBUG] 2015-12-01 16:33:30,868(2451) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-12-01 16:33:30,868(2451) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-12-01 16:33:30,869(2452) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-12-01 16:33:30,870(2453) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-12-01 16:33:30,870(2453) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-12-01 16:33:30,871(2454) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-12-01 16:33:30,871(2454) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-12-01 16:33:30,872(2455) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-12-01 16:33:30,873(2456) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]  
[DEBUG] 2015-12-01 16:33:30,908(2491) org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) –> [main] Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].  
[DEBUG] 2015-12-01 16:33:30,913(2496) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1781) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-12-01 16:33:30,980(2563) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:121) –> [main] Database ->
       name : MySQL
    version : 5.6.22
      major : 5
      minor : 6  
[DEBUG] 2015-12-01 16:33:30,981(2564) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:127) –> [main] Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[DEBUG] 2015-12-01 16:33:30,982(2565) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:133) –> [main] JDBC version : 4.0  
[INFO ] 2015-12-01 16:33:30,990(2573) org.hibernate.dialect.Dialect.<init>(Dialect.java:130) –> [main] HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-12-01 16:33:30,992(2575) org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:120) –> [main] HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException  
[DEBUG] 2015-12-01 16:33:30,994(2577) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 16:33:30,995(2578) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 16:33:30,995(2578) org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:534) –> [main] Binding entity from annotated class: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 16:33:30,996(2579) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}  
[DEBUG] 2015-12-01 16:33:30,997(2580) org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1118) –> [main] No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED  
[DEBUG] 2015-12-01 16:33:30,998(2581) org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:394) –> [main] Import with entity name TestEntity  
[DEBUG] 2015-12-01 16:33:30,998(2581) org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:564) –> [main] Bind entity com.it_sucre.entity.TestEntity on table test  
[DEBUG] 2015-12-01 16:33:31,000(2583) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=id, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 16:33:31,001(2584) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property id with lazy=false  
[DEBUG] 2015-12-01 16:33:31,002(2585) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for id  
[DEBUG] 2015-12-01 16:33:31,002(2585) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property id  
[DEBUG] 2015-12-01 16:33:31,004(2587) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=name, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 16:33:31,005(2588) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property name with lazy=false  
[DEBUG] 2015-12-01 16:33:31,006(2589) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for name  
[DEBUG] 2015-12-01 16:33:31,007(2590) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property name  
[DEBUG] 2015-12-01 16:33:31,008(2591) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for id  
[DEBUG] 2015-12-01 16:33:31,009(2592) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for name  
[DEBUG] 2015-12-01 16:33:31,010(2593) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 16:33:31,010(2593) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 16:33:31,011(2594) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 16:33:31,011(2594) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 16:33:31,012(2595) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 16:33:31,012(2595) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 16:33:31,013(2596) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 16:33:31,013(2596) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[DEBUG] 2015-12-01 16:33:31,015(2598) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:117) –> [main] Automatic flush during beforeCompletion(): disabled  
[DEBUG] 2015-12-01 16:33:31,016(2599) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:123) –> [main] Automatic session close at end of transaction: disabled  
[DEBUG] 2015-12-01 16:33:31,017(2600) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:134) –> [main] JDBC batch size: 15  
[DEBUG] 2015-12-01 16:33:31,018(2601) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:140) –> [main] JDBC batch updates for versioned data: disabled  
[DEBUG] 2015-12-01 16:33:31,018(2601) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:150) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-12-01 16:33:31,020(2603) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:156) –> [main] Wrap result sets: disabled  
[DEBUG] 2015-12-01 16:33:31,022(2605) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:162) –> [main] JDBC3 getGeneratedKeys(): enabled  
[DEBUG] 2015-12-01 16:33:31,023(2606) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:174) –> [main] multi-tenancy strategy : NONE  
[DEBUG] 2015-12-01 16:33:31,024(2607) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:180) –> [main] Connection release mode: auto  
[INFO ] 2015-12-01 16:33:31,026(2609) org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:68) –> [main] HHH000399: Using default transaction strategy (direct JDBC transactions)  
[DEBUG] 2015-12-01 16:33:31,032(2615) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Using BatchFetchStyle : LEGACY  
[DEBUG] 2015-12-01 16:33:31,033(2616) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:221) –> [main] Maximum outer join fetch depth: 2  
[DEBUG] 2015-12-01 16:33:31,041(2624) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:227) –> [main] Default batch fetch size: 1  
[DEBUG] 2015-12-01 16:33:31,043(2626) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:233) –> [main] Generate SQL with comments: disabled  
[DEBUG] 2015-12-01 16:33:31,044(2627) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:239) –> [main] Order SQL updates by primary key: disabled  
[DEBUG] 2015-12-01 16:33:31,045(2628) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Order SQL inserts for batching: disabled  
[DEBUG] 2015-12-01 16:33:31,046(2629) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Default null ordering: none  
[DEBUG] 2015-12-01 16:33:31,047(2630) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:584) –> [main] Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-12-01 16:33:31,048(2631) org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) –> [main] HHH000397: Using ASTQueryTranslatorFactory  
[DEBUG] 2015-12-01 16:33:31,049(2632) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:263) –> [main] Query language substitutions: {}  
[DEBUG] 2015-12-01 16:33:31,049(2632) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:269) –> [main] JPA-QL strict compliance: disabled  
[DEBUG] 2015-12-01 16:33:31,049(2632) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:277) –> [main] Second-level cache: enabled  
[DEBUG] 2015-12-01 16:33:31,050(2633) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:283) –> [main] Query cache: disabled  
[DEBUG] 2015-12-01 16:33:31,051(2634) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:524) –> [main] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory  
[DEBUG] 2015-12-01 16:33:31,052(2635) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:534) –> [main] org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.  
[DEBUG] 2015-12-01 16:33:31,052(2635) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:306) –> [main] Optimize cache for minimal puts: disabled  
[DEBUG] 2015-12-01 16:33:31,053(2636) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:321) –> [main] Structured second-level cache entries: disabled  
[DEBUG] 2015-12-01 16:33:31,054(2637) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:331) –> [main] Second-level cache direct-reference entries: disabled  
[DEBUG] 2015-12-01 16:33:31,055(2638) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:339) –> [main] Statistics: disabled  
[DEBUG] 2015-12-01 16:33:31,056(2639) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:345) –> [main] Deleted entity synthetic identifier rollback: disabled  
[DEBUG] 2015-12-01 16:33:31,057(2640) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:372) –> [main] Default entity-mode: pojo  
[DEBUG] 2015-12-01 16:33:31,057(2640) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:378) –> [main] Named query checking : enabled  
[DEBUG] 2015-12-01 16:33:31,058(2641) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:384) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): enabled  
[DEBUG] 2015-12-01 16:33:31,058(2641) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:402) –> [main] Allow initialization of lazy state outside session : : disabled  
[DEBUG] 2015-12-01 16:33:31,059(2642) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:412) –> [main] JTA Track by Thread: enabled  
[DEBUG] 2015-12-01 16:33:31,059(2642) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Building session factory  
[DEBUG] 2015-12-01 16:33:31,061(2644) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:280) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-12-01 16:33:31,061(2644) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:281) –> [main] Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=D:\Java\jdk1.8.0_40\jre\bin, java.vm.version=25.40-b25, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\Java\workspace\demo-chained-transactionmanager, java.runtime.version=1.8.0_40-b26, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate4.SpringSessionContext, java.endorsed.dirs=D:\Java\jdk1.8.0_40\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\奇点之~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8.1, sun.jnu.encoding=GBK, java.library.path=D:\Java\jdk1.8.0_40\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/jdk1.8.0_40/bin/../jre/bin/server;D:/Java/jdk1.8.0_40/bin/../jre/bin;D:/Java/jdk1.8.0_40/bin/../jre/lib/amd64;D:\Java\jdk1.8.0_40/bin;D:\Java\jdk1.8.0_40/lib/dt.jar;D:\Java\jdk1.8.0_40/lib/tools.jar;D:\__ENV__\apache-maven-3.2.1/bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__ENV__\apache-tomcat-7.0.57\bin;D:\__ENV__\apache-tomcat-7.0.57\jre;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\TortoiseSVN\bin;D:\__ENV__\eclipse;;., hibernate.connection.datasource=org.apache.commons.dbcp.BasicDataSource@1a6f5124, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=6.3, user.home=C:\Users\奇点之光08老师, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=奇点之光08老师, java.class.path=D:\Java\workspace\demo-chained-transactionmanager\target\test-classes;D:\Java\workspace\demo-chained-transactionmanager\target\classes;D:\__ENV__\repo\ch\qos\logback\logback-core\0.9.28\logback-core-0.9.28.jar;D:\__ENV__\repo\ch\qos\logback\logback-classic\0.9.28\logback-classic-0.9.28.jar;D:\__ENV__\repo\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;D:\__ENV__\repo\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;D:\__ENV__\repo\org\slf4j\slf4j-api\1.7.7\slf4j-api-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-jdk14\1.7.7\slf4j-jdk14-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-log4j12\1.7.7\slf4j-log4j12-1.7.7.jar;D:\__ENV__\repo\mysql\mysql-connector-java\5.1.26\mysql-connector-java-5.1.26.jar;D:\__ENV__\repo\log4j\log4j\1.2.14\log4j-1.2.14.jar;D:\__ENV__\repo\org\springframework\data\spring-data-commons\1.8.0.RELEASE\spring-data-commons-1.8.0.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\slf4j\jcl-over-slf4j\1.7.7\jcl-over-slf4j-1.7.7.jar;D:\__ENV__\repo\org\springframework\spring-context\3.2.4.RELEASE\spring-context-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-aop\3.2.4.RELEASE\spring-aop-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-expression\3.2.4.RELEASE\spring-expression-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-oxm\3.2.4.RELEASE\spring-oxm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\__ENV__\repo\org\springframework\spring-web\3.2.4.RELEASE\spring-web-3.2.4.RELEASE.jar;D:\__ENV__\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\__ENV__\repo\org\springframework\spring-webmvc\3.2.4.RELEASE\spring-webmvc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-orm\3.2.4.RELEASE\spring-orm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-jdbc\3.2.4.RELEASE\spring-jdbc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-tx\3.2.4.RELEASE\spring-tx-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-test\3.2.4.RELEASE\spring-test-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\__ENV__\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\__ENV__\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\__ENV__\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\__ENV__\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-validator\4.2.0.Final\hibernate-validator-4.2.0.Final.jar;D:\__ENV__\repo\javax\validation\validation-api\1.0.0.GA\validation-api-1.0.0.GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-core\4.2.10.Final\hibernate-core-4.2.10.Final.jar;D:\__ENV__\repo\antlr\antlr\2.7.7\antlr-2.7.7.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.1.Final\jboss-transaction-api_1.1_spec-1.0.1.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpcore\4.3.1\httpcore-4.3.1.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpclient\4.3.1\httpclient-4.3.1.jar;D:\__ENV__\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\__ENV__\repo\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpmime\4.3.1\httpmime-4.3.1.jar;D:\__ENV__\repo\redis\clients\jedis\2.7.2\jedis-2.7.2.jar;D:\__ENV__\repo\org\apache\commons\commons-pool2\2.3\commons-pool2-2.3.jar;D:\__ENV__\repo\javax\persistence\persistence-api\1.0.2\persistence-api-1.0.2.jar;D:\__ENV__\repo\org\ansj\ansj_seg\0.9\ansj_seg-0.9.jar;D:\__ENV__\repo\org\ansj\tree_split\1.0.1\tree_split-1.0.1.jar;D:\__ENV__\repo\org\apache\commons-lang3\commons-lang3\3.1\commons-lang3-3.1.jar;D:\__ENV__\repo\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;D:\__ENV__\repo\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;D:\__ENV__\repo\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;D:\__ENV__\repo\commons-io\commons-io\2.4\commons-io-2.4.jar;D:\__ENV__\repo\commons-fileupload\commons-fileupload\1.2.2\commons-fileupload-1.2.2.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\__ENV__\repo\com\googlecode\xmemcached\xmemcached\1.4.1\xmemcached-1.4.1.jar;D:\__ENV__\repo\net\sf\json-lib\json-lib\2.4\json-lib-2.4-jdk15.jar;D:\__ENV__\repo\commons-beanutils\commons-beanutils\1.8.0\commons-beanutils-1.8.0.jar;D:\__ENV__\repo\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;D:\__ENV__\repo\net\sf\ezmorph\ezmorph\1.0.6\ezmorph-1.0.6.jar;D:\__ENV__\repo\org\mybatis\mybatis\3.1.1\mybatis-3.1.1.jar;D:\__ENV__\repo\org\mybatis\mybatis-spring\1.1.1\mybatis-spring-1.1.1.jar;D:\__ENV__\repo\junit\junit\4.11\junit-4.11.jar;D:\__ENV__\repo\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/358/1/.cp/;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/357/1/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.classLoader.application=sun.misc.Launcher$AppClassLoader@3b07d329, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=D:\Java\jdk1.8.0_40\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 62583 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -test com.it_sucre.service.HibernateServiceTest:test, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_40, java.ext.dirs=D:\Java\jdk1.8.0_40\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=D:\Java\jdk1.8.0_40\jre\lib\resources.jar;D:\Java\jdk1.8.0_40\jre\lib\rt.jar;D:\Java\jdk1.8.0_40\jre\lib\sunrsasign.jar;D:\Java\jdk1.8.0_40\jre\lib\jsse.jar;D:\Java\jdk1.8.0_40\jre\lib\jce.jar;D:\Java\jdk1.8.0_40\jre\lib\charsets.jar;D:\Java\jdk1.8.0_40\jre\lib\jfr.jar;D:\Java\jdk1.8.0_40\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}  
[DEBUG] 2015-12-01 16:33:31,074(2657) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[DEBUG] 2015-12-01 16:33:31,080(2663) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3604) –> [main] Static SQL for entity: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 16:33:31,081(2664) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3609) –> [main]  Version select: select id from test where id =?  
[DEBUG] 2015-12-01 16:33:31,082(2665) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3612) –> [main]  Snapshot select: select testentity_.id, testentity_.name as name2_0_ from test testentity_ where testentity_.id=?  
[DEBUG] 2015-12-01 16:33:31,083(2666) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3615) –> [main]  Insert 0: insert into test (name, id) values (?, ?)  
[DEBUG] 2015-12-01 16:33:31,084(2667) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3616) –> [main]  Update 0: update test set name=? where id=?  
[DEBUG] 2015-12-01 16:33:31,085(2668) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3617) –> [main]  Delete 0: delete from test where id=?  
[DEBUG] 2015-12-01 16:33:31,087(2670) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [NONE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 16:33:31,093(2676) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 16:33:31,094(2677) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 16:33:31,095(2678) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE_NOWAIT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 16:33:31,096(2679) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [FORCE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 16:33:31,098(2681) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? lock in share mode  
[DEBUG] 2015-12-01 16:33:31,099(2682) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_WRITE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 16:33:31,101(2684) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 16:33:31,102(2685) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 16:33:31,105(2688) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 16:33:31,107(2690) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 16:33:31,109(2692) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 16:33:31,111(2694) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:75) –> [main] Registering SessionFactory: 8dd3a8ac-da98-4981-a8fe-08b24e9c427e (<unnamed>)  
[DEBUG] 2015-12-01 16:33:31,112(2695) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:82) –> [main] Not binding SessionFactory to JNDI, no JNDI name configured  
[DEBUG] 2015-12-01 16:33:31,113(2696) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:492) –> [main] Instantiated session factory  
[INFO ] 2015-12-01 16:33:31,114(2697) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:182) –> [main] HHH000228: Running hbm2ddl schema update  
[INFO ] 2015-12-01 16:33:31,114(2697) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:193) –> [main] HHH000102: Fetching database metadata  
[INFO ] 2015-12-01 16:33:31,115(2698) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:205) –> [main] HHH000396: Updating schema  
[DEBUG] 2015-12-01 16:33:31,116(2699) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 16:33:31,117(2700) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 16:33:31,117(2700) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 16:33:31,117(2700) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 16:33:31,118(2701) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 16:33:31,118(2701) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 16:33:31,119(2702) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 16:33:31,119(2702) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 16:33:31,120(2703) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 16:33:31,120(2703) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[INFO ] 2015-12-01 16:33:31,141(2724) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] HHH000261: Table found: Test.test  
[INFO ] 2015-12-01 16:33:31,141(2724) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:67) –> [main] HHH000037: Columns: [name, id]  
[INFO ] 2015-12-01 16:33:31,142(2725) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] HHH000108: Foreign keys: []  
[INFO ] 2015-12-01 16:33:31,142(2725) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:70) –> [main] HHH000126: Indexes: [primary]  
[DEBUG] 2015-12-01 16:33:31,143(2726) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-12-01 16:33:31,144(2727) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:242) –> [main] HHH000232: Schema update complete  
[DEBUG] 2015-12-01 16:33:31,144(2727) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1073) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-12-01 16:33:31,145(2728) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1096) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-12-01 16:33:31,146(2729) org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:110) –> [main] Statistics initialized [enabled=false]  
[DEBUG] 2015-12-01 16:33:31,753(3336) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:212) –> [main] Obtaining JDBC connection  
[DEBUG] 2015-12-01 16:33:31,754(3337) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:218) –> [main] Obtained JDBC connection  
[DEBUG] 2015-12-01 16:33:31,766(3349) org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) –> [main] begin  
[DEBUG] 2015-12-01 16:33:31,767(3350) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) –> [main] initial autocommit status: true  
[DEBUG] 2015-12-01 16:33:31,767(3350) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) –> [main] disabling autocommit  
[DEBUG] 2015-12-01 16:33:31,820(3403) org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:130) –> [main] Generated identifier: 0, using strategy: org.hibernate.id.Assigned  
[DEBUG] 2015-12-01 16:33:31,838(3421) org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:130) –> [main] Generated identifier: 0, using strategy: org.hibernate.id.Assigned  
[DEBUG] 2015-12-01 16:33:31,840(3423) org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) –> [main] committing  
[DEBUG] 2015-12-01 16:33:31,841(3424) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) –> [main] committed JDBC Connection  
[DEBUG] 2015-12-01 16:33:31,841(3424) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) –> [main] re-enabling autocommit  
[DEBUG] 2015-12-01 16:33:31,846(3429) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:232) –> [main] Releasing JDBC connection  
[DEBUG] 2015-12-01 16:33:31,846(3429) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:250) –> [main] Released JDBC connection  
[DEBUG] 2015-12-01 16:33:31,870(3453) org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1374) –> [Thread-2] HHH000031: Closing  
[DEBUG] 2015-12-01 16:33:31,878(3461) org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1374) –> [Thread-2] HHH000031: Closing  
[DEBUG] 2015-12-01 16:34:21,526(0) org.hibernate.cfg.Configuration.<clinit>(Configuration.java:184) –> [main] Logging Provider: org.jboss.logging.Log4jLoggerProvider  
[DEBUG] 2015-12-01 16:34:21,557(31) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@68e5eea7  
[DEBUG] 2015-12-01 16:34:21,557(31) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@68e5eea7  
[DEBUG] 2015-12-01 16:34:21,572(46) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@68e5eea7  
[DEBUG] 2015-12-01 16:34:21,572(46) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6db9f5a4  
[DEBUG] 2015-12-01 16:34:21,572(46) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@6e509ffa  
[DEBUG] 2015-12-01 16:34:21,603(77) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@2638011  
[DEBUG] 2015-12-01 16:34:21,603(77) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@175b9425  
[DEBUG] 2015-12-01 16:34:21,603(77) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@175b9425  
[DEBUG] 2015-12-01 16:34:21,603(77) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@175b9425  
[DEBUG] 2015-12-01 16:34:21,619(93) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@17a7f733  
[DEBUG] 2015-12-01 16:34:21,619(93) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@17a7f733  
[DEBUG] 2015-12-01 16:34:21,619(93) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@17a7f733  
[DEBUG] 2015-12-01 16:34:21,635(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@3f56875e  
[DEBUG] 2015-12-01 16:34:21,635(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@3f56875e  
[DEBUG] 2015-12-01 16:34:21,635(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3f56875e  
[DEBUG] 2015-12-01 16:34:21,635(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@7748410a  
[DEBUG] 2015-12-01 16:34:21,635(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@7748410a  
[DEBUG] 2015-12-01 16:34:21,635(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7748410a  
[DEBUG] 2015-12-01 16:34:21,650(124) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@50caa560  
[DEBUG] 2015-12-01 16:34:21,650(124) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@50caa560  
[DEBUG] 2015-12-01 16:34:21,650(124) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@50caa560  
[DEBUG] 2015-12-01 16:34:21,650(124) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@3943a2be  
[DEBUG] 2015-12-01 16:34:21,650(124) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@3943a2be  
[DEBUG] 2015-12-01 16:34:21,650(124) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3943a2be  
[DEBUG] 2015-12-01 16:34:21,666(140) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@36d585c  
[DEBUG] 2015-12-01 16:34:21,666(140) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@36d585c  
[DEBUG] 2015-12-01 16:34:21,666(140) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@36d585c  
[DEBUG] 2015-12-01 16:34:21,666(140) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@53aad5d5  
[DEBUG] 2015-12-01 16:34:21,666(140) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@53aad5d5  
[DEBUG] 2015-12-01 16:34:21,682(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@8317c52  
[DEBUG] 2015-12-01 16:34:21,682(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@8317c52  
[DEBUG] 2015-12-01 16:34:21,682(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration string -> org.hibernate.type.StringType@7e9131d5  
[DEBUG] 2015-12-01 16:34:21,682(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@7e9131d5  
[DEBUG] 2015-12-01 16:34:21,682(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4ef37659  
[DEBUG] 2015-12-01 16:34:21,682(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2beee7ff  
[DEBUG] 2015-12-01 16:34:21,697(171) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration url -> org.hibernate.type.UrlType@2177849e  
[DEBUG] 2015-12-01 16:34:21,697(171) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@2177849e  
[DEBUG] 2015-12-01 16:34:21,697(171) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration date -> org.hibernate.type.DateType@366647c2  
[DEBUG] 2015-12-01 16:34:21,697(171) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@366647c2  
[DEBUG] 2015-12-01 16:34:21,713(187) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration time -> org.hibernate.type.TimeType@2abf4075  
[DEBUG] 2015-12-01 16:34:21,713(187) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2abf4075  
[DEBUG] 2015-12-01 16:34:21,713(187) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@7690781  
[DEBUG] 2015-12-01 16:34:21,713(187) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7690781  
[DEBUG] 2015-12-01 16:34:21,713(187) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7690781  
[DEBUG] 2015-12-01 16:34:21,713(187) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7671cb68  
[DEBUG] 2015-12-01 16:34:21,713(187) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@34f7cfd9  
[DEBUG] 2015-12-01 16:34:21,728(202) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@34f7cfd9  
[DEBUG] 2015-12-01 16:34:21,728(202) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@34f7cfd9  
[DEBUG] 2015-12-01 16:34:21,728(202) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@747edf66  
[DEBUG] 2015-12-01 16:34:21,728(202) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@e7edb54  
[DEBUG] 2015-12-01 16:34:21,728(202) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@e7edb54  
[DEBUG] 2015-12-01 16:34:21,728(202) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@1eb5174b  
[DEBUG] 2015-12-01 16:34:21,728(202) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1eb5174b  
[DEBUG] 2015-12-01 16:34:21,728(202) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@2bfc268b  
[DEBUG] 2015-12-01 16:34:21,728(202) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2bfc268b  
[DEBUG] 2015-12-01 16:34:21,744(218) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration class -> org.hibernate.type.ClassType@a3d8174  
[DEBUG] 2015-12-01 16:34:21,744(218) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@a3d8174  
[DEBUG] 2015-12-01 16:34:21,744(218) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2accdbb5  
[DEBUG] 2015-12-01 16:34:21,744(218) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2accdbb5  
[DEBUG] 2015-12-01 16:34:21,744(218) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@27ff5d15  
[DEBUG] 2015-12-01 16:34:21,744(218) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@a2431d0  
[DEBUG] 2015-12-01 16:34:21,744(218) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@22e357dc  
[DEBUG] 2015-12-01 16:34:21,744(218) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@22e357dc  
[DEBUG] 2015-12-01 16:34:21,744(218) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@22e357dc  
[DEBUG] 2015-12-01 16:34:21,760(234) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@48974e45  
[DEBUG] 2015-12-01 16:34:21,760(234) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@48974e45  
[DEBUG] 2015-12-01 16:34:21,760(234) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@48974e45  
[DEBUG] 2015-12-01 16:34:21,760(234) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration image -> org.hibernate.type.ImageType@57af006c  
[DEBUG] 2015-12-01 16:34:21,775(249) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@3514a4c0  
[DEBUG] 2015-12-01 16:34:21,775(249) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@3514a4c0  
[DEBUG] 2015-12-01 16:34:21,775(249) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@3514a4c0  
[DEBUG] 2015-12-01 16:34:21,775(249) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@33990a0c  
[DEBUG] 2015-12-01 16:34:21,775(249) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@33990a0c  
[DEBUG] 2015-12-01 16:34:21,775(249) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@33990a0c  
[DEBUG] 2015-12-01 16:34:21,775(249) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration text -> org.hibernate.type.TextType@10feca44  
[DEBUG] 2015-12-01 16:34:21,791(265) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ntext -> org.hibernate.type.NTextType@2053d869  
[DEBUG] 2015-12-01 16:34:21,791(265) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@fba92d3  
[DEBUG] 2015-12-01 16:34:21,807(281) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@fba92d3  
[DEBUG] 2015-12-01 16:34:21,807(281) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@16a0ee18  
[DEBUG] 2015-12-01 16:34:21,807(281) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@56cdfb3b  
[DEBUG] 2015-12-01 16:34:21,807(281) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@56cdfb3b  
[DEBUG] 2015-12-01 16:34:21,822(296) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nclob -> org.hibernate.type.NClobType@66d3eec0  
[DEBUG] 2015-12-01 16:34:21,822(296) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@66d3eec0  
[DEBUG] 2015-12-01 16:34:21,822(296) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@58695725  
[DEBUG] 2015-12-01 16:34:21,822(296) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5d7148e2  
[DEBUG] 2015-12-01 16:34:21,822(296) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@5ba3f27a  
[DEBUG] 2015-12-01 16:34:21,838(312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@d5b810e  
[DEBUG] 2015-12-01 16:34:21,838(312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@d5b810e  
[DEBUG] 2015-12-01 16:34:21,838(312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@485966cc  
[DEBUG] 2015-12-01 16:34:21,838(312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@54bff557  
[DEBUG] 2015-12-01 16:34:21,838(312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5a56cdac  
[DEBUG] 2015-12-01 16:34:21,853(327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@57cf54e1  
[DEBUG] 2015-12-01 16:34:21,853(327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@37d4349f  
[DEBUG] 2015-12-01 16:34:21,853(327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6e0f5f7f  
[DEBUG] 2015-12-01 16:34:21,853(327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3ee37e5a  
[DEBUG] 2015-12-01 16:34:21,853(327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3a44431a  
[INFO ] 2015-12-01 16:34:21,885(359) org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66) –> [main] HCANN000001: Hibernate Commons Annotations {4.0.4.Final}  
[INFO ] 2015-12-01 16:34:21,900(374) org.hibernate.Version.logVersion(Version.java:41) –> [main] HHH000412: Hibernate Core {4.2.10.Final}  
[INFO ] 2015-12-01 16:34:21,916(390) org.hibernate.cfg.Environment.<clinit>(Environment.java:238) –> [main] HHH000206: hibernate.properties not found  
[INFO ] 2015-12-01 16:34:21,916(390) org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:345) –> [main] HHH000021: Bytecode provider name : javassist  
[DEBUG] 2015-12-01 16:34:21,932(406) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-12-01 16:34:21,932(406) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-12-01 16:34:21,932(406) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 16:34:21,932(406) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 16:34:21,947(421) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-12-01 16:34:21,947(421) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]  
[DEBUG] 2015-12-01 16:34:21,947(421) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-12-01 16:34:21,947(421) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-12-01 16:34:21,947(421) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-12-01 16:34:21,947(421) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-12-01 16:34:21,963(437) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-12-01 16:34:21,963(437) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-12-01 16:34:21,963(437) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-12-01 16:34:21,963(437) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-12-01 16:34:21,963(437) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]  
[DEBUG] 2015-12-01 16:34:22,010(484) org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) –> [main] Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].  
[DEBUG] 2015-12-01 16:34:22,041(515) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1781) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-12-01 16:34:22,479(953) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:121) –> [main] Database ->
       name : MySQL
    version : 5.6.22
      major : 5
      minor : 6  
[DEBUG] 2015-12-01 16:34:22,479(953) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:127) –> [main] Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[DEBUG] 2015-12-01 16:34:22,479(953) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:133) –> [main] JDBC version : 4.0  
[INFO ] 2015-12-01 16:34:22,510(984) org.hibernate.dialect.Dialect.<init>(Dialect.java:130) –> [main] HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-12-01 16:34:22,525(999) org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:120) –> [main] HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException  
[DEBUG] 2015-12-01 16:34:22,572(1046) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 16:34:22,577(1051) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 16:34:22,578(1052) org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:534) –> [main] Binding entity from annotated class: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 16:34:22,609(1083) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}  
[DEBUG] 2015-12-01 16:34:22,609(1083) org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1118) –> [main] No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED  
[DEBUG] 2015-12-01 16:34:22,625(1099) org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:394) –> [main] Import with entity name TestEntity  
[DEBUG] 2015-12-01 16:34:22,640(1114) org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:564) –> [main] Bind entity com.it_sucre.entity.TestEntity on table test  
[DEBUG] 2015-12-01 16:34:22,687(1161) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=id, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 16:34:22,718(1192) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property id with lazy=false  
[DEBUG] 2015-12-01 16:34:22,718(1192) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for id  
[DEBUG] 2015-12-01 16:34:22,734(1208) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property id  
[DEBUG] 2015-12-01 16:34:22,734(1208) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=name, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 16:34:22,750(1224) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property name with lazy=false  
[DEBUG] 2015-12-01 16:34:22,750(1224) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for name  
[DEBUG] 2015-12-01 16:34:22,750(1224) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property name  
[DEBUG] 2015-12-01 16:34:22,765(1239) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for id  
[DEBUG] 2015-12-01 16:34:22,765(1239) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for name  
[DEBUG] 2015-12-01 16:34:22,765(1239) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 16:34:22,781(1255) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 16:34:22,781(1255) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 16:34:22,781(1255) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 16:34:22,781(1255) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 16:34:22,781(1255) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 16:34:22,781(1255) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 16:34:22,781(1255) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[DEBUG] 2015-12-01 16:34:22,797(1271) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:117) –> [main] Automatic flush during beforeCompletion(): disabled  
[DEBUG] 2015-12-01 16:34:22,812(1286) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:123) –> [main] Automatic session close at end of transaction: disabled  
[DEBUG] 2015-12-01 16:34:22,812(1286) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:134) –> [main] JDBC batch size: 15  
[DEBUG] 2015-12-01 16:34:22,812(1286) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:140) –> [main] JDBC batch updates for versioned data: disabled  
[DEBUG] 2015-12-01 16:34:22,812(1286) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:150) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-12-01 16:34:22,812(1286) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:156) –> [main] Wrap result sets: disabled  
[DEBUG] 2015-12-01 16:34:22,812(1286) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:162) –> [main] JDBC3 getGeneratedKeys(): enabled  
[DEBUG] 2015-12-01 16:34:22,812(1286) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:174) –> [main] multi-tenancy strategy : NONE  
[DEBUG] 2015-12-01 16:34:22,812(1286) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:180) –> [main] Connection release mode: auto  
[INFO ] 2015-12-01 16:34:22,812(1286) org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:68) –> [main] HHH000399: Using default transaction strategy (direct JDBC transactions)  
[DEBUG] 2015-12-01 16:34:22,828(1302) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Using BatchFetchStyle : LEGACY  
[DEBUG] 2015-12-01 16:34:22,828(1302) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:221) –> [main] Maximum outer join fetch depth: 2  
[DEBUG] 2015-12-01 16:34:22,828(1302) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:227) –> [main] Default batch fetch size: 1  
[DEBUG] 2015-12-01 16:34:22,828(1302) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:233) –> [main] Generate SQL with comments: disabled  
[DEBUG] 2015-12-01 16:34:22,828(1302) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:239) –> [main] Order SQL updates by primary key: disabled  
[DEBUG] 2015-12-01 16:34:22,828(1302) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Order SQL inserts for batching: disabled  
[DEBUG] 2015-12-01 16:34:22,828(1302) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Default null ordering: none  
[DEBUG] 2015-12-01 16:34:22,828(1302) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:584) –> [main] Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-12-01 16:34:22,843(1317) org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) –> [main] HHH000397: Using ASTQueryTranslatorFactory  
[DEBUG] 2015-12-01 16:34:22,843(1317) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:263) –> [main] Query language substitutions: {}  
[DEBUG] 2015-12-01 16:34:22,843(1317) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:269) –> [main] JPA-QL strict compliance: disabled  
[DEBUG] 2015-12-01 16:34:22,843(1317) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:277) –> [main] Second-level cache: enabled  
[DEBUG] 2015-12-01 16:34:22,843(1317) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:283) –> [main] Query cache: disabled  
[DEBUG] 2015-12-01 16:34:22,843(1317) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:524) –> [main] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory  
[DEBUG] 2015-12-01 16:34:22,843(1317) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:534) –> [main] org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.  
[DEBUG] 2015-12-01 16:34:22,859(1333) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:306) –> [main] Optimize cache for minimal puts: disabled  
[DEBUG] 2015-12-01 16:34:22,859(1333) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:321) –> [main] Structured second-level cache entries: disabled  
[DEBUG] 2015-12-01 16:34:22,859(1333) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:331) –> [main] Second-level cache direct-reference entries: disabled  
[DEBUG] 2015-12-01 16:34:22,859(1333) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:339) –> [main] Statistics: disabled  
[DEBUG] 2015-12-01 16:34:22,859(1333) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:345) –> [main] Deleted entity synthetic identifier rollback: disabled  
[DEBUG] 2015-12-01 16:34:22,859(1333) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:372) –> [main] Default entity-mode: pojo  
[DEBUG] 2015-12-01 16:34:22,859(1333) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:378) –> [main] Named query checking : enabled  
[DEBUG] 2015-12-01 16:34:22,859(1333) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:384) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): enabled  
[DEBUG] 2015-12-01 16:34:22,859(1333) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:402) –> [main] Allow initialization of lazy state outside session : : disabled  
[DEBUG] 2015-12-01 16:34:22,859(1333) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:412) –> [main] JTA Track by Thread: enabled  
[DEBUG] 2015-12-01 16:34:22,875(1349) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Building session factory  
[DEBUG] 2015-12-01 16:34:22,890(1364) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:280) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-12-01 16:34:22,890(1364) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:281) –> [main] Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=D:\Java\jdk1.8.0_40\jre\bin, java.vm.version=25.40-b25, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\Java\workspace\demo-chained-transactionmanager, java.runtime.version=1.8.0_40-b26, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate4.SpringSessionContext, java.endorsed.dirs=D:\Java\jdk1.8.0_40\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\奇点之~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8.1, sun.jnu.encoding=GBK, java.library.path=D:\Java\jdk1.8.0_40\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/jdk1.8.0_40/bin/../jre/bin/server;D:/Java/jdk1.8.0_40/bin/../jre/bin;D:/Java/jdk1.8.0_40/bin/../jre/lib/amd64;D:\Java\jdk1.8.0_40/bin;D:\Java\jdk1.8.0_40/lib/dt.jar;D:\Java\jdk1.8.0_40/lib/tools.jar;D:\__ENV__\apache-maven-3.2.1/bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__ENV__\apache-tomcat-7.0.57\bin;D:\__ENV__\apache-tomcat-7.0.57\jre;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\TortoiseSVN\bin;D:\__ENV__\eclipse;;., hibernate.connection.datasource=org.apache.commons.dbcp.BasicDataSource@6fe1b4fb, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=6.3, user.home=C:\Users\奇点之光08老师, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=奇点之光08老师, java.class.path=D:\Java\workspace\demo-chained-transactionmanager\target\test-classes;D:\Java\workspace\demo-chained-transactionmanager\target\classes;D:\__ENV__\repo\ch\qos\logback\logback-core\0.9.28\logback-core-0.9.28.jar;D:\__ENV__\repo\ch\qos\logback\logback-classic\0.9.28\logback-classic-0.9.28.jar;D:\__ENV__\repo\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;D:\__ENV__\repo\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;D:\__ENV__\repo\org\slf4j\slf4j-api\1.7.7\slf4j-api-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-jdk14\1.7.7\slf4j-jdk14-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-log4j12\1.7.7\slf4j-log4j12-1.7.7.jar;D:\__ENV__\repo\mysql\mysql-connector-java\5.1.26\mysql-connector-java-5.1.26.jar;D:\__ENV__\repo\log4j\log4j\1.2.14\log4j-1.2.14.jar;D:\__ENV__\repo\org\springframework\data\spring-data-commons\1.8.0.RELEASE\spring-data-commons-1.8.0.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\slf4j\jcl-over-slf4j\1.7.7\jcl-over-slf4j-1.7.7.jar;D:\__ENV__\repo\org\springframework\spring-context\3.2.4.RELEASE\spring-context-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-aop\3.2.4.RELEASE\spring-aop-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-expression\3.2.4.RELEASE\spring-expression-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-oxm\3.2.4.RELEASE\spring-oxm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\__ENV__\repo\org\springframework\spring-web\3.2.4.RELEASE\spring-web-3.2.4.RELEASE.jar;D:\__ENV__\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\__ENV__\repo\org\springframework\spring-webmvc\3.2.4.RELEASE\spring-webmvc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-orm\3.2.4.RELEASE\spring-orm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-jdbc\3.2.4.RELEASE\spring-jdbc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-tx\3.2.4.RELEASE\spring-tx-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-test\3.2.4.RELEASE\spring-test-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\__ENV__\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\__ENV__\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\__ENV__\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\__ENV__\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-validator\4.2.0.Final\hibernate-validator-4.2.0.Final.jar;D:\__ENV__\repo\javax\validation\validation-api\1.0.0.GA\validation-api-1.0.0.GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-core\4.2.10.Final\hibernate-core-4.2.10.Final.jar;D:\__ENV__\repo\antlr\antlr\2.7.7\antlr-2.7.7.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.1.Final\jboss-transaction-api_1.1_spec-1.0.1.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpcore\4.3.1\httpcore-4.3.1.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpclient\4.3.1\httpclient-4.3.1.jar;D:\__ENV__\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\__ENV__\repo\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpmime\4.3.1\httpmime-4.3.1.jar;D:\__ENV__\repo\redis\clients\jedis\2.7.2\jedis-2.7.2.jar;D:\__ENV__\repo\org\apache\commons\commons-pool2\2.3\commons-pool2-2.3.jar;D:\__ENV__\repo\javax\persistence\persistence-api\1.0.2\persistence-api-1.0.2.jar;D:\__ENV__\repo\org\ansj\ansj_seg\0.9\ansj_seg-0.9.jar;D:\__ENV__\repo\org\ansj\tree_split\1.0.1\tree_split-1.0.1.jar;D:\__ENV__\repo\org\apache\commons-lang3\commons-lang3\3.1\commons-lang3-3.1.jar;D:\__ENV__\repo\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;D:\__ENV__\repo\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;D:\__ENV__\repo\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;D:\__ENV__\repo\commons-io\commons-io\2.4\commons-io-2.4.jar;D:\__ENV__\repo\commons-fileupload\commons-fileupload\1.2.2\commons-fileupload-1.2.2.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\__ENV__\repo\com\googlecode\xmemcached\xmemcached\1.4.1\xmemcached-1.4.1.jar;D:\__ENV__\repo\net\sf\json-lib\json-lib\2.4\json-lib-2.4-jdk15.jar;D:\__ENV__\repo\commons-beanutils\commons-beanutils\1.8.0\commons-beanutils-1.8.0.jar;D:\__ENV__\repo\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;D:\__ENV__\repo\net\sf\ezmorph\ezmorph\1.0.6\ezmorph-1.0.6.jar;D:\__ENV__\repo\org\mybatis\mybatis\3.1.1\mybatis-3.1.1.jar;D:\__ENV__\repo\org\mybatis\mybatis-spring\1.1.1\mybatis-spring-1.1.1.jar;D:\__ENV__\repo\junit\junit\4.11\junit-4.11.jar;D:\__ENV__\repo\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/358/1/.cp/;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/357/1/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.classLoader.application=sun.misc.Launcher$AppClassLoader@3b07d329, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=D:\Java\jdk1.8.0_40\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 62592 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -test com.it_sucre.service.HibernateServiceTest:test, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_40, java.ext.dirs=D:\Java\jdk1.8.0_40\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=D:\Java\jdk1.8.0_40\jre\lib\resources.jar;D:\Java\jdk1.8.0_40\jre\lib\rt.jar;D:\Java\jdk1.8.0_40\jre\lib\sunrsasign.jar;D:\Java\jdk1.8.0_40\jre\lib\jsse.jar;D:\Java\jdk1.8.0_40\jre\lib\jce.jar;D:\Java\jdk1.8.0_40\jre\lib\charsets.jar;D:\Java\jdk1.8.0_40\jre\lib\jfr.jar;D:\Java\jdk1.8.0_40\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}  
[DEBUG] 2015-12-01 16:34:23,140(1614) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[DEBUG] 2015-12-01 16:34:23,406(1880) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3604) –> [main] Static SQL for entity: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 16:34:23,406(1880) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3609) –> [main]  Version select: select id from test where id =?  
[DEBUG] 2015-12-01 16:34:23,406(1880) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3612) –> [main]  Snapshot select: select testentity_.id, testentity_.name as name2_0_ from test testentity_ where testentity_.id=?  
[DEBUG] 2015-12-01 16:34:23,406(1880) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3615) –> [main]  Insert 0: insert into test (name, id) values (?, ?)  
[DEBUG] 2015-12-01 16:34:23,406(1880) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3616) –> [main]  Update 0: update test set name=? where id=?  
[DEBUG] 2015-12-01 16:34:23,406(1880) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3617) –> [main]  Delete 0: delete from test where id=?  
[DEBUG] 2015-12-01 16:34:23,453(1927) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [NONE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 16:34:23,453(1927) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 16:34:23,453(1927) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 16:34:23,453(1927) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE_NOWAIT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 16:34:23,453(1927) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [FORCE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 16:34:23,453(1927) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? lock in share mode  
[DEBUG] 2015-12-01 16:34:23,453(1927) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_WRITE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 16:34:23,453(1927) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 16:34:23,453(1927) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 16:34:23,468(1942) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 16:34:23,468(1942) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 16:34:23,468(1942) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 16:34:23,547(2021) org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:62) –> [main] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@27a5328c  
[DEBUG] 2015-12-01 16:34:23,547(2021) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:75) –> [main] Registering SessionFactory: 40221072-b059-42d6-8e07-063ab6ef1aa5 (<unnamed>)  
[DEBUG] 2015-12-01 16:34:23,547(2021) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:82) –> [main] Not binding SessionFactory to JNDI, no JNDI name configured  
[DEBUG] 2015-12-01 16:34:23,547(2021) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:492) –> [main] Instantiated session factory  
[INFO ] 2015-12-01 16:34:23,547(2021) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:182) –> [main] HHH000228: Running hbm2ddl schema update  
[INFO ] 2015-12-01 16:34:23,547(2021) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:193) –> [main] HHH000102: Fetching database metadata  
[INFO ] 2015-12-01 16:34:23,562(2036) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:205) –> [main] HHH000396: Updating schema  
[DEBUG] 2015-12-01 16:34:23,562(2036) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 16:34:23,562(2036) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 16:34:23,562(2036) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 16:34:23,562(2036) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 16:34:23,562(2036) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 16:34:23,562(2036) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 16:34:23,562(2036) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 16:34:23,562(2036) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 16:34:23,562(2036) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 16:34:23,562(2036) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[INFO ] 2015-12-01 16:34:23,609(2083) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] HHH000261: Table found: Test.test  
[INFO ] 2015-12-01 16:34:23,612(2086) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:67) –> [main] HHH000037: Columns: [name, id]  
[INFO ] 2015-12-01 16:34:23,612(2086) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] HHH000108: Foreign keys: []  
[INFO ] 2015-12-01 16:34:23,613(2087) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:70) –> [main] HHH000126: Indexes: [primary]  
[DEBUG] 2015-12-01 16:34:23,613(2087) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-12-01 16:34:23,613(2087) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:242) –> [main] HHH000232: Schema update complete  
[DEBUG] 2015-12-01 16:34:23,613(2087) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1073) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-12-01 16:34:23,613(2087) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1096) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-12-01 16:34:23,629(2103) org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:110) –> [main] Statistics initialized [enabled=false]  
[DEBUG] 2015-12-01 16:34:23,692(2166) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@68e5eea7  
[DEBUG] 2015-12-01 16:34:23,692(2166) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@68e5eea7  
[DEBUG] 2015-12-01 16:34:23,692(2166) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@68e5eea7  
[DEBUG] 2015-12-01 16:34:23,692(2166) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6db9f5a4  
[DEBUG] 2015-12-01 16:34:23,707(2181) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@6e509ffa  
[DEBUG] 2015-12-01 16:34:23,707(2181) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@2638011  
[DEBUG] 2015-12-01 16:34:23,707(2181) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@175b9425  
[DEBUG] 2015-12-01 16:34:23,707(2181) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@175b9425  
[DEBUG] 2015-12-01 16:34:23,707(2181) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@175b9425  
[DEBUG] 2015-12-01 16:34:23,723(2197) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@17a7f733  
[DEBUG] 2015-12-01 16:34:23,723(2197) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@17a7f733  
[DEBUG] 2015-12-01 16:34:23,723(2197) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@17a7f733  
[DEBUG] 2015-12-01 16:34:23,723(2197) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@3f56875e  
[DEBUG] 2015-12-01 16:34:23,723(2197) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@3f56875e  
[DEBUG] 2015-12-01 16:34:23,723(2197) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3f56875e  
[DEBUG] 2015-12-01 16:34:23,723(2197) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@7748410a  
[DEBUG] 2015-12-01 16:34:23,723(2197) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@7748410a  
[DEBUG] 2015-12-01 16:34:23,723(2197) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7748410a  
[DEBUG] 2015-12-01 16:34:23,723(2197) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@50caa560  
[DEBUG] 2015-12-01 16:34:23,723(2197) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@50caa560  
[DEBUG] 2015-12-01 16:34:23,723(2197) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@50caa560  
[DEBUG] 2015-12-01 16:34:23,723(2197) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@3943a2be  
[DEBUG] 2015-12-01 16:34:23,723(2197) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@3943a2be  
[DEBUG] 2015-12-01 16:34:23,723(2197) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3943a2be  
[DEBUG] 2015-12-01 16:34:23,738(2212) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@36d585c  
[DEBUG] 2015-12-01 16:34:23,738(2212) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@36d585c  
[DEBUG] 2015-12-01 16:34:23,738(2212) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@36d585c  
[DEBUG] 2015-12-01 16:34:23,738(2212) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@53aad5d5  
[DEBUG] 2015-12-01 16:34:23,738(2212) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@53aad5d5  
[DEBUG] 2015-12-01 16:34:23,738(2212) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@8317c52  
[DEBUG] 2015-12-01 16:34:23,738(2212) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@8317c52  
[DEBUG] 2015-12-01 16:34:23,738(2212) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration string -> org.hibernate.type.StringType@7e9131d5  
[DEBUG] 2015-12-01 16:34:23,738(2212) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@7e9131d5  
[DEBUG] 2015-12-01 16:34:23,738(2212) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4ef37659  
[DEBUG] 2015-12-01 16:34:23,738(2212) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2beee7ff  
[DEBUG] 2015-12-01 16:34:23,738(2212) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration url -> org.hibernate.type.UrlType@2177849e  
[DEBUG] 2015-12-01 16:34:23,738(2212) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@2177849e  
[DEBUG] 2015-12-01 16:34:23,738(2212) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration date -> org.hibernate.type.DateType@366647c2  
[DEBUG] 2015-12-01 16:34:23,738(2212) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@366647c2  
[DEBUG] 2015-12-01 16:34:23,738(2212) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration time -> org.hibernate.type.TimeType@2abf4075  
[DEBUG] 2015-12-01 16:34:23,738(2212) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2abf4075  
[DEBUG] 2015-12-01 16:34:23,738(2212) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@7690781  
[DEBUG] 2015-12-01 16:34:23,738(2212) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7690781  
[DEBUG] 2015-12-01 16:34:23,738(2212) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7690781  
[DEBUG] 2015-12-01 16:34:23,738(2212) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7671cb68  
[DEBUG] 2015-12-01 16:34:23,738(2212) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@34f7cfd9  
[DEBUG] 2015-12-01 16:34:23,738(2212) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@34f7cfd9  
[DEBUG] 2015-12-01 16:34:23,754(2228) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@34f7cfd9  
[DEBUG] 2015-12-01 16:34:23,754(2228) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@747edf66  
[DEBUG] 2015-12-01 16:34:23,754(2228) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@e7edb54  
[DEBUG] 2015-12-01 16:34:23,754(2228) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@e7edb54  
[DEBUG] 2015-12-01 16:34:23,754(2228) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@1eb5174b  
[DEBUG] 2015-12-01 16:34:23,754(2228) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1eb5174b  
[DEBUG] 2015-12-01 16:34:23,754(2228) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@2bfc268b  
[DEBUG] 2015-12-01 16:34:23,754(2228) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2bfc268b  
[DEBUG] 2015-12-01 16:34:23,754(2228) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration class -> org.hibernate.type.ClassType@a3d8174  
[DEBUG] 2015-12-01 16:34:23,754(2228) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@a3d8174  
[DEBUG] 2015-12-01 16:34:23,754(2228) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2accdbb5  
[DEBUG] 2015-12-01 16:34:23,754(2228) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2accdbb5  
[DEBUG] 2015-12-01 16:34:23,754(2228) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@27ff5d15  
[DEBUG] 2015-12-01 16:34:23,754(2228) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@a2431d0  
[DEBUG] 2015-12-01 16:34:23,754(2228) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@22e357dc  
[DEBUG] 2015-12-01 16:34:23,754(2228) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@22e357dc  
[DEBUG] 2015-12-01 16:34:23,754(2228) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@22e357dc  
[DEBUG] 2015-12-01 16:34:23,754(2228) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@48974e45  
[DEBUG] 2015-12-01 16:34:23,754(2228) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@48974e45  
[DEBUG] 2015-12-01 16:34:23,754(2228) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@48974e45  
[DEBUG] 2015-12-01 16:34:23,770(2244) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration image -> org.hibernate.type.ImageType@57af006c  
[DEBUG] 2015-12-01 16:34:23,770(2244) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@3514a4c0  
[DEBUG] 2015-12-01 16:34:23,770(2244) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@3514a4c0  
[DEBUG] 2015-12-01 16:34:23,770(2244) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@3514a4c0  
[DEBUG] 2015-12-01 16:34:23,770(2244) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@33990a0c  
[DEBUG] 2015-12-01 16:34:23,770(2244) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@33990a0c  
[DEBUG] 2015-12-01 16:34:23,770(2244) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@33990a0c  
[DEBUG] 2015-12-01 16:34:23,770(2244) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration text -> org.hibernate.type.TextType@10feca44  
[DEBUG] 2015-12-01 16:34:23,770(2244) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ntext -> org.hibernate.type.NTextType@2053d869  
[DEBUG] 2015-12-01 16:34:23,785(2259) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@fba92d3  
[DEBUG] 2015-12-01 16:34:23,785(2259) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@fba92d3  
[DEBUG] 2015-12-01 16:34:23,785(2259) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@16a0ee18  
[DEBUG] 2015-12-01 16:34:23,785(2259) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@56cdfb3b  
[DEBUG] 2015-12-01 16:34:23,785(2259) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@56cdfb3b  
[DEBUG] 2015-12-01 16:34:23,785(2259) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nclob -> org.hibernate.type.NClobType@66d3eec0  
[DEBUG] 2015-12-01 16:34:23,785(2259) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@66d3eec0  
[DEBUG] 2015-12-01 16:34:23,785(2259) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@58695725  
[DEBUG] 2015-12-01 16:34:23,785(2259) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5d7148e2  
[DEBUG] 2015-12-01 16:34:23,785(2259) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@5ba3f27a  
[DEBUG] 2015-12-01 16:34:23,785(2259) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@d5b810e  
[DEBUG] 2015-12-01 16:34:23,785(2259) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@d5b810e  
[DEBUG] 2015-12-01 16:34:23,785(2259) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@552518c3  
[DEBUG] 2015-12-01 16:34:23,785(2259) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@59aa20b3  
[DEBUG] 2015-12-01 16:34:23,785(2259) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4b21844c  
[DEBUG] 2015-12-01 16:34:23,785(2259) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@138fe6ec  
[DEBUG] 2015-12-01 16:34:23,785(2259) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@19b30c92  
[DEBUG] 2015-12-01 16:34:23,785(2259) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@29876704  
[DEBUG] 2015-12-01 16:34:23,785(2259) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4940809c  
[DEBUG] 2015-12-01 16:34:23,785(2259) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4efcf8a  
[DEBUG] 2015-12-01 16:34:23,785(2259) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-12-01 16:34:23,785(2259) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-12-01 16:34:23,785(2259) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 16:34:23,785(2259) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 16:34:23,785(2259) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-12-01 16:34:23,801(2275) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]  
[DEBUG] 2015-12-01 16:34:23,801(2275) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-12-01 16:34:23,801(2275) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-12-01 16:34:23,801(2275) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-12-01 16:34:23,801(2275) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-12-01 16:34:23,801(2275) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-12-01 16:34:23,801(2275) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-12-01 16:34:23,801(2275) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-12-01 16:34:23,801(2275) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-12-01 16:34:23,801(2275) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]  
[DEBUG] 2015-12-01 16:34:23,828(2302) org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) –> [main] Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].  
[DEBUG] 2015-12-01 16:34:23,838(2312) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1781) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-12-01 16:34:23,885(2359) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:121) –> [main] Database ->
       name : MySQL
    version : 5.6.22
      major : 5
      minor : 6  
[DEBUG] 2015-12-01 16:34:23,887(2361) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:127) –> [main] Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[DEBUG] 2015-12-01 16:34:23,888(2362) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:133) –> [main] JDBC version : 4.0  
[INFO ] 2015-12-01 16:34:23,894(2368) org.hibernate.dialect.Dialect.<init>(Dialect.java:130) –> [main] HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-12-01 16:34:23,897(2371) org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:120) –> [main] HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException  
[DEBUG] 2015-12-01 16:34:23,898(2372) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 16:34:23,900(2374) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 16:34:23,900(2374) org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:534) –> [main] Binding entity from annotated class: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 16:34:23,901(2375) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}  
[DEBUG] 2015-12-01 16:34:23,901(2375) org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1118) –> [main] No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED  
[DEBUG] 2015-12-01 16:34:23,902(2376) org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:394) –> [main] Import with entity name TestEntity  
[DEBUG] 2015-12-01 16:34:23,903(2377) org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:564) –> [main] Bind entity com.it_sucre.entity.TestEntity on table test  
[DEBUG] 2015-12-01 16:34:23,905(2379) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=id, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 16:34:23,906(2380) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property id with lazy=false  
[DEBUG] 2015-12-01 16:34:23,906(2380) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for id  
[DEBUG] 2015-12-01 16:34:23,907(2381) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property id  
[DEBUG] 2015-12-01 16:34:23,908(2382) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=name, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 16:34:23,909(2383) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property name with lazy=false  
[DEBUG] 2015-12-01 16:34:23,910(2384) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for name  
[DEBUG] 2015-12-01 16:34:23,910(2384) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property name  
[DEBUG] 2015-12-01 16:34:23,911(2385) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for id  
[DEBUG] 2015-12-01 16:34:23,912(2386) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for name  
[DEBUG] 2015-12-01 16:34:23,912(2386) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
