[INFO ] 2015-12-01 13:56:27,807(0) com.it_sucre.dao.TestDao.test2(TestDao.java:36) –> [main] test2() - List<Integer> testEntitys=[1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]  
[DEBUG] 2015-12-01 15:10:30,698(0) org.hibernate.cfg.Configuration.<clinit>(Configuration.java:184) –> [main] Logging Provider: org.jboss.logging.Log4jLoggerProvider  
[DEBUG] 2015-12-01 15:10:30,745(47) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@6d3a388c  
[DEBUG] 2015-12-01 15:10:30,745(47) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@6d3a388c  
[DEBUG] 2015-12-01 15:10:30,745(47) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6d3a388c  
[DEBUG] 2015-12-01 15:10:30,745(47) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@29d89d5d  
[DEBUG] 2015-12-01 15:10:30,745(47) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@15aab8c6  
[DEBUG] 2015-12-01 15:10:30,745(47) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@101952da  
[DEBUG] 2015-12-01 15:10:30,760(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@4d02f94e  
[DEBUG] 2015-12-01 15:10:30,760(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@4d02f94e  
[DEBUG] 2015-12-01 15:10:30,760(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4d02f94e  
[DEBUG] 2015-12-01 15:10:30,760(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@3c73951  
[DEBUG] 2015-12-01 15:10:30,760(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@3c73951  
[DEBUG] 2015-12-01 15:10:30,760(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3c73951  
[DEBUG] 2015-12-01 15:10:30,776(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@5403f35f  
[DEBUG] 2015-12-01 15:10:30,776(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@5403f35f  
[DEBUG] 2015-12-01 15:10:30,776(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5403f35f  
[DEBUG] 2015-12-01 15:10:30,776(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@6d4e5011  
[DEBUG] 2015-12-01 15:10:30,776(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@6d4e5011  
[DEBUG] 2015-12-01 15:10:30,776(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6d4e5011  
[DEBUG] 2015-12-01 15:10:30,776(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@16a0ee18  
[DEBUG] 2015-12-01 15:10:30,776(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@16a0ee18  
[DEBUG] 2015-12-01 15:10:30,776(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@16a0ee18  
[DEBUG] 2015-12-01 15:10:30,792(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@4d465b11  
[DEBUG] 2015-12-01 15:10:30,792(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@4d465b11  
[DEBUG] 2015-12-01 15:10:30,792(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4d465b11  
[DEBUG] 2015-12-01 15:10:30,792(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@f736069  
[DEBUG] 2015-12-01 15:10:30,792(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@f736069  
[DEBUG] 2015-12-01 15:10:30,792(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@f736069  
[DEBUG] 2015-12-01 15:10:30,807(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@22ef9844  
[DEBUG] 2015-12-01 15:10:30,807(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@22ef9844  
[DEBUG] 2015-12-01 15:10:30,807(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2f217633  
[DEBUG] 2015-12-01 15:10:30,807(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2f217633  
[DEBUG] 2015-12-01 15:10:30,807(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration string -> org.hibernate.type.StringType@4738a206  
[DEBUG] 2015-12-01 15:10:30,807(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@4738a206  
[DEBUG] 2015-12-01 15:10:30,807(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@543588e6  
[DEBUG] 2015-12-01 15:10:30,807(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2c35e847  
[DEBUG] 2015-12-01 15:10:30,823(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration url -> org.hibernate.type.UrlType@741a8937  
[DEBUG] 2015-12-01 15:10:30,823(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@741a8937  
[DEBUG] 2015-12-01 15:10:30,823(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration date -> org.hibernate.type.DateType@d5b810e  
[DEBUG] 2015-12-01 15:10:30,823(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@d5b810e  
[DEBUG] 2015-12-01 15:10:30,823(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration time -> org.hibernate.type.TimeType@5a56cdac  
[DEBUG] 2015-12-01 15:10:30,823(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5a56cdac  
[DEBUG] 2015-12-01 15:10:30,823(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@2ea41516  
[DEBUG] 2015-12-01 15:10:30,823(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2ea41516  
[DEBUG] 2015-12-01 15:10:30,823(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2ea41516  
[DEBUG] 2015-12-01 15:10:30,838(140) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4803b726  
[DEBUG] 2015-12-01 15:10:30,838(140) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@1de5f259  
[DEBUG] 2015-12-01 15:10:30,838(140) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1de5f259  
[DEBUG] 2015-12-01 15:10:30,838(140) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1de5f259  
[DEBUG] 2015-12-01 15:10:30,838(140) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4dbb42b7  
[DEBUG] 2015-12-01 15:10:30,838(140) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@437da279  
[DEBUG] 2015-12-01 15:10:30,838(140) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@437da279  
[DEBUG] 2015-12-01 15:10:30,854(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@6253c26  
[DEBUG] 2015-12-01 15:10:30,854(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6253c26  
[DEBUG] 2015-12-01 15:10:30,854(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@47e2e487  
[DEBUG] 2015-12-01 15:10:30,854(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@47e2e487  
[DEBUG] 2015-12-01 15:10:30,854(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration class -> org.hibernate.type.ClassType@4b8ee4de  
[DEBUG] 2015-12-01 15:10:30,854(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4b8ee4de  
[DEBUG] 2015-12-01 15:10:30,854(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2d710f1a  
[DEBUG] 2015-12-01 15:10:30,854(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2d710f1a  
[DEBUG] 2015-12-01 15:10:30,854(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@48aca48b  
[DEBUG] 2015-12-01 15:10:30,854(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@54e1c68b  
[DEBUG] 2015-12-01 15:10:30,870(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@272113c4  
[DEBUG] 2015-12-01 15:10:30,870(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@272113c4  
[DEBUG] 2015-12-01 15:10:30,870(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@272113c4  
[DEBUG] 2015-12-01 15:10:30,870(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1ed6388a  
[DEBUG] 2015-12-01 15:10:30,870(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1ed6388a  
[DEBUG] 2015-12-01 15:10:30,870(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1ed6388a  
[DEBUG] 2015-12-01 15:10:30,885(187) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration image -> org.hibernate.type.ImageType@576d5deb  
[DEBUG] 2015-12-01 15:10:30,885(187) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@6fdbe764  
[DEBUG] 2015-12-01 15:10:30,885(187) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@6fdbe764  
[DEBUG] 2015-12-01 15:10:30,885(187) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@6fdbe764  
[DEBUG] 2015-12-01 15:10:30,885(187) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7b36aa0c  
[DEBUG] 2015-12-01 15:10:30,885(187) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7b36aa0c  
[DEBUG] 2015-12-01 15:10:30,885(187) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7b36aa0c  
[DEBUG] 2015-12-01 15:10:30,885(187) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration text -> org.hibernate.type.TextType@4686afc2  
[DEBUG] 2015-12-01 15:10:30,917(219) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ntext -> org.hibernate.type.NTextType@e350b40  
[DEBUG] 2015-12-01 15:10:30,932(234) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@2e385cce  
[DEBUG] 2015-12-01 15:10:30,932(234) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2e385cce  
[DEBUG] 2015-12-01 15:10:30,932(234) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@f0c8a99  
[DEBUG] 2015-12-01 15:10:30,948(250) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@470734c3  
[DEBUG] 2015-12-01 15:10:30,948(250) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@470734c3  
[DEBUG] 2015-12-01 15:10:30,963(265) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nclob -> org.hibernate.type.NClobType@235ecd9f  
[DEBUG] 2015-12-01 15:10:30,963(265) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@235ecd9f  
[DEBUG] 2015-12-01 15:10:30,963(265) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@74d1dc36  
[DEBUG] 2015-12-01 15:10:30,963(265) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@663c9e7a  
[DEBUG] 2015-12-01 15:10:30,963(265) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@3a7442c7  
[DEBUG] 2015-12-01 15:10:30,963(265) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@79e4c792  
[DEBUG] 2015-12-01 15:10:30,963(265) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@79e4c792  
[DEBUG] 2015-12-01 15:10:30,979(281) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1349883  
[DEBUG] 2015-12-01 15:10:30,979(281) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7f485fda  
[DEBUG] 2015-12-01 15:10:30,979(281) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@d737b89  
[DEBUG] 2015-12-01 15:10:30,979(281) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@35dab4eb  
[DEBUG] 2015-12-01 15:10:30,979(281) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3ba987b8  
[DEBUG] 2015-12-01 15:10:30,979(281) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5f049ea1  
[DEBUG] 2015-12-01 15:10:30,979(281) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5afa3c9  
[DEBUG] 2015-12-01 15:10:30,979(281) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@909217e  
[INFO ] 2015-12-01 15:10:31,026(328) org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66) –> [main] HCANN000001: Hibernate Commons Annotations {4.0.4.Final}  
[INFO ] 2015-12-01 15:10:31,042(344) org.hibernate.Version.logVersion(Version.java:41) –> [main] HHH000412: Hibernate Core {4.2.10.Final}  
[INFO ] 2015-12-01 15:10:31,042(344) org.hibernate.cfg.Environment.<clinit>(Environment.java:238) –> [main] HHH000206: hibernate.properties not found  
[INFO ] 2015-12-01 15:10:31,042(344) org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:345) –> [main] HHH000021: Bytecode provider name : javassist  
[DEBUG] 2015-12-01 15:10:31,073(375) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-12-01 15:10:31,073(375) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-12-01 15:10:31,073(375) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:10:31,073(375) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:10:31,073(375) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-12-01 15:10:31,073(375) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]  
[DEBUG] 2015-12-01 15:10:31,073(375) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-12-01 15:10:31,088(390) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-12-01 15:10:31,104(406) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-12-01 15:10:31,104(406) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-12-01 15:10:31,104(406) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-12-01 15:10:31,104(406) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-12-01 15:10:31,104(406) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-12-01 15:10:31,104(406) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-12-01 15:10:31,104(406) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]  
[DEBUG] 2015-12-01 15:10:31,151(453) org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) –> [main] Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].  
[DEBUG] 2015-12-01 15:10:31,198(500) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1781) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-12-01 15:10:31,620(922) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:121) –> [main] Database ->
       name : MySQL
    version : 5.6.22
      major : 5
      minor : 6  
[DEBUG] 2015-12-01 15:10:31,623(925) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:127) –> [main] Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[DEBUG] 2015-12-01 15:10:31,623(925) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:133) –> [main] JDBC version : 4.0  
[INFO ] 2015-12-01 15:10:31,639(941) org.hibernate.dialect.Dialect.<init>(Dialect.java:130) –> [main] HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-12-01 15:10:31,655(957) org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:120) –> [main] HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException  
[DEBUG] 2015-12-01 15:10:31,702(1004) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:10:31,702(1004) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:10:31,717(1019) org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:534) –> [main] Binding entity from annotated class: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:10:31,764(1066) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}  
[DEBUG] 2015-12-01 15:10:31,796(1098) org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1118) –> [main] No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED  
[DEBUG] 2015-12-01 15:10:31,827(1129) org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:394) –> [main] Import with entity name TestEntity  
[DEBUG] 2015-12-01 15:10:31,842(1144) org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:564) –> [main] Bind entity com.it_sucre.entity.TestEntity on table test  
[DEBUG] 2015-12-01 15:10:31,889(1191) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=id, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:10:31,905(1207) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property id with lazy=false  
[DEBUG] 2015-12-01 15:10:31,905(1207) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for id  
[DEBUG] 2015-12-01 15:10:31,921(1223) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property id  
[DEBUG] 2015-12-01 15:10:31,921(1223) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=name, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:10:31,921(1223) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property name with lazy=false  
[DEBUG] 2015-12-01 15:10:31,921(1223) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for name  
[DEBUG] 2015-12-01 15:10:31,921(1223) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property name  
[DEBUG] 2015-12-01 15:10:31,921(1223) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for id  
[DEBUG] 2015-12-01 15:10:31,921(1223) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for name  
[DEBUG] 2015-12-01 15:10:31,936(1238) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:10:31,936(1238) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:10:31,936(1238) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:10:31,936(1238) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:10:31,936(1238) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:10:31,936(1238) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:10:31,936(1238) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:10:31,936(1238) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[DEBUG] 2015-12-01 15:10:31,952(1254) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:117) –> [main] Automatic flush during beforeCompletion(): disabled  
[DEBUG] 2015-12-01 15:10:31,952(1254) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:123) –> [main] Automatic session close at end of transaction: disabled  
[DEBUG] 2015-12-01 15:10:31,952(1254) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:134) –> [main] JDBC batch size: 15  
[DEBUG] 2015-12-01 15:10:31,952(1254) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:140) –> [main] JDBC batch updates for versioned data: disabled  
[DEBUG] 2015-12-01 15:10:31,952(1254) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:150) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-12-01 15:10:31,952(1254) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:156) –> [main] Wrap result sets: disabled  
[DEBUG] 2015-12-01 15:10:31,952(1254) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:162) –> [main] JDBC3 getGeneratedKeys(): enabled  
[DEBUG] 2015-12-01 15:10:31,952(1254) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:174) –> [main] multi-tenancy strategy : NONE  
[DEBUG] 2015-12-01 15:10:31,952(1254) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:180) –> [main] Connection release mode: auto  
[INFO ] 2015-12-01 15:10:31,952(1254) org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:68) –> [main] HHH000399: Using default transaction strategy (direct JDBC transactions)  
[DEBUG] 2015-12-01 15:10:31,967(1269) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Using BatchFetchStyle : LEGACY  
[DEBUG] 2015-12-01 15:10:31,967(1269) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:221) –> [main] Maximum outer join fetch depth: 2  
[DEBUG] 2015-12-01 15:10:31,967(1269) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:227) –> [main] Default batch fetch size: 1  
[DEBUG] 2015-12-01 15:10:31,967(1269) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:233) –> [main] Generate SQL with comments: disabled  
[DEBUG] 2015-12-01 15:10:31,967(1269) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:239) –> [main] Order SQL updates by primary key: disabled  
[DEBUG] 2015-12-01 15:10:31,967(1269) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Order SQL inserts for batching: disabled  
[DEBUG] 2015-12-01 15:10:31,983(1285) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Default null ordering: none  
[DEBUG] 2015-12-01 15:10:31,983(1285) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:584) –> [main] Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-12-01 15:10:31,999(1301) org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) –> [main] HHH000397: Using ASTQueryTranslatorFactory  
[DEBUG] 2015-12-01 15:10:31,999(1301) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:263) –> [main] Query language substitutions: {}  
[DEBUG] 2015-12-01 15:10:31,999(1301) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:269) –> [main] JPA-QL strict compliance: disabled  
[DEBUG] 2015-12-01 15:10:31,999(1301) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:277) –> [main] Second-level cache: enabled  
[DEBUG] 2015-12-01 15:10:31,999(1301) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:283) –> [main] Query cache: disabled  
[DEBUG] 2015-12-01 15:10:31,999(1301) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:524) –> [main] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory  
[DEBUG] 2015-12-01 15:10:31,999(1301) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:534) –> [main] org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.  
[DEBUG] 2015-12-01 15:10:31,999(1301) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:306) –> [main] Optimize cache for minimal puts: disabled  
[DEBUG] 2015-12-01 15:10:31,999(1301) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:321) –> [main] Structured second-level cache entries: disabled  
[DEBUG] 2015-12-01 15:10:31,999(1301) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:331) –> [main] Second-level cache direct-reference entries: disabled  
[DEBUG] 2015-12-01 15:10:31,999(1301) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:339) –> [main] Statistics: disabled  
[DEBUG] 2015-12-01 15:10:31,999(1301) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:345) –> [main] Deleted entity synthetic identifier rollback: disabled  
[DEBUG] 2015-12-01 15:10:32,014(1316) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:372) –> [main] Default entity-mode: pojo  
[DEBUG] 2015-12-01 15:10:32,014(1316) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:378) –> [main] Named query checking : enabled  
[DEBUG] 2015-12-01 15:10:32,014(1316) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:384) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): enabled  
[DEBUG] 2015-12-01 15:10:32,014(1316) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:402) –> [main] Allow initialization of lazy state outside session : : disabled  
[DEBUG] 2015-12-01 15:10:32,046(1348) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:412) –> [main] JTA Track by Thread: enabled  
[DEBUG] 2015-12-01 15:10:32,061(1363) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Building session factory  
[DEBUG] 2015-12-01 15:10:32,092(1394) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:280) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-12-01 15:10:32,092(1394) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:281) –> [main] Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=D:\Java\jdk1.8.0_40\jre\bin, java.vm.version=25.40-b25, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\Java\workspace\demo-chained-transactionmanager, java.runtime.version=1.8.0_40-b26, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=thread, java.endorsed.dirs=D:\Java\jdk1.8.0_40\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\奇点之~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8.1, sun.jnu.encoding=GBK, java.library.path=D:\Java\jdk1.8.0_40\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/jdk1.8.0_40/bin/../jre/bin/server;D:/Java/jdk1.8.0_40/bin/../jre/bin;D:/Java/jdk1.8.0_40/bin/../jre/lib/amd64;D:\Java\jdk1.8.0_40/bin;D:\Java\jdk1.8.0_40/lib/dt.jar;D:\Java\jdk1.8.0_40/lib/tools.jar;D:\__ENV__\apache-maven-3.2.1/bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__ENV__\apache-tomcat-7.0.57\bin;D:\__ENV__\apache-tomcat-7.0.57\jre;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\TortoiseSVN\bin;D:\__ENV__\eclipse;;., hibernate.connection.datasource=org.apache.commons.dbcp.BasicDataSource@53f0a4cb, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=6.3, user.home=C:\Users\奇点之光08老师, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=奇点之光08老师, java.class.path=D:\Java\workspace\demo-chained-transactionmanager\target\test-classes;D:\Java\workspace\demo-chained-transactionmanager\target\classes;D:\__ENV__\repo\ch\qos\logback\logback-core\0.9.28\logback-core-0.9.28.jar;D:\__ENV__\repo\ch\qos\logback\logback-classic\0.9.28\logback-classic-0.9.28.jar;D:\__ENV__\repo\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;D:\__ENV__\repo\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;D:\__ENV__\repo\org\slf4j\slf4j-api\1.7.7\slf4j-api-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-jdk14\1.7.7\slf4j-jdk14-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-log4j12\1.7.7\slf4j-log4j12-1.7.7.jar;D:\__ENV__\repo\mysql\mysql-connector-java\5.1.26\mysql-connector-java-5.1.26.jar;D:\__ENV__\repo\log4j\log4j\1.2.14\log4j-1.2.14.jar;D:\__ENV__\repo\org\springframework\data\spring-data-commons\1.8.0.RELEASE\spring-data-commons-1.8.0.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\slf4j\jcl-over-slf4j\1.7.7\jcl-over-slf4j-1.7.7.jar;D:\__ENV__\repo\org\springframework\spring-context\3.2.4.RELEASE\spring-context-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-aop\3.2.4.RELEASE\spring-aop-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-expression\3.2.4.RELEASE\spring-expression-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-oxm\3.2.4.RELEASE\spring-oxm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\__ENV__\repo\org\springframework\spring-web\3.2.4.RELEASE\spring-web-3.2.4.RELEASE.jar;D:\__ENV__\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\__ENV__\repo\org\springframework\spring-webmvc\3.2.4.RELEASE\spring-webmvc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-orm\3.2.4.RELEASE\spring-orm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-jdbc\3.2.4.RELEASE\spring-jdbc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-tx\3.2.4.RELEASE\spring-tx-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-test\3.2.4.RELEASE\spring-test-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\__ENV__\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\__ENV__\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\__ENV__\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\__ENV__\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-validator\4.2.0.Final\hibernate-validator-4.2.0.Final.jar;D:\__ENV__\repo\javax\validation\validation-api\1.0.0.GA\validation-api-1.0.0.GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-core\4.2.10.Final\hibernate-core-4.2.10.Final.jar;D:\__ENV__\repo\antlr\antlr\2.7.7\antlr-2.7.7.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.1.Final\jboss-transaction-api_1.1_spec-1.0.1.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpcore\4.3.1\httpcore-4.3.1.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpclient\4.3.1\httpclient-4.3.1.jar;D:\__ENV__\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\__ENV__\repo\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpmime\4.3.1\httpmime-4.3.1.jar;D:\__ENV__\repo\redis\clients\jedis\2.7.2\jedis-2.7.2.jar;D:\__ENV__\repo\org\apache\commons\commons-pool2\2.3\commons-pool2-2.3.jar;D:\__ENV__\repo\javax\persistence\persistence-api\1.0.2\persistence-api-1.0.2.jar;D:\__ENV__\repo\org\ansj\ansj_seg\0.9\ansj_seg-0.9.jar;D:\__ENV__\repo\org\ansj\tree_split\1.0.1\tree_split-1.0.1.jar;D:\__ENV__\repo\org\apache\commons-lang3\commons-lang3\3.1\commons-lang3-3.1.jar;D:\__ENV__\repo\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;D:\__ENV__\repo\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;D:\__ENV__\repo\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;D:\__ENV__\repo\commons-io\commons-io\2.4\commons-io-2.4.jar;D:\__ENV__\repo\commons-fileupload\commons-fileupload\1.2.2\commons-fileupload-1.2.2.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\__ENV__\repo\com\googlecode\xmemcached\xmemcached\1.4.1\xmemcached-1.4.1.jar;D:\__ENV__\repo\net\sf\json-lib\json-lib\2.4\json-lib-2.4-jdk15.jar;D:\__ENV__\repo\commons-beanutils\commons-beanutils\1.8.0\commons-beanutils-1.8.0.jar;D:\__ENV__\repo\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;D:\__ENV__\repo\net\sf\ezmorph\ezmorph\1.0.6\ezmorph-1.0.6.jar;D:\__ENV__\repo\org\mybatis\mybatis\3.1.1\mybatis-3.1.1.jar;D:\__ENV__\repo\org\mybatis\mybatis-spring\1.1.1\mybatis-spring-1.1.1.jar;D:\__ENV__\repo\junit\junit\4.11\junit-4.11.jar;D:\__ENV__\repo\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/358/1/.cp/;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/357/1/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.classLoader.application=sun.misc.Launcher$AppClassLoader@3b07d329, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=D:\Java\jdk1.8.0_40\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 60788 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -test com.it_sucre.service.HibernateServiceTest:test, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_40, java.ext.dirs=D:\Java\jdk1.8.0_40\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=D:\Java\jdk1.8.0_40\jre\lib\resources.jar;D:\Java\jdk1.8.0_40\jre\lib\rt.jar;D:\Java\jdk1.8.0_40\jre\lib\sunrsasign.jar;D:\Java\jdk1.8.0_40\jre\lib\jsse.jar;D:\Java\jdk1.8.0_40\jre\lib\jce.jar;D:\Java\jdk1.8.0_40\jre\lib\charsets.jar;D:\Java\jdk1.8.0_40\jre\lib\jfr.jar;D:\Java\jdk1.8.0_40\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}  
[DEBUG] 2015-12-01 15:10:32,280(1582) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[DEBUG] 2015-12-01 15:10:32,577(1879) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3604) –> [main] Static SQL for entity: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:10:32,577(1879) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3609) –> [main]  Version select: select id from test where id =?  
[DEBUG] 2015-12-01 15:10:32,577(1879) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3612) –> [main]  Snapshot select: select testentity_.id, testentity_.name as name2_0_ from test testentity_ where testentity_.id=?  
[DEBUG] 2015-12-01 15:10:32,592(1894) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3615) –> [main]  Insert 0: insert into test (name, id) values (?, ?)  
[DEBUG] 2015-12-01 15:10:32,592(1894) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3616) –> [main]  Update 0: update test set name=? where id=?  
[DEBUG] 2015-12-01 15:10:32,592(1894) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3617) –> [main]  Delete 0: delete from test where id=?  
[DEBUG] 2015-12-01 15:10:32,671(1973) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [NONE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:10:32,680(1982) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:10:32,681(1983) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:10:32,681(1983) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE_NOWAIT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:10:32,681(1983) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [FORCE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:10:32,681(1983) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? lock in share mode  
[DEBUG] 2015-12-01 15:10:32,681(1983) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_WRITE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:10:32,681(1983) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:10:32,681(1983) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:10:32,681(1983) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:10:32,697(1999) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:10:32,697(1999) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:10:32,775(2077) org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:62) –> [main] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@379ab47b  
[DEBUG] 2015-12-01 15:10:32,791(2093) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:75) –> [main] Registering SessionFactory: 18da74ce-90e3-4387-a193-145c06e4085d (<unnamed>)  
[DEBUG] 2015-12-01 15:10:32,791(2093) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:82) –> [main] Not binding SessionFactory to JNDI, no JNDI name configured  
[DEBUG] 2015-12-01 15:10:32,791(2093) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:492) –> [main] Instantiated session factory  
[INFO ] 2015-12-01 15:10:32,806(2108) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:182) –> [main] HHH000228: Running hbm2ddl schema update  
[INFO ] 2015-12-01 15:10:32,806(2108) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:193) –> [main] HHH000102: Fetching database metadata  
[INFO ] 2015-12-01 15:10:32,806(2108) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:205) –> [main] HHH000396: Updating schema  
[DEBUG] 2015-12-01 15:10:32,806(2108) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:10:32,806(2108) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:10:32,806(2108) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:10:32,806(2108) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:10:32,806(2108) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:10:32,806(2108) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:10:32,806(2108) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:10:32,806(2108) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:10:32,806(2108) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:10:32,806(2108) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[INFO ] 2015-12-01 15:10:32,853(2155) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] HHH000261: Table found: Test.test  
[INFO ] 2015-12-01 15:10:32,853(2155) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:67) –> [main] HHH000037: Columns: [name, id]  
[INFO ] 2015-12-01 15:10:32,853(2155) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] HHH000108: Foreign keys: []  
[INFO ] 2015-12-01 15:10:32,853(2155) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:70) –> [main] HHH000126: Indexes: [primary]  
[DEBUG] 2015-12-01 15:10:32,853(2155) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-12-01 15:10:32,853(2155) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:242) –> [main] HHH000232: Schema update complete  
[DEBUG] 2015-12-01 15:10:32,853(2155) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1073) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-12-01 15:10:32,853(2155) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1096) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-12-01 15:10:32,869(2171) org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:110) –> [main] Statistics initialized [enabled=false]  
[DEBUG] 2015-12-01 15:10:32,963(2265) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@6d3a388c  
[DEBUG] 2015-12-01 15:10:32,963(2265) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@6d3a388c  
[DEBUG] 2015-12-01 15:10:32,963(2265) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6d3a388c  
[DEBUG] 2015-12-01 15:10:32,963(2265) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@29d89d5d  
[DEBUG] 2015-12-01 15:10:32,978(2280) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@15aab8c6  
[DEBUG] 2015-12-01 15:10:32,994(2296) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@101952da  
[DEBUG] 2015-12-01 15:10:32,994(2296) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@4d02f94e  
[DEBUG] 2015-12-01 15:10:32,994(2296) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@4d02f94e  
[DEBUG] 2015-12-01 15:10:32,994(2296) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4d02f94e  
[DEBUG] 2015-12-01 15:10:32,994(2296) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@3c73951  
[DEBUG] 2015-12-01 15:10:32,994(2296) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@3c73951  
[DEBUG] 2015-12-01 15:10:32,994(2296) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3c73951  
[DEBUG] 2015-12-01 15:10:32,994(2296) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@5403f35f  
[DEBUG] 2015-12-01 15:10:32,994(2296) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@5403f35f  
[DEBUG] 2015-12-01 15:10:33,009(2311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5403f35f  
[DEBUG] 2015-12-01 15:10:33,009(2311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@6d4e5011  
[DEBUG] 2015-12-01 15:10:33,009(2311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@6d4e5011  
[DEBUG] 2015-12-01 15:10:33,009(2311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6d4e5011  
[DEBUG] 2015-12-01 15:10:33,009(2311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@16a0ee18  
[DEBUG] 2015-12-01 15:10:33,009(2311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@16a0ee18  
[DEBUG] 2015-12-01 15:10:33,009(2311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@16a0ee18  
[DEBUG] 2015-12-01 15:10:33,009(2311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@4d465b11  
[DEBUG] 2015-12-01 15:10:33,009(2311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@4d465b11  
[DEBUG] 2015-12-01 15:10:33,009(2311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4d465b11  
[DEBUG] 2015-12-01 15:10:33,009(2311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@f736069  
[DEBUG] 2015-12-01 15:10:33,025(2327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@f736069  
[DEBUG] 2015-12-01 15:10:33,025(2327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@f736069  
[DEBUG] 2015-12-01 15:10:33,025(2327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@22ef9844  
[DEBUG] 2015-12-01 15:10:33,025(2327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@22ef9844  
[DEBUG] 2015-12-01 15:10:33,025(2327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2f217633  
[DEBUG] 2015-12-01 15:10:33,025(2327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2f217633  
[DEBUG] 2015-12-01 15:10:33,025(2327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration string -> org.hibernate.type.StringType@4738a206  
[DEBUG] 2015-12-01 15:10:33,025(2327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@4738a206  
[DEBUG] 2015-12-01 15:10:33,025(2327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@543588e6  
[DEBUG] 2015-12-01 15:10:33,025(2327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2c35e847  
[DEBUG] 2015-12-01 15:10:33,025(2327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration url -> org.hibernate.type.UrlType@741a8937  
[DEBUG] 2015-12-01 15:10:33,025(2327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@741a8937  
[DEBUG] 2015-12-01 15:10:33,025(2327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration date -> org.hibernate.type.DateType@d5b810e  
[DEBUG] 2015-12-01 15:10:33,025(2327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@d5b810e  
[DEBUG] 2015-12-01 15:10:33,041(2343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration time -> org.hibernate.type.TimeType@5a56cdac  
[DEBUG] 2015-12-01 15:10:33,041(2343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5a56cdac  
[DEBUG] 2015-12-01 15:10:33,041(2343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@2ea41516  
[DEBUG] 2015-12-01 15:10:33,041(2343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2ea41516  
[DEBUG] 2015-12-01 15:10:33,041(2343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2ea41516  
[DEBUG] 2015-12-01 15:10:33,041(2343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4803b726  
[DEBUG] 2015-12-01 15:10:33,041(2343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@1de5f259  
[DEBUG] 2015-12-01 15:10:33,041(2343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1de5f259  
[DEBUG] 2015-12-01 15:10:33,041(2343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1de5f259  
[DEBUG] 2015-12-01 15:10:33,041(2343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4dbb42b7  
[DEBUG] 2015-12-01 15:10:33,041(2343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@437da279  
[DEBUG] 2015-12-01 15:10:33,041(2343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@437da279  
[DEBUG] 2015-12-01 15:10:33,041(2343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@6253c26  
[DEBUG] 2015-12-01 15:10:33,041(2343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6253c26  
[DEBUG] 2015-12-01 15:10:33,041(2343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@47e2e487  
[DEBUG] 2015-12-01 15:10:33,041(2343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@47e2e487  
[DEBUG] 2015-12-01 15:10:33,041(2343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration class -> org.hibernate.type.ClassType@4b8ee4de  
[DEBUG] 2015-12-01 15:10:33,041(2343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4b8ee4de  
[DEBUG] 2015-12-01 15:10:33,041(2343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2d710f1a  
[DEBUG] 2015-12-01 15:10:33,041(2343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2d710f1a  
[DEBUG] 2015-12-01 15:10:33,041(2343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@48aca48b  
[DEBUG] 2015-12-01 15:10:33,041(2343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@54e1c68b  
[DEBUG] 2015-12-01 15:10:33,056(2358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@272113c4  
[DEBUG] 2015-12-01 15:10:33,056(2358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@272113c4  
[DEBUG] 2015-12-01 15:10:33,056(2358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@272113c4  
[DEBUG] 2015-12-01 15:10:33,056(2358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1ed6388a  
[DEBUG] 2015-12-01 15:10:33,056(2358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1ed6388a  
[DEBUG] 2015-12-01 15:10:33,056(2358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1ed6388a  
[DEBUG] 2015-12-01 15:10:33,056(2358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration image -> org.hibernate.type.ImageType@576d5deb  
[DEBUG] 2015-12-01 15:10:33,056(2358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@6fdbe764  
[DEBUG] 2015-12-01 15:10:33,056(2358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@6fdbe764  
[DEBUG] 2015-12-01 15:10:33,056(2358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@6fdbe764  
[DEBUG] 2015-12-01 15:10:33,056(2358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7b36aa0c  
[DEBUG] 2015-12-01 15:10:33,056(2358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7b36aa0c  
[DEBUG] 2015-12-01 15:10:33,056(2358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7b36aa0c  
[DEBUG] 2015-12-01 15:10:33,056(2358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration text -> org.hibernate.type.TextType@4686afc2  
[DEBUG] 2015-12-01 15:10:33,056(2358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ntext -> org.hibernate.type.NTextType@e350b40  
[DEBUG] 2015-12-01 15:10:33,056(2358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@2e385cce  
[DEBUG] 2015-12-01 15:10:33,056(2358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2e385cce  
[DEBUG] 2015-12-01 15:10:33,056(2358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@f0c8a99  
[DEBUG] 2015-12-01 15:10:33,056(2358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@470734c3  
[DEBUG] 2015-12-01 15:10:33,056(2358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@470734c3  
[DEBUG] 2015-12-01 15:10:33,056(2358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nclob -> org.hibernate.type.NClobType@235ecd9f  
[DEBUG] 2015-12-01 15:10:33,056(2358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@235ecd9f  
[DEBUG] 2015-12-01 15:10:33,056(2358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@74d1dc36  
[DEBUG] 2015-12-01 15:10:33,056(2358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@663c9e7a  
[DEBUG] 2015-12-01 15:10:33,056(2358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@3a7442c7  
[DEBUG] 2015-12-01 15:10:33,072(2374) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@79e4c792  
[DEBUG] 2015-12-01 15:10:33,072(2374) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@79e4c792  
[DEBUG] 2015-12-01 15:10:33,072(2374) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@67af833b  
[DEBUG] 2015-12-01 15:10:33,072(2374) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@41394595  
[DEBUG] 2015-12-01 15:10:33,072(2374) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@21a5fd96  
[DEBUG] 2015-12-01 15:10:33,072(2374) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5c77053b  
[DEBUG] 2015-12-01 15:10:33,072(2374) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@287f94b1  
[DEBUG] 2015-12-01 15:10:33,072(2374) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5489c777  
[DEBUG] 2015-12-01 15:10:33,072(2374) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@62f87c44  
[DEBUG] 2015-12-01 15:10:33,072(2374) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@525d79f0  
[DEBUG] 2015-12-01 15:10:33,072(2374) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-12-01 15:10:33,072(2374) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-12-01 15:10:33,072(2374) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:10:33,072(2374) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:10:33,072(2374) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-12-01 15:10:33,072(2374) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]  
[DEBUG] 2015-12-01 15:10:33,072(2374) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-12-01 15:10:33,072(2374) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-12-01 15:10:33,072(2374) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-12-01 15:10:33,072(2374) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-12-01 15:10:33,072(2374) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-12-01 15:10:33,072(2374) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-12-01 15:10:33,072(2374) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-12-01 15:10:33,088(2390) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-12-01 15:10:33,088(2390) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]  
[DEBUG] 2015-12-01 15:10:33,134(2436) org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) –> [main] Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].  
[DEBUG] 2015-12-01 15:10:33,138(2440) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1781) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-12-01 15:10:33,201(2503) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:121) –> [main] Database ->
       name : MySQL
    version : 5.6.22
      major : 5
      minor : 6  
[DEBUG] 2015-12-01 15:10:33,202(2504) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:127) –> [main] Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[DEBUG] 2015-12-01 15:10:33,202(2504) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:133) –> [main] JDBC version : 4.0  
[INFO ] 2015-12-01 15:10:33,208(2510) org.hibernate.dialect.Dialect.<init>(Dialect.java:130) –> [main] HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-12-01 15:10:33,210(2512) org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:120) –> [main] HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException  
[DEBUG] 2015-12-01 15:10:33,211(2513) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:10:33,212(2514) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:10:33,212(2514) org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:534) –> [main] Binding entity from annotated class: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:10:33,213(2515) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}  
[DEBUG] 2015-12-01 15:10:33,214(2516) org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1118) –> [main] No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED  
[DEBUG] 2015-12-01 15:10:33,214(2516) org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:394) –> [main] Import with entity name TestEntity  
[DEBUG] 2015-12-01 15:10:33,215(2517) org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:564) –> [main] Bind entity com.it_sucre.entity.TestEntity on table test  
[DEBUG] 2015-12-01 15:10:33,217(2519) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=id, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:10:33,218(2520) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property id with lazy=false  
[DEBUG] 2015-12-01 15:10:33,219(2521) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for id  
[DEBUG] 2015-12-01 15:10:33,219(2521) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property id  
[DEBUG] 2015-12-01 15:10:33,221(2523) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=name, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:10:33,222(2524) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property name with lazy=false  
[DEBUG] 2015-12-01 15:10:33,222(2524) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for name  
[DEBUG] 2015-12-01 15:10:33,223(2525) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property name  
[DEBUG] 2015-12-01 15:10:33,224(2526) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for id  
[DEBUG] 2015-12-01 15:10:33,224(2526) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for name  
[DEBUG] 2015-12-01 15:10:33,225(2527) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:10:33,226(2528) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:10:33,226(2528) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:10:33,227(2529) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:10:33,227(2529) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:10:33,228(2530) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:10:33,228(2530) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:10:33,229(2531) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[DEBUG] 2015-12-01 15:10:33,230(2532) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:117) –> [main] Automatic flush during beforeCompletion(): disabled  
[DEBUG] 2015-12-01 15:10:33,232(2534) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:123) –> [main] Automatic session close at end of transaction: disabled  
[DEBUG] 2015-12-01 15:10:33,233(2535) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:134) –> [main] JDBC batch size: 15  
[DEBUG] 2015-12-01 15:10:33,234(2536) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:140) –> [main] JDBC batch updates for versioned data: disabled  
[DEBUG] 2015-12-01 15:10:33,235(2537) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:150) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-12-01 15:10:33,235(2537) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:156) –> [main] Wrap result sets: disabled  
[DEBUG] 2015-12-01 15:10:33,236(2538) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:162) –> [main] JDBC3 getGeneratedKeys(): enabled  
[DEBUG] 2015-12-01 15:10:33,236(2538) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:174) –> [main] multi-tenancy strategy : NONE  
[DEBUG] 2015-12-01 15:10:33,237(2539) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:180) –> [main] Connection release mode: auto  
[INFO ] 2015-12-01 15:10:33,238(2540) org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:68) –> [main] HHH000399: Using default transaction strategy (direct JDBC transactions)  
[DEBUG] 2015-12-01 15:10:33,243(2545) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Using BatchFetchStyle : LEGACY  
[DEBUG] 2015-12-01 15:10:33,248(2550) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:221) –> [main] Maximum outer join fetch depth: 2  
[DEBUG] 2015-12-01 15:10:33,249(2551) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:227) –> [main] Default batch fetch size: 1  
[DEBUG] 2015-12-01 15:10:33,249(2551) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:233) –> [main] Generate SQL with comments: disabled  
[DEBUG] 2015-12-01 15:10:33,250(2552) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:239) –> [main] Order SQL updates by primary key: disabled  
[DEBUG] 2015-12-01 15:10:33,250(2552) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Order SQL inserts for batching: disabled  
[DEBUG] 2015-12-01 15:10:33,251(2553) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Default null ordering: none  
[DEBUG] 2015-12-01 15:10:33,251(2553) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:584) –> [main] Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-12-01 15:10:33,252(2554) org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) –> [main] HHH000397: Using ASTQueryTranslatorFactory  
[DEBUG] 2015-12-01 15:10:33,253(2555) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:263) –> [main] Query language substitutions: {}  
[DEBUG] 2015-12-01 15:10:33,253(2555) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:269) –> [main] JPA-QL strict compliance: disabled  
[DEBUG] 2015-12-01 15:10:33,255(2557) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:277) –> [main] Second-level cache: enabled  
[DEBUG] 2015-12-01 15:10:33,255(2557) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:283) –> [main] Query cache: disabled  
[DEBUG] 2015-12-01 15:10:33,257(2559) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:524) –> [main] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory  
[DEBUG] 2015-12-01 15:10:33,259(2561) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:534) –> [main] org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.  
[DEBUG] 2015-12-01 15:10:33,260(2562) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:306) –> [main] Optimize cache for minimal puts: disabled  
[DEBUG] 2015-12-01 15:10:33,261(2563) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:321) –> [main] Structured second-level cache entries: disabled  
[DEBUG] 2015-12-01 15:10:33,263(2565) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:331) –> [main] Second-level cache direct-reference entries: disabled  
[DEBUG] 2015-12-01 15:10:33,264(2566) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:339) –> [main] Statistics: disabled  
[DEBUG] 2015-12-01 15:10:33,265(2567) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:345) –> [main] Deleted entity synthetic identifier rollback: disabled  
[DEBUG] 2015-12-01 15:10:33,267(2569) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:372) –> [main] Default entity-mode: pojo  
[DEBUG] 2015-12-01 15:10:33,271(2573) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:378) –> [main] Named query checking : enabled  
[DEBUG] 2015-12-01 15:10:33,272(2574) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:384) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): enabled  
[DEBUG] 2015-12-01 15:10:33,273(2575) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:402) –> [main] Allow initialization of lazy state outside session : : disabled  
[DEBUG] 2015-12-01 15:10:33,273(2575) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:412) –> [main] JTA Track by Thread: enabled  
[DEBUG] 2015-12-01 15:10:33,274(2576) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Building session factory  
[DEBUG] 2015-12-01 15:10:33,276(2578) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:280) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-12-01 15:10:33,278(2580) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:281) –> [main] Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=D:\Java\jdk1.8.0_40\jre\bin, java.vm.version=25.40-b25, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\Java\workspace\demo-chained-transactionmanager, java.runtime.version=1.8.0_40-b26, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=thread, java.endorsed.dirs=D:\Java\jdk1.8.0_40\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\奇点之~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8.1, sun.jnu.encoding=GBK, java.library.path=D:\Java\jdk1.8.0_40\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/jdk1.8.0_40/bin/../jre/bin/server;D:/Java/jdk1.8.0_40/bin/../jre/bin;D:/Java/jdk1.8.0_40/bin/../jre/lib/amd64;D:\Java\jdk1.8.0_40/bin;D:\Java\jdk1.8.0_40/lib/dt.jar;D:\Java\jdk1.8.0_40/lib/tools.jar;D:\__ENV__\apache-maven-3.2.1/bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__ENV__\apache-tomcat-7.0.57\bin;D:\__ENV__\apache-tomcat-7.0.57\jre;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\TortoiseSVN\bin;D:\__ENV__\eclipse;;., hibernate.connection.datasource=org.apache.commons.dbcp.BasicDataSource@66d23e4a, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=6.3, user.home=C:\Users\奇点之光08老师, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=奇点之光08老师, java.class.path=D:\Java\workspace\demo-chained-transactionmanager\target\test-classes;D:\Java\workspace\demo-chained-transactionmanager\target\classes;D:\__ENV__\repo\ch\qos\logback\logback-core\0.9.28\logback-core-0.9.28.jar;D:\__ENV__\repo\ch\qos\logback\logback-classic\0.9.28\logback-classic-0.9.28.jar;D:\__ENV__\repo\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;D:\__ENV__\repo\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;D:\__ENV__\repo\org\slf4j\slf4j-api\1.7.7\slf4j-api-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-jdk14\1.7.7\slf4j-jdk14-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-log4j12\1.7.7\slf4j-log4j12-1.7.7.jar;D:\__ENV__\repo\mysql\mysql-connector-java\5.1.26\mysql-connector-java-5.1.26.jar;D:\__ENV__\repo\log4j\log4j\1.2.14\log4j-1.2.14.jar;D:\__ENV__\repo\org\springframework\data\spring-data-commons\1.8.0.RELEASE\spring-data-commons-1.8.0.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\slf4j\jcl-over-slf4j\1.7.7\jcl-over-slf4j-1.7.7.jar;D:\__ENV__\repo\org\springframework\spring-context\3.2.4.RELEASE\spring-context-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-aop\3.2.4.RELEASE\spring-aop-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-expression\3.2.4.RELEASE\spring-expression-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-oxm\3.2.4.RELEASE\spring-oxm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\__ENV__\repo\org\springframework\spring-web\3.2.4.RELEASE\spring-web-3.2.4.RELEASE.jar;D:\__ENV__\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\__ENV__\repo\org\springframework\spring-webmvc\3.2.4.RELEASE\spring-webmvc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-orm\3.2.4.RELEASE\spring-orm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-jdbc\3.2.4.RELEASE\spring-jdbc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-tx\3.2.4.RELEASE\spring-tx-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-test\3.2.4.RELEASE\spring-test-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\__ENV__\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\__ENV__\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\__ENV__\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\__ENV__\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-validator\4.2.0.Final\hibernate-validator-4.2.0.Final.jar;D:\__ENV__\repo\javax\validation\validation-api\1.0.0.GA\validation-api-1.0.0.GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-core\4.2.10.Final\hibernate-core-4.2.10.Final.jar;D:\__ENV__\repo\antlr\antlr\2.7.7\antlr-2.7.7.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.1.Final\jboss-transaction-api_1.1_spec-1.0.1.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpcore\4.3.1\httpcore-4.3.1.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpclient\4.3.1\httpclient-4.3.1.jar;D:\__ENV__\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\__ENV__\repo\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpmime\4.3.1\httpmime-4.3.1.jar;D:\__ENV__\repo\redis\clients\jedis\2.7.2\jedis-2.7.2.jar;D:\__ENV__\repo\org\apache\commons\commons-pool2\2.3\commons-pool2-2.3.jar;D:\__ENV__\repo\javax\persistence\persistence-api\1.0.2\persistence-api-1.0.2.jar;D:\__ENV__\repo\org\ansj\ansj_seg\0.9\ansj_seg-0.9.jar;D:\__ENV__\repo\org\ansj\tree_split\1.0.1\tree_split-1.0.1.jar;D:\__ENV__\repo\org\apache\commons-lang3\commons-lang3\3.1\commons-lang3-3.1.jar;D:\__ENV__\repo\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;D:\__ENV__\repo\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;D:\__ENV__\repo\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;D:\__ENV__\repo\commons-io\commons-io\2.4\commons-io-2.4.jar;D:\__ENV__\repo\commons-fileupload\commons-fileupload\1.2.2\commons-fileupload-1.2.2.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\__ENV__\repo\com\googlecode\xmemcached\xmemcached\1.4.1\xmemcached-1.4.1.jar;D:\__ENV__\repo\net\sf\json-lib\json-lib\2.4\json-lib-2.4-jdk15.jar;D:\__ENV__\repo\commons-beanutils\commons-beanutils\1.8.0\commons-beanutils-1.8.0.jar;D:\__ENV__\repo\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;D:\__ENV__\repo\net\sf\ezmorph\ezmorph\1.0.6\ezmorph-1.0.6.jar;D:\__ENV__\repo\org\mybatis\mybatis\3.1.1\mybatis-3.1.1.jar;D:\__ENV__\repo\org\mybatis\mybatis-spring\1.1.1\mybatis-spring-1.1.1.jar;D:\__ENV__\repo\junit\junit\4.11\junit-4.11.jar;D:\__ENV__\repo\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/358/1/.cp/;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/357/1/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.classLoader.application=sun.misc.Launcher$AppClassLoader@3b07d329, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=D:\Java\jdk1.8.0_40\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 60788 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -test com.it_sucre.service.HibernateServiceTest:test, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_40, java.ext.dirs=D:\Java\jdk1.8.0_40\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=D:\Java\jdk1.8.0_40\jre\lib\resources.jar;D:\Java\jdk1.8.0_40\jre\lib\rt.jar;D:\Java\jdk1.8.0_40\jre\lib\sunrsasign.jar;D:\Java\jdk1.8.0_40\jre\lib\jsse.jar;D:\Java\jdk1.8.0_40\jre\lib\jce.jar;D:\Java\jdk1.8.0_40\jre\lib\charsets.jar;D:\Java\jdk1.8.0_40\jre\lib\jfr.jar;D:\Java\jdk1.8.0_40\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}  
[DEBUG] 2015-12-01 15:10:33,306(2608) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[DEBUG] 2015-12-01 15:10:33,312(2614) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3604) –> [main] Static SQL for entity: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:10:33,314(2616) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3609) –> [main]  Version select: select id from test where id =?  
[DEBUG] 2015-12-01 15:10:33,316(2618) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3612) –> [main]  Snapshot select: select testentity_.id, testentity_.name as name2_0_ from test testentity_ where testentity_.id=?  
[DEBUG] 2015-12-01 15:10:33,316(2618) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3615) –> [main]  Insert 0: insert into test (name, id) values (?, ?)  
[DEBUG] 2015-12-01 15:10:33,317(2619) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3616) –> [main]  Update 0: update test set name=? where id=?  
[DEBUG] 2015-12-01 15:10:33,317(2619) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3617) –> [main]  Delete 0: delete from test where id=?  
[DEBUG] 2015-12-01 15:10:33,318(2620) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [NONE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:10:33,320(2622) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:10:33,323(2625) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:10:33,325(2627) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE_NOWAIT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:10:33,327(2629) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [FORCE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:10:33,329(2631) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? lock in share mode  
[DEBUG] 2015-12-01 15:10:33,331(2633) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_WRITE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:10:33,332(2634) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:10:33,333(2635) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:10:33,334(2636) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:10:33,335(2637) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:10:33,336(2638) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:10:33,337(2639) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:75) –> [main] Registering SessionFactory: 4fffb588-874b-42b6-afac-d8b42b86308a (<unnamed>)  
[DEBUG] 2015-12-01 15:10:33,338(2640) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:82) –> [main] Not binding SessionFactory to JNDI, no JNDI name configured  
[DEBUG] 2015-12-01 15:10:33,338(2640) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:492) –> [main] Instantiated session factory  
[INFO ] 2015-12-01 15:10:33,339(2641) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:182) –> [main] HHH000228: Running hbm2ddl schema update  
[INFO ] 2015-12-01 15:10:33,341(2643) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:193) –> [main] HHH000102: Fetching database metadata  
[INFO ] 2015-12-01 15:10:33,342(2644) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:205) –> [main] HHH000396: Updating schema  
[DEBUG] 2015-12-01 15:10:33,343(2645) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:10:33,344(2646) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:10:33,345(2647) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:10:33,345(2647) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:10:33,346(2648) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:10:33,346(2648) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:10:33,347(2649) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:10:33,352(2654) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:10:33,353(2655) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:10:33,353(2655) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[INFO ] 2015-12-01 15:10:33,378(2680) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] HHH000261: Table found: Test.test  
[INFO ] 2015-12-01 15:10:33,379(2681) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:67) –> [main] HHH000037: Columns: [name, id]  
[INFO ] 2015-12-01 15:10:33,381(2683) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] HHH000108: Foreign keys: []  
[INFO ] 2015-12-01 15:10:33,381(2683) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:70) –> [main] HHH000126: Indexes: [primary]  
[DEBUG] 2015-12-01 15:10:33,382(2684) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-12-01 15:10:33,383(2685) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:242) –> [main] HHH000232: Schema update complete  
[DEBUG] 2015-12-01 15:10:33,383(2685) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1073) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-12-01 15:10:33,384(2686) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1096) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-12-01 15:10:33,384(2686) org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:110) –> [main] Statistics initialized [enabled=false]  
[DEBUG] 2015-12-01 15:10:33,439(2741) org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1374) –> [main] HHH000031: Closing  
[DEBUG] 2015-12-01 15:10:33,445(2747) org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1374) –> [main] HHH000031: Closing  
[DEBUG] 2015-12-01 15:11:25,318(0) org.hibernate.cfg.Configuration.<clinit>(Configuration.java:184) –> [main] Logging Provider: org.jboss.logging.Log4jLoggerProvider  
[DEBUG] 2015-12-01 15:11:25,349(31) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@48974e45  
[DEBUG] 2015-12-01 15:11:25,349(31) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@48974e45  
[DEBUG] 2015-12-01 15:11:25,349(31) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@48974e45  
[DEBUG] 2015-12-01 15:11:25,364(46) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@57af006c  
[DEBUG] 2015-12-01 15:11:25,364(46) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@446293d  
[DEBUG] 2015-12-01 15:11:25,364(46) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@37654521  
[DEBUG] 2015-12-01 15:11:25,364(46) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2  
[DEBUG] 2015-12-01 15:11:25,364(46) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2  
[DEBUG] 2015-12-01 15:11:25,380(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7ea9e1e2  
[DEBUG] 2015-12-01 15:11:25,380(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@2053d869  
[DEBUG] 2015-12-01 15:11:25,380(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@2053d869  
[DEBUG] 2015-12-01 15:11:25,380(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2053d869  
[DEBUG] 2015-12-01 15:11:25,380(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@10d307f1  
[DEBUG] 2015-12-01 15:11:25,380(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@10d307f1  
[DEBUG] 2015-12-01 15:11:25,380(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@10d307f1  
[DEBUG] 2015-12-01 15:11:25,380(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@63a12c68  
[DEBUG] 2015-12-01 15:11:25,380(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@63a12c68  
[DEBUG] 2015-12-01 15:11:25,380(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@63a12c68  
[DEBUG] 2015-12-01 15:11:25,396(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@fba92d3  
[DEBUG] 2015-12-01 15:11:25,396(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@fba92d3  
[DEBUG] 2015-12-01 15:11:25,396(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@fba92d3  
[DEBUG] 2015-12-01 15:11:25,396(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@156b88f5  
[DEBUG] 2015-12-01 15:11:25,396(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@156b88f5  
[DEBUG] 2015-12-01 15:11:25,396(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@156b88f5  
[DEBUG] 2015-12-01 15:11:25,396(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@7133da86  
[DEBUG] 2015-12-01 15:11:25,411(93) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@7133da86  
[DEBUG] 2015-12-01 15:11:25,411(93) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7133da86  
[DEBUG] 2015-12-01 15:11:25,411(93) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2fb3536e  
[DEBUG] 2015-12-01 15:11:25,411(93) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2fb3536e  
[DEBUG] 2015-12-01 15:11:25,411(93) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3b6ddd1d  
[DEBUG] 2015-12-01 15:11:25,411(93) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3b6ddd1d  
[DEBUG] 2015-12-01 15:11:25,411(93) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration string -> org.hibernate.type.StringType@1a18644  
[DEBUG] 2015-12-01 15:11:25,411(93) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@1a18644  
[DEBUG] 2015-12-01 15:11:25,411(93) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1e04fa0a  
[DEBUG] 2015-12-01 15:11:25,427(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@f5acb9d  
[DEBUG] 2015-12-01 15:11:25,427(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration url -> org.hibernate.type.UrlType@7bd4937b  
[DEBUG] 2015-12-01 15:11:25,427(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@7bd4937b  
[DEBUG] 2015-12-01 15:11:25,427(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration date -> org.hibernate.type.DateType@209da20d  
[DEBUG] 2015-12-01 15:11:25,427(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@209da20d  
[DEBUG] 2015-12-01 15:11:25,427(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration time -> org.hibernate.type.TimeType@5d0a1059  
[DEBUG] 2015-12-01 15:11:25,443(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5d0a1059  
[DEBUG] 2015-12-01 15:11:25,443(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@37d4349f  
[DEBUG] 2015-12-01 15:11:25,443(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@37d4349f  
[DEBUG] 2015-12-01 15:11:25,443(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@37d4349f  
[DEBUG] 2015-12-01 15:11:25,443(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3a44431a  
[DEBUG] 2015-12-01 15:11:25,443(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@ffaa6af  
[DEBUG] 2015-12-01 15:11:25,458(140) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@ffaa6af  
[DEBUG] 2015-12-01 15:11:25,458(140) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@ffaa6af  
[DEBUG] 2015-12-01 15:11:25,458(140) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@729d991e  
[DEBUG] 2015-12-01 15:11:25,458(140) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@66f57048  
[DEBUG] 2015-12-01 15:11:25,458(140) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@66f57048  
[DEBUG] 2015-12-01 15:11:25,458(140) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@1e1a0406  
[DEBUG] 2015-12-01 15:11:25,458(140) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1e1a0406  
[DEBUG] 2015-12-01 15:11:25,458(140) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@71a8adcf  
[DEBUG] 2015-12-01 15:11:25,458(140) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@71a8adcf  
[DEBUG] 2015-12-01 15:11:25,458(140) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration class -> org.hibernate.type.ClassType@61001b64  
[DEBUG] 2015-12-01 15:11:25,458(140) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@61001b64  
[DEBUG] 2015-12-01 15:11:25,474(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@55634720  
[DEBUG] 2015-12-01 15:11:25,474(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@55634720  
[DEBUG] 2015-12-01 15:11:25,474(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2d710f1a  
[DEBUG] 2015-12-01 15:11:25,474(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@13fd2ccd  
[DEBUG] 2015-12-01 15:11:25,474(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@53aac487  
[DEBUG] 2015-12-01 15:11:25,474(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@53aac487  
[DEBUG] 2015-12-01 15:11:25,474(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@53aac487  
[DEBUG] 2015-12-01 15:11:25,489(171) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2d52216b  
[DEBUG] 2015-12-01 15:11:25,489(171) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2d52216b  
[DEBUG] 2015-12-01 15:11:25,489(171) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2d52216b  
[DEBUG] 2015-12-01 15:11:25,489(171) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration image -> org.hibernate.type.ImageType@4f80542f  
[DEBUG] 2015-12-01 15:11:25,489(171) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@5d534f5d  
[DEBUG] 2015-12-01 15:11:25,489(171) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@5d534f5d  
[DEBUG] 2015-12-01 15:11:25,489(171) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@5d534f5d  
[DEBUG] 2015-12-01 15:11:25,536(218) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6221a451  
[DEBUG] 2015-12-01 15:11:25,536(218) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6221a451  
[DEBUG] 2015-12-01 15:11:25,536(218) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6221a451  
[DEBUG] 2015-12-01 15:11:25,536(218) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration text -> org.hibernate.type.TextType@5677323c  
[DEBUG] 2015-12-01 15:11:25,536(218) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ntext -> org.hibernate.type.NTextType@1e0b4072  
[DEBUG] 2015-12-01 15:11:25,568(250) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@2892d68  
[DEBUG] 2015-12-01 15:11:25,568(250) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2892d68  
[DEBUG] 2015-12-01 15:11:25,568(250) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2e385cce  
[DEBUG] 2015-12-01 15:11:25,583(265) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@7d0b7e3c  
[DEBUG] 2015-12-01 15:11:25,583(265) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7d0b7e3c  
[DEBUG] 2015-12-01 15:11:25,583(265) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nclob -> org.hibernate.type.NClobType@117159c0  
[DEBUG] 2015-12-01 15:11:25,583(265) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@117159c0  
[DEBUG] 2015-12-01 15:11:25,583(265) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@235ecd9f  
[DEBUG] 2015-12-01 15:11:25,599(281) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@75d3a5e0  
[DEBUG] 2015-12-01 15:11:25,599(281) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@19e4653c  
[DEBUG] 2015-12-01 15:11:25,599(281) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@742ff096  
[DEBUG] 2015-12-01 15:11:25,599(281) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@742ff096  
[DEBUG] 2015-12-01 15:11:25,599(281) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@79e4c792  
[DEBUG] 2015-12-01 15:11:25,599(281) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4c60d6e9  
[DEBUG] 2015-12-01 15:11:25,599(281) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4a83a74a  
[DEBUG] 2015-12-01 15:11:25,599(281) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4b29d1d2  
[DEBUG] 2015-12-01 15:11:25,614(296) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@28261e8e  
[DEBUG] 2015-12-01 15:11:25,614(296) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@8519cb4  
[DEBUG] 2015-12-01 15:11:25,614(296) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2d901eb0  
[DEBUG] 2015-12-01 15:11:25,614(296) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3f191845  
[INFO ] 2015-12-01 15:11:25,646(328) org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66) –> [main] HCANN000001: Hibernate Commons Annotations {4.0.4.Final}  
[INFO ] 2015-12-01 15:11:25,646(328) org.hibernate.Version.logVersion(Version.java:41) –> [main] HHH000412: Hibernate Core {4.2.10.Final}  
[INFO ] 2015-12-01 15:11:25,646(328) org.hibernate.cfg.Environment.<clinit>(Environment.java:238) –> [main] HHH000206: hibernate.properties not found  
[INFO ] 2015-12-01 15:11:25,661(343) org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:345) –> [main] HHH000021: Bytecode provider name : javassist  
[DEBUG] 2015-12-01 15:11:25,677(359) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-12-01 15:11:25,677(359) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-12-01 15:11:25,677(359) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:11:25,677(359) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:11:25,677(359) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-12-01 15:11:25,677(359) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]  
[DEBUG] 2015-12-01 15:11:25,693(375) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-12-01 15:11:25,693(375) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-12-01 15:11:25,693(375) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-12-01 15:11:25,693(375) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-12-01 15:11:25,693(375) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-12-01 15:11:25,693(375) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-12-01 15:11:25,693(375) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-12-01 15:11:25,708(390) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-12-01 15:11:25,708(390) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]  
[DEBUG] 2015-12-01 15:11:25,755(437) org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) –> [main] Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].  
[DEBUG] 2015-12-01 15:11:25,786(468) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1781) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-12-01 15:11:26,239(921) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:121) –> [main] Database ->
       name : MySQL
    version : 5.6.22
      major : 5
      minor : 6  
[DEBUG] 2015-12-01 15:11:26,241(923) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:127) –> [main] Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[DEBUG] 2015-12-01 15:11:26,242(924) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:133) –> [main] JDBC version : 4.0  
[INFO ] 2015-12-01 15:11:26,258(940) org.hibernate.dialect.Dialect.<init>(Dialect.java:130) –> [main] HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-12-01 15:11:26,274(956) org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:120) –> [main] HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException  
[DEBUG] 2015-12-01 15:11:26,321(1003) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:11:26,321(1003) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:11:26,321(1003) org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:534) –> [main] Binding entity from annotated class: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:11:26,383(1065) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}  
[DEBUG] 2015-12-01 15:11:26,383(1065) org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1118) –> [main] No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED  
[DEBUG] 2015-12-01 15:11:26,430(1112) org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:394) –> [main] Import with entity name TestEntity  
[DEBUG] 2015-12-01 15:11:26,430(1112) org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:564) –> [main] Bind entity com.it_sucre.entity.TestEntity on table test  
[DEBUG] 2015-12-01 15:11:26,492(1174) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=id, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:11:26,508(1190) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property id with lazy=false  
[DEBUG] 2015-12-01 15:11:26,524(1206) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for id  
[DEBUG] 2015-12-01 15:11:26,524(1206) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property id  
[DEBUG] 2015-12-01 15:11:26,539(1221) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=name, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:11:26,539(1221) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property name with lazy=false  
[DEBUG] 2015-12-01 15:11:26,539(1221) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for name  
[DEBUG] 2015-12-01 15:11:26,539(1221) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property name  
[DEBUG] 2015-12-01 15:11:26,539(1221) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for id  
[DEBUG] 2015-12-01 15:11:26,539(1221) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for name  
[DEBUG] 2015-12-01 15:11:26,539(1221) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:11:26,555(1237) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:11:26,555(1237) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:11:26,555(1237) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:11:26,555(1237) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:11:26,555(1237) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:11:26,555(1237) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:11:26,555(1237) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[DEBUG] 2015-12-01 15:11:26,555(1237) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:117) –> [main] Automatic flush during beforeCompletion(): disabled  
[DEBUG] 2015-12-01 15:11:26,555(1237) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:123) –> [main] Automatic session close at end of transaction: disabled  
[DEBUG] 2015-12-01 15:11:26,571(1253) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:134) –> [main] JDBC batch size: 15  
[DEBUG] 2015-12-01 15:11:26,571(1253) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:140) –> [main] JDBC batch updates for versioned data: disabled  
[DEBUG] 2015-12-01 15:11:26,571(1253) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:150) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-12-01 15:11:26,571(1253) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:156) –> [main] Wrap result sets: disabled  
[DEBUG] 2015-12-01 15:11:26,571(1253) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:162) –> [main] JDBC3 getGeneratedKeys(): enabled  
[DEBUG] 2015-12-01 15:11:26,571(1253) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:174) –> [main] multi-tenancy strategy : NONE  
[DEBUG] 2015-12-01 15:11:26,571(1253) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:180) –> [main] Connection release mode: auto  
[INFO ] 2015-12-01 15:11:26,571(1253) org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:68) –> [main] HHH000399: Using default transaction strategy (direct JDBC transactions)  
[DEBUG] 2015-12-01 15:11:26,571(1253) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Using BatchFetchStyle : LEGACY  
[DEBUG] 2015-12-01 15:11:26,571(1253) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:221) –> [main] Maximum outer join fetch depth: 2  
[DEBUG] 2015-12-01 15:11:26,571(1253) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:227) –> [main] Default batch fetch size: 1  
[DEBUG] 2015-12-01 15:11:26,571(1253) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:233) –> [main] Generate SQL with comments: disabled  
[DEBUG] 2015-12-01 15:11:26,571(1253) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:239) –> [main] Order SQL updates by primary key: disabled  
[DEBUG] 2015-12-01 15:11:26,586(1268) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Order SQL inserts for batching: disabled  
[DEBUG] 2015-12-01 15:11:26,586(1268) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Default null ordering: none  
[DEBUG] 2015-12-01 15:11:26,586(1268) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:584) –> [main] Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-12-01 15:11:26,617(1299) org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) –> [main] HHH000397: Using ASTQueryTranslatorFactory  
[DEBUG] 2015-12-01 15:11:26,617(1299) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:263) –> [main] Query language substitutions: {}  
[DEBUG] 2015-12-01 15:11:26,617(1299) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:269) –> [main] JPA-QL strict compliance: disabled  
[DEBUG] 2015-12-01 15:11:26,617(1299) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:277) –> [main] Second-level cache: enabled  
[DEBUG] 2015-12-01 15:11:26,617(1299) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:283) –> [main] Query cache: disabled  
[DEBUG] 2015-12-01 15:11:26,617(1299) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:524) –> [main] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory  
[DEBUG] 2015-12-01 15:11:26,617(1299) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:534) –> [main] org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.  
[DEBUG] 2015-12-01 15:11:26,617(1299) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:306) –> [main] Optimize cache for minimal puts: disabled  
[DEBUG] 2015-12-01 15:11:26,617(1299) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:321) –> [main] Structured second-level cache entries: disabled  
[DEBUG] 2015-12-01 15:11:26,617(1299) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:331) –> [main] Second-level cache direct-reference entries: disabled  
[DEBUG] 2015-12-01 15:11:26,617(1299) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:339) –> [main] Statistics: disabled  
[DEBUG] 2015-12-01 15:11:26,617(1299) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:345) –> [main] Deleted entity synthetic identifier rollback: disabled  
[DEBUG] 2015-12-01 15:11:26,617(1299) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:372) –> [main] Default entity-mode: pojo  
[DEBUG] 2015-12-01 15:11:26,633(1315) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:378) –> [main] Named query checking : enabled  
[DEBUG] 2015-12-01 15:11:26,633(1315) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:384) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): enabled  
[DEBUG] 2015-12-01 15:11:26,633(1315) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:402) –> [main] Allow initialization of lazy state outside session : : disabled  
[DEBUG] 2015-12-01 15:11:26,633(1315) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:412) –> [main] JTA Track by Thread: enabled  
[DEBUG] 2015-12-01 15:11:26,649(1331) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Building session factory  
[DEBUG] 2015-12-01 15:11:26,649(1331) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:280) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-12-01 15:11:26,649(1331) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:281) –> [main] Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=D:\Java\jdk1.8.0_40\jre\bin, java.vm.version=25.40-b25, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\Java\workspace\demo-chained-transactionmanager, java.runtime.version=1.8.0_40-b26, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=thread, java.endorsed.dirs=D:\Java\jdk1.8.0_40\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\奇点之~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8.1, sun.jnu.encoding=GBK, java.library.path=D:\Java\jdk1.8.0_40\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/jdk1.8.0_40/bin/../jre/bin/server;D:/Java/jdk1.8.0_40/bin/../jre/bin;D:/Java/jdk1.8.0_40/bin/../jre/lib/amd64;D:\Java\jdk1.8.0_40/bin;D:\Java\jdk1.8.0_40/lib/dt.jar;D:\Java\jdk1.8.0_40/lib/tools.jar;D:\__ENV__\apache-maven-3.2.1/bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__ENV__\apache-tomcat-7.0.57\bin;D:\__ENV__\apache-tomcat-7.0.57\jre;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\TortoiseSVN\bin;D:\__ENV__\eclipse;;., hibernate.connection.datasource=org.apache.commons.dbcp.BasicDataSource@2320fa6f, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=6.3, user.home=C:\Users\奇点之光08老师, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=奇点之光08老师, java.class.path=D:\Java\workspace\demo-chained-transactionmanager\target\test-classes;D:\Java\workspace\demo-chained-transactionmanager\target\classes;D:\__ENV__\repo\ch\qos\logback\logback-core\0.9.28\logback-core-0.9.28.jar;D:\__ENV__\repo\ch\qos\logback\logback-classic\0.9.28\logback-classic-0.9.28.jar;D:\__ENV__\repo\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;D:\__ENV__\repo\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;D:\__ENV__\repo\org\slf4j\slf4j-api\1.7.7\slf4j-api-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-jdk14\1.7.7\slf4j-jdk14-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-log4j12\1.7.7\slf4j-log4j12-1.7.7.jar;D:\__ENV__\repo\mysql\mysql-connector-java\5.1.26\mysql-connector-java-5.1.26.jar;D:\__ENV__\repo\log4j\log4j\1.2.14\log4j-1.2.14.jar;D:\__ENV__\repo\org\springframework\data\spring-data-commons\1.8.0.RELEASE\spring-data-commons-1.8.0.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\slf4j\jcl-over-slf4j\1.7.7\jcl-over-slf4j-1.7.7.jar;D:\__ENV__\repo\org\springframework\spring-context\3.2.4.RELEASE\spring-context-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-aop\3.2.4.RELEASE\spring-aop-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-expression\3.2.4.RELEASE\spring-expression-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-oxm\3.2.4.RELEASE\spring-oxm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\__ENV__\repo\org\springframework\spring-web\3.2.4.RELEASE\spring-web-3.2.4.RELEASE.jar;D:\__ENV__\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\__ENV__\repo\org\springframework\spring-webmvc\3.2.4.RELEASE\spring-webmvc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-orm\3.2.4.RELEASE\spring-orm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-jdbc\3.2.4.RELEASE\spring-jdbc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-tx\3.2.4.RELEASE\spring-tx-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-test\3.2.4.RELEASE\spring-test-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\__ENV__\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\__ENV__\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\__ENV__\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\__ENV__\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-validator\4.2.0.Final\hibernate-validator-4.2.0.Final.jar;D:\__ENV__\repo\javax\validation\validation-api\1.0.0.GA\validation-api-1.0.0.GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-core\4.2.10.Final\hibernate-core-4.2.10.Final.jar;D:\__ENV__\repo\antlr\antlr\2.7.7\antlr-2.7.7.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.1.Final\jboss-transaction-api_1.1_spec-1.0.1.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpcore\4.3.1\httpcore-4.3.1.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpclient\4.3.1\httpclient-4.3.1.jar;D:\__ENV__\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\__ENV__\repo\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpmime\4.3.1\httpmime-4.3.1.jar;D:\__ENV__\repo\redis\clients\jedis\2.7.2\jedis-2.7.2.jar;D:\__ENV__\repo\org\apache\commons\commons-pool2\2.3\commons-pool2-2.3.jar;D:\__ENV__\repo\javax\persistence\persistence-api\1.0.2\persistence-api-1.0.2.jar;D:\__ENV__\repo\org\ansj\ansj_seg\0.9\ansj_seg-0.9.jar;D:\__ENV__\repo\org\ansj\tree_split\1.0.1\tree_split-1.0.1.jar;D:\__ENV__\repo\org\apache\commons-lang3\commons-lang3\3.1\commons-lang3-3.1.jar;D:\__ENV__\repo\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;D:\__ENV__\repo\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;D:\__ENV__\repo\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;D:\__ENV__\repo\commons-io\commons-io\2.4\commons-io-2.4.jar;D:\__ENV__\repo\commons-fileupload\commons-fileupload\1.2.2\commons-fileupload-1.2.2.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\__ENV__\repo\com\googlecode\xmemcached\xmemcached\1.4.1\xmemcached-1.4.1.jar;D:\__ENV__\repo\net\sf\json-lib\json-lib\2.4\json-lib-2.4-jdk15.jar;D:\__ENV__\repo\commons-beanutils\commons-beanutils\1.8.0\commons-beanutils-1.8.0.jar;D:\__ENV__\repo\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;D:\__ENV__\repo\net\sf\ezmorph\ezmorph\1.0.6\ezmorph-1.0.6.jar;D:\__ENV__\repo\org\mybatis\mybatis\3.1.1\mybatis-3.1.1.jar;D:\__ENV__\repo\org\mybatis\mybatis-spring\1.1.1\mybatis-spring-1.1.1.jar;D:\__ENV__\repo\junit\junit\4.11\junit-4.11.jar;D:\__ENV__\repo\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/358/1/.cp/;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/357/1/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.classLoader.application=sun.misc.Launcher$AppClassLoader@3b07d329, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=D:\Java\jdk1.8.0_40\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 60798 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -test com.it_sucre.service.HibernateServiceTest:test, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_40, java.ext.dirs=D:\Java\jdk1.8.0_40\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=D:\Java\jdk1.8.0_40\jre\lib\resources.jar;D:\Java\jdk1.8.0_40\jre\lib\rt.jar;D:\Java\jdk1.8.0_40\jre\lib\sunrsasign.jar;D:\Java\jdk1.8.0_40\jre\lib\jsse.jar;D:\Java\jdk1.8.0_40\jre\lib\jce.jar;D:\Java\jdk1.8.0_40\jre\lib\charsets.jar;D:\Java\jdk1.8.0_40\jre\lib\jfr.jar;D:\Java\jdk1.8.0_40\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}  
[DEBUG] 2015-12-01 15:11:26,883(1565) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[DEBUG] 2015-12-01 15:11:27,180(1862) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3604) –> [main] Static SQL for entity: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:11:27,180(1862) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3609) –> [main]  Version select: select id from test where id =?  
[DEBUG] 2015-12-01 15:11:27,196(1878) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3612) –> [main]  Snapshot select: select testentity_.id, testentity_.name as name2_0_ from test testentity_ where testentity_.id=?  
[DEBUG] 2015-12-01 15:11:27,196(1878) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3615) –> [main]  Insert 0: insert into test (name, id) values (?, ?)  
[DEBUG] 2015-12-01 15:11:27,196(1878) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3616) –> [main]  Update 0: update test set name=? where id=?  
[DEBUG] 2015-12-01 15:11:27,196(1878) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3617) –> [main]  Delete 0: delete from test where id=?  
[DEBUG] 2015-12-01 15:11:27,227(1909) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [NONE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:11:27,227(1909) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:11:27,227(1909) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:11:27,227(1909) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE_NOWAIT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:11:27,242(1924) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [FORCE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:11:27,244(1926) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? lock in share mode  
[DEBUG] 2015-12-01 15:11:27,245(1927) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_WRITE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:11:27,245(1927) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:11:27,245(1927) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:11:27,245(1927) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:11:27,245(1927) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:11:27,245(1927) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:11:27,355(2037) org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:62) –> [main] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@16423501  
[DEBUG] 2015-12-01 15:11:27,355(2037) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:75) –> [main] Registering SessionFactory: 7a74c493-a2bf-4fc8-9517-057554dee394 (<unnamed>)  
[DEBUG] 2015-12-01 15:11:27,355(2037) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:82) –> [main] Not binding SessionFactory to JNDI, no JNDI name configured  
[DEBUG] 2015-12-01 15:11:27,355(2037) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:492) –> [main] Instantiated session factory  
[INFO ] 2015-12-01 15:11:27,370(2052) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:182) –> [main] HHH000228: Running hbm2ddl schema update  
[INFO ] 2015-12-01 15:11:27,370(2052) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:193) –> [main] HHH000102: Fetching database metadata  
[INFO ] 2015-12-01 15:11:27,370(2052) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:205) –> [main] HHH000396: Updating schema  
[DEBUG] 2015-12-01 15:11:27,370(2052) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:11:27,370(2052) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:11:27,386(2068) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:11:27,386(2068) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:11:27,386(2068) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:11:27,386(2068) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:11:27,386(2068) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:11:27,386(2068) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:11:27,386(2068) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:11:27,386(2068) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[INFO ] 2015-12-01 15:11:27,433(2115) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] HHH000261: Table found: Test.test  
[INFO ] 2015-12-01 15:11:27,433(2115) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:67) –> [main] HHH000037: Columns: [name, id]  
[INFO ] 2015-12-01 15:11:27,433(2115) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] HHH000108: Foreign keys: []  
[INFO ] 2015-12-01 15:11:27,433(2115) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:70) –> [main] HHH000126: Indexes: [primary]  
[DEBUG] 2015-12-01 15:11:27,433(2115) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-12-01 15:11:27,433(2115) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:242) –> [main] HHH000232: Schema update complete  
[DEBUG] 2015-12-01 15:11:27,433(2115) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1073) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-12-01 15:11:27,433(2115) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1096) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-12-01 15:11:27,449(2131) org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:110) –> [main] Statistics initialized [enabled=false]  
[DEBUG] 2015-12-01 15:11:27,542(2224) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@48974e45  
[DEBUG] 2015-12-01 15:11:27,542(2224) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@48974e45  
[DEBUG] 2015-12-01 15:11:27,542(2224) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@48974e45  
[DEBUG] 2015-12-01 15:11:27,542(2224) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@57af006c  
[DEBUG] 2015-12-01 15:11:27,542(2224) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@446293d  
[DEBUG] 2015-12-01 15:11:27,542(2224) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@37654521  
[DEBUG] 2015-12-01 15:11:27,542(2224) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2  
[DEBUG] 2015-12-01 15:11:27,542(2224) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2  
[DEBUG] 2015-12-01 15:11:27,542(2224) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7ea9e1e2  
[DEBUG] 2015-12-01 15:11:27,542(2224) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@2053d869  
[DEBUG] 2015-12-01 15:11:27,542(2224) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@2053d869  
[DEBUG] 2015-12-01 15:11:27,542(2224) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2053d869  
[DEBUG] 2015-12-01 15:11:27,542(2224) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@10d307f1  
[DEBUG] 2015-12-01 15:11:27,542(2224) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@10d307f1  
[DEBUG] 2015-12-01 15:11:27,542(2224) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@10d307f1  
[DEBUG] 2015-12-01 15:11:27,542(2224) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@63a12c68  
[DEBUG] 2015-12-01 15:11:27,542(2224) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@63a12c68  
[DEBUG] 2015-12-01 15:11:27,558(2240) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@63a12c68  
[DEBUG] 2015-12-01 15:11:27,558(2240) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@fba92d3  
[DEBUG] 2015-12-01 15:11:27,558(2240) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@fba92d3  
[DEBUG] 2015-12-01 15:11:27,558(2240) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@fba92d3  
[DEBUG] 2015-12-01 15:11:27,558(2240) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@156b88f5  
[DEBUG] 2015-12-01 15:11:27,558(2240) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@156b88f5  
[DEBUG] 2015-12-01 15:11:27,558(2240) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@156b88f5  
[DEBUG] 2015-12-01 15:11:27,558(2240) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@7133da86  
[DEBUG] 2015-12-01 15:11:27,558(2240) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@7133da86  
[DEBUG] 2015-12-01 15:11:27,558(2240) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7133da86  
[DEBUG] 2015-12-01 15:11:27,558(2240) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2fb3536e  
[DEBUG] 2015-12-01 15:11:27,558(2240) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2fb3536e  
[DEBUG] 2015-12-01 15:11:27,558(2240) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3b6ddd1d  
[DEBUG] 2015-12-01 15:11:27,558(2240) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3b6ddd1d  
[DEBUG] 2015-12-01 15:11:27,558(2240) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration string -> org.hibernate.type.StringType@1a18644  
[DEBUG] 2015-12-01 15:11:27,574(2256) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@1a18644  
[DEBUG] 2015-12-01 15:11:27,574(2256) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1e04fa0a  
[DEBUG] 2015-12-01 15:11:27,574(2256) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@f5acb9d  
[DEBUG] 2015-12-01 15:11:27,574(2256) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration url -> org.hibernate.type.UrlType@7bd4937b  
[DEBUG] 2015-12-01 15:11:27,574(2256) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@7bd4937b  
[DEBUG] 2015-12-01 15:11:27,574(2256) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration date -> org.hibernate.type.DateType@209da20d  
[DEBUG] 2015-12-01 15:11:27,574(2256) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@209da20d  
[DEBUG] 2015-12-01 15:11:27,574(2256) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration time -> org.hibernate.type.TimeType@5d0a1059  
[DEBUG] 2015-12-01 15:11:27,574(2256) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5d0a1059  
[DEBUG] 2015-12-01 15:11:27,574(2256) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@37d4349f  
[DEBUG] 2015-12-01 15:11:27,574(2256) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@37d4349f  
[DEBUG] 2015-12-01 15:11:27,574(2256) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@37d4349f  
[DEBUG] 2015-12-01 15:11:27,574(2256) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3a44431a  
[DEBUG] 2015-12-01 15:11:27,574(2256) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@ffaa6af  
[DEBUG] 2015-12-01 15:11:27,574(2256) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@ffaa6af  
[DEBUG] 2015-12-01 15:11:27,574(2256) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@ffaa6af  
[DEBUG] 2015-12-01 15:11:27,574(2256) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@729d991e  
[DEBUG] 2015-12-01 15:11:27,574(2256) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@66f57048  
[DEBUG] 2015-12-01 15:11:27,574(2256) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@66f57048  
[DEBUG] 2015-12-01 15:11:27,574(2256) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@1e1a0406  
[DEBUG] 2015-12-01 15:11:27,589(2271) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1e1a0406  
[DEBUG] 2015-12-01 15:11:27,589(2271) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@71a8adcf  
[DEBUG] 2015-12-01 15:11:27,589(2271) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@71a8adcf  
[DEBUG] 2015-12-01 15:11:27,589(2271) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration class -> org.hibernate.type.ClassType@61001b64  
[DEBUG] 2015-12-01 15:11:27,589(2271) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@61001b64  
[DEBUG] 2015-12-01 15:11:27,589(2271) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@55634720  
[DEBUG] 2015-12-01 15:11:27,589(2271) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@55634720  
[DEBUG] 2015-12-01 15:11:27,589(2271) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2d710f1a  
[DEBUG] 2015-12-01 15:11:27,589(2271) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@13fd2ccd  
[DEBUG] 2015-12-01 15:11:27,589(2271) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@53aac487  
[DEBUG] 2015-12-01 15:11:27,589(2271) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@53aac487  
[DEBUG] 2015-12-01 15:11:27,589(2271) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@53aac487  
[DEBUG] 2015-12-01 15:11:27,589(2271) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2d52216b  
[DEBUG] 2015-12-01 15:11:27,605(2287) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2d52216b  
[DEBUG] 2015-12-01 15:11:27,605(2287) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2d52216b  
[DEBUG] 2015-12-01 15:11:27,605(2287) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration image -> org.hibernate.type.ImageType@4f80542f  
[DEBUG] 2015-12-01 15:11:27,605(2287) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@5d534f5d  
[DEBUG] 2015-12-01 15:11:27,605(2287) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@5d534f5d  
[DEBUG] 2015-12-01 15:11:27,605(2287) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@5d534f5d  
[DEBUG] 2015-12-01 15:11:27,605(2287) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6221a451  
[DEBUG] 2015-12-01 15:11:27,620(2302) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6221a451  
[DEBUG] 2015-12-01 15:11:27,620(2302) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6221a451  
[DEBUG] 2015-12-01 15:11:27,620(2302) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration text -> org.hibernate.type.TextType@5677323c  
[DEBUG] 2015-12-01 15:11:27,620(2302) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ntext -> org.hibernate.type.NTextType@1e0b4072  
[DEBUG] 2015-12-01 15:11:27,620(2302) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@2892d68  
[DEBUG] 2015-12-01 15:11:27,620(2302) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2892d68  
[DEBUG] 2015-12-01 15:11:27,620(2302) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2e385cce  
[DEBUG] 2015-12-01 15:11:27,620(2302) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@7d0b7e3c  
[DEBUG] 2015-12-01 15:11:27,620(2302) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7d0b7e3c  
[DEBUG] 2015-12-01 15:11:27,620(2302) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nclob -> org.hibernate.type.NClobType@117159c0  
[DEBUG] 2015-12-01 15:11:27,620(2302) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@117159c0  
[DEBUG] 2015-12-01 15:11:27,620(2302) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@235ecd9f  
[DEBUG] 2015-12-01 15:11:27,620(2302) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@75d3a5e0  
[DEBUG] 2015-12-01 15:11:27,636(2318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@19e4653c  
[DEBUG] 2015-12-01 15:11:27,636(2318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@742ff096  
[DEBUG] 2015-12-01 15:11:27,636(2318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@742ff096  
[DEBUG] 2015-12-01 15:11:27,636(2318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4a9419d7  
[DEBUG] 2015-12-01 15:11:27,636(2318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2e8ab815  
[DEBUG] 2015-12-01 15:11:27,636(2318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@d1f74b8  
[DEBUG] 2015-12-01 15:11:27,636(2318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3a0807b7  
[DEBUG] 2015-12-01 15:11:27,636(2318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5769e7ae  
[DEBUG] 2015-12-01 15:11:27,636(2318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@26b894bd  
[DEBUG] 2015-12-01 15:11:27,636(2318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@30b34287  
[DEBUG] 2015-12-01 15:11:27,636(2318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3676ac27  
[DEBUG] 2015-12-01 15:11:27,636(2318) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-12-01 15:11:27,636(2318) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-12-01 15:11:27,636(2318) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:11:27,636(2318) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:11:27,636(2318) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-12-01 15:11:27,636(2318) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]  
[DEBUG] 2015-12-01 15:11:27,636(2318) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-12-01 15:11:27,636(2318) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-12-01 15:11:27,636(2318) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-12-01 15:11:27,652(2334) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-12-01 15:11:27,652(2334) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-12-01 15:11:27,652(2334) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-12-01 15:11:27,652(2334) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-12-01 15:11:27,652(2334) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-12-01 15:11:27,652(2334) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]  
[DEBUG] 2015-12-01 15:11:27,667(2349) org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) –> [main] Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].  
[DEBUG] 2015-12-01 15:11:27,683(2365) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1781) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-12-01 15:11:27,745(2427) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:121) –> [main] Database ->
       name : MySQL
    version : 5.6.22
      major : 5
      minor : 6  
[DEBUG] 2015-12-01 15:11:27,745(2427) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:127) –> [main] Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[DEBUG] 2015-12-01 15:11:27,745(2427) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:133) –> [main] JDBC version : 4.0  
[INFO ] 2015-12-01 15:11:27,761(2443) org.hibernate.dialect.Dialect.<init>(Dialect.java:130) –> [main] HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-12-01 15:11:27,761(2443) org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:120) –> [main] HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException  
[DEBUG] 2015-12-01 15:11:27,761(2443) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:11:27,761(2443) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:11:27,761(2443) org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:534) –> [main] Binding entity from annotated class: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:11:27,761(2443) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}  
[DEBUG] 2015-12-01 15:11:27,761(2443) org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1118) –> [main] No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED  
[DEBUG] 2015-12-01 15:11:27,761(2443) org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:394) –> [main] Import with entity name TestEntity  
[DEBUG] 2015-12-01 15:11:27,761(2443) org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:564) –> [main] Bind entity com.it_sucre.entity.TestEntity on table test  
[DEBUG] 2015-12-01 15:11:27,777(2459) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=id, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:11:27,777(2459) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property id with lazy=false  
[DEBUG] 2015-12-01 15:11:27,777(2459) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for id  
[DEBUG] 2015-12-01 15:11:27,777(2459) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property id  
[DEBUG] 2015-12-01 15:11:27,777(2459) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=name, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:11:27,777(2459) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property name with lazy=false  
[DEBUG] 2015-12-01 15:11:27,777(2459) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for name  
[DEBUG] 2015-12-01 15:11:27,777(2459) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property name  
[DEBUG] 2015-12-01 15:11:27,777(2459) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for id  
[DEBUG] 2015-12-01 15:11:27,777(2459) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for name  
[DEBUG] 2015-12-01 15:11:27,777(2459) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:11:27,777(2459) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:11:27,777(2459) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:11:27,777(2459) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:11:27,777(2459) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:11:27,777(2459) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:11:27,777(2459) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:11:27,777(2459) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[DEBUG] 2015-12-01 15:11:27,792(2474) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:117) –> [main] Automatic flush during beforeCompletion(): disabled  
[DEBUG] 2015-12-01 15:11:27,792(2474) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:123) –> [main] Automatic session close at end of transaction: disabled  
[DEBUG] 2015-12-01 15:11:27,792(2474) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:134) –> [main] JDBC batch size: 15  
[DEBUG] 2015-12-01 15:11:27,792(2474) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:140) –> [main] JDBC batch updates for versioned data: disabled  
[DEBUG] 2015-12-01 15:11:27,792(2474) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:150) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-12-01 15:11:27,792(2474) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:156) –> [main] Wrap result sets: disabled  
[DEBUG] 2015-12-01 15:11:27,792(2474) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:162) –> [main] JDBC3 getGeneratedKeys(): enabled  
[DEBUG] 2015-12-01 15:11:27,792(2474) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:174) –> [main] multi-tenancy strategy : NONE  
[DEBUG] 2015-12-01 15:11:27,792(2474) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:180) –> [main] Connection release mode: auto  
[INFO ] 2015-12-01 15:11:27,792(2474) org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:68) –> [main] HHH000399: Using default transaction strategy (direct JDBC transactions)  
[DEBUG] 2015-12-01 15:11:27,792(2474) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Using BatchFetchStyle : LEGACY  
[DEBUG] 2015-12-01 15:11:27,792(2474) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:221) –> [main] Maximum outer join fetch depth: 2  
[DEBUG] 2015-12-01 15:11:27,808(2490) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:227) –> [main] Default batch fetch size: 1  
[DEBUG] 2015-12-01 15:11:27,808(2490) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:233) –> [main] Generate SQL with comments: disabled  
[DEBUG] 2015-12-01 15:11:27,808(2490) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:239) –> [main] Order SQL updates by primary key: disabled  
[DEBUG] 2015-12-01 15:11:27,808(2490) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Order SQL inserts for batching: disabled  
[DEBUG] 2015-12-01 15:11:27,808(2490) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Default null ordering: none  
[DEBUG] 2015-12-01 15:11:27,808(2490) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:584) –> [main] Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-12-01 15:11:27,808(2490) org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) –> [main] HHH000397: Using ASTQueryTranslatorFactory  
[DEBUG] 2015-12-01 15:11:27,808(2490) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:263) –> [main] Query language substitutions: {}  
[DEBUG] 2015-12-01 15:11:27,808(2490) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:269) –> [main] JPA-QL strict compliance: disabled  
[DEBUG] 2015-12-01 15:11:27,808(2490) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:277) –> [main] Second-level cache: enabled  
[DEBUG] 2015-12-01 15:11:27,808(2490) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:283) –> [main] Query cache: disabled  
[DEBUG] 2015-12-01 15:11:27,808(2490) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:524) –> [main] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory  
[DEBUG] 2015-12-01 15:11:27,808(2490) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:534) –> [main] org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.  
[DEBUG] 2015-12-01 15:11:27,808(2490) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:306) –> [main] Optimize cache for minimal puts: disabled  
[DEBUG] 2015-12-01 15:11:27,808(2490) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:321) –> [main] Structured second-level cache entries: disabled  
[DEBUG] 2015-12-01 15:11:27,808(2490) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:331) –> [main] Second-level cache direct-reference entries: disabled  
[DEBUG] 2015-12-01 15:11:27,824(2506) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:339) –> [main] Statistics: disabled  
[DEBUG] 2015-12-01 15:11:27,824(2506) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:345) –> [main] Deleted entity synthetic identifier rollback: disabled  
[DEBUG] 2015-12-01 15:11:27,824(2506) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:372) –> [main] Default entity-mode: pojo  
[DEBUG] 2015-12-01 15:11:27,824(2506) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:378) –> [main] Named query checking : enabled  
[DEBUG] 2015-12-01 15:11:27,824(2506) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:384) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): enabled  
[DEBUG] 2015-12-01 15:11:27,824(2506) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:402) –> [main] Allow initialization of lazy state outside session : : disabled  
[DEBUG] 2015-12-01 15:11:27,824(2506) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:412) –> [main] JTA Track by Thread: enabled  
[DEBUG] 2015-12-01 15:11:27,824(2506) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Building session factory  
[DEBUG] 2015-12-01 15:11:27,824(2506) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:280) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-12-01 15:11:27,824(2506) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:281) –> [main] Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=D:\Java\jdk1.8.0_40\jre\bin, java.vm.version=25.40-b25, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\Java\workspace\demo-chained-transactionmanager, java.runtime.version=1.8.0_40-b26, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=thread, java.endorsed.dirs=D:\Java\jdk1.8.0_40\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\奇点之~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8.1, sun.jnu.encoding=GBK, java.library.path=D:\Java\jdk1.8.0_40\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/jdk1.8.0_40/bin/../jre/bin/server;D:/Java/jdk1.8.0_40/bin/../jre/bin;D:/Java/jdk1.8.0_40/bin/../jre/lib/amd64;D:\Java\jdk1.8.0_40/bin;D:\Java\jdk1.8.0_40/lib/dt.jar;D:\Java\jdk1.8.0_40/lib/tools.jar;D:\__ENV__\apache-maven-3.2.1/bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__ENV__\apache-tomcat-7.0.57\bin;D:\__ENV__\apache-tomcat-7.0.57\jre;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\TortoiseSVN\bin;D:\__ENV__\eclipse;;., hibernate.connection.datasource=org.apache.commons.dbcp.BasicDataSource@51a06cbe, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=6.3, user.home=C:\Users\奇点之光08老师, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=奇点之光08老师, java.class.path=D:\Java\workspace\demo-chained-transactionmanager\target\test-classes;D:\Java\workspace\demo-chained-transactionmanager\target\classes;D:\__ENV__\repo\ch\qos\logback\logback-core\0.9.28\logback-core-0.9.28.jar;D:\__ENV__\repo\ch\qos\logback\logback-classic\0.9.28\logback-classic-0.9.28.jar;D:\__ENV__\repo\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;D:\__ENV__\repo\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;D:\__ENV__\repo\org\slf4j\slf4j-api\1.7.7\slf4j-api-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-jdk14\1.7.7\slf4j-jdk14-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-log4j12\1.7.7\slf4j-log4j12-1.7.7.jar;D:\__ENV__\repo\mysql\mysql-connector-java\5.1.26\mysql-connector-java-5.1.26.jar;D:\__ENV__\repo\log4j\log4j\1.2.14\log4j-1.2.14.jar;D:\__ENV__\repo\org\springframework\data\spring-data-commons\1.8.0.RELEASE\spring-data-commons-1.8.0.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\slf4j\jcl-over-slf4j\1.7.7\jcl-over-slf4j-1.7.7.jar;D:\__ENV__\repo\org\springframework\spring-context\3.2.4.RELEASE\spring-context-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-aop\3.2.4.RELEASE\spring-aop-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-expression\3.2.4.RELEASE\spring-expression-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-oxm\3.2.4.RELEASE\spring-oxm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\__ENV__\repo\org\springframework\spring-web\3.2.4.RELEASE\spring-web-3.2.4.RELEASE.jar;D:\__ENV__\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\__ENV__\repo\org\springframework\spring-webmvc\3.2.4.RELEASE\spring-webmvc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-orm\3.2.4.RELEASE\spring-orm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-jdbc\3.2.4.RELEASE\spring-jdbc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-tx\3.2.4.RELEASE\spring-tx-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-test\3.2.4.RELEASE\spring-test-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\__ENV__\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\__ENV__\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\__ENV__\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\__ENV__\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-validator\4.2.0.Final\hibernate-validator-4.2.0.Final.jar;D:\__ENV__\repo\javax\validation\validation-api\1.0.0.GA\validation-api-1.0.0.GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-core\4.2.10.Final\hibernate-core-4.2.10.Final.jar;D:\__ENV__\repo\antlr\antlr\2.7.7\antlr-2.7.7.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.1.Final\jboss-transaction-api_1.1_spec-1.0.1.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpcore\4.3.1\httpcore-4.3.1.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpclient\4.3.1\httpclient-4.3.1.jar;D:\__ENV__\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\__ENV__\repo\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpmime\4.3.1\httpmime-4.3.1.jar;D:\__ENV__\repo\redis\clients\jedis\2.7.2\jedis-2.7.2.jar;D:\__ENV__\repo\org\apache\commons\commons-pool2\2.3\commons-pool2-2.3.jar;D:\__ENV__\repo\javax\persistence\persistence-api\1.0.2\persistence-api-1.0.2.jar;D:\__ENV__\repo\org\ansj\ansj_seg\0.9\ansj_seg-0.9.jar;D:\__ENV__\repo\org\ansj\tree_split\1.0.1\tree_split-1.0.1.jar;D:\__ENV__\repo\org\apache\commons-lang3\commons-lang3\3.1\commons-lang3-3.1.jar;D:\__ENV__\repo\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;D:\__ENV__\repo\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;D:\__ENV__\repo\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;D:\__ENV__\repo\commons-io\commons-io\2.4\commons-io-2.4.jar;D:\__ENV__\repo\commons-fileupload\commons-fileupload\1.2.2\commons-fileupload-1.2.2.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\__ENV__\repo\com\googlecode\xmemcached\xmemcached\1.4.1\xmemcached-1.4.1.jar;D:\__ENV__\repo\net\sf\json-lib\json-lib\2.4\json-lib-2.4-jdk15.jar;D:\__ENV__\repo\commons-beanutils\commons-beanutils\1.8.0\commons-beanutils-1.8.0.jar;D:\__ENV__\repo\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;D:\__ENV__\repo\net\sf\ezmorph\ezmorph\1.0.6\ezmorph-1.0.6.jar;D:\__ENV__\repo\org\mybatis\mybatis\3.1.1\mybatis-3.1.1.jar;D:\__ENV__\repo\org\mybatis\mybatis-spring\1.1.1\mybatis-spring-1.1.1.jar;D:\__ENV__\repo\junit\junit\4.11\junit-4.11.jar;D:\__ENV__\repo\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/358/1/.cp/;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/357/1/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.classLoader.application=sun.misc.Launcher$AppClassLoader@3b07d329, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=D:\Java\jdk1.8.0_40\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 60798 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -test com.it_sucre.service.HibernateServiceTest:test, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_40, java.ext.dirs=D:\Java\jdk1.8.0_40\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=D:\Java\jdk1.8.0_40\jre\lib\resources.jar;D:\Java\jdk1.8.0_40\jre\lib\rt.jar;D:\Java\jdk1.8.0_40\jre\lib\sunrsasign.jar;D:\Java\jdk1.8.0_40\jre\lib\jsse.jar;D:\Java\jdk1.8.0_40\jre\lib\jce.jar;D:\Java\jdk1.8.0_40\jre\lib\charsets.jar;D:\Java\jdk1.8.0_40\jre\lib\jfr.jar;D:\Java\jdk1.8.0_40\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}  
[DEBUG] 2015-12-01 15:11:27,855(2537) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[DEBUG] 2015-12-01 15:11:27,855(2537) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3604) –> [main] Static SQL for entity: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:11:27,855(2537) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3609) –> [main]  Version select: select id from test where id =?  
[DEBUG] 2015-12-01 15:11:27,855(2537) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3612) –> [main]  Snapshot select: select testentity_.id, testentity_.name as name2_0_ from test testentity_ where testentity_.id=?  
[DEBUG] 2015-12-01 15:11:27,855(2537) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3615) –> [main]  Insert 0: insert into test (name, id) values (?, ?)  
[DEBUG] 2015-12-01 15:11:27,870(2552) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3616) –> [main]  Update 0: update test set name=? where id=?  
[DEBUG] 2015-12-01 15:11:27,870(2552) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3617) –> [main]  Delete 0: delete from test where id=?  
[DEBUG] 2015-12-01 15:11:27,870(2552) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [NONE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:11:27,870(2552) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:11:27,870(2552) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:11:27,870(2552) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE_NOWAIT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:11:27,870(2552) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [FORCE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:11:27,870(2552) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? lock in share mode  
[DEBUG] 2015-12-01 15:11:27,870(2552) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_WRITE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:11:27,870(2552) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:11:27,870(2552) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:11:27,870(2552) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:11:27,870(2552) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:11:27,870(2552) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:11:27,870(2552) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:75) –> [main] Registering SessionFactory: 04cd4937-2764-4786-a5f2-ce22e038aeff (<unnamed>)  
[DEBUG] 2015-12-01 15:11:27,870(2552) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:82) –> [main] Not binding SessionFactory to JNDI, no JNDI name configured  
[DEBUG] 2015-12-01 15:11:27,870(2552) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:492) –> [main] Instantiated session factory  
[INFO ] 2015-12-01 15:11:27,870(2552) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:182) –> [main] HHH000228: Running hbm2ddl schema update  
[INFO ] 2015-12-01 15:11:27,870(2552) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:193) –> [main] HHH000102: Fetching database metadata  
[INFO ] 2015-12-01 15:11:27,870(2552) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:205) –> [main] HHH000396: Updating schema  
[DEBUG] 2015-12-01 15:11:27,870(2552) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:11:27,870(2552) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:11:27,870(2552) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:11:27,886(2568) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:11:27,886(2568) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:11:27,886(2568) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:11:27,886(2568) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:11:27,886(2568) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:11:27,886(2568) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:11:27,886(2568) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[INFO ] 2015-12-01 15:11:27,917(2599) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] HHH000261: Table found: Test.test  
[INFO ] 2015-12-01 15:11:27,917(2599) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:67) –> [main] HHH000037: Columns: [name, id]  
[INFO ] 2015-12-01 15:11:27,917(2599) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] HHH000108: Foreign keys: []  
[INFO ] 2015-12-01 15:11:27,917(2599) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:70) –> [main] HHH000126: Indexes: [primary]  
[DEBUG] 2015-12-01 15:11:27,917(2599) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-12-01 15:11:27,917(2599) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:242) –> [main] HHH000232: Schema update complete  
[DEBUG] 2015-12-01 15:11:27,917(2599) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1073) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-12-01 15:11:27,917(2599) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1096) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-12-01 15:11:27,917(2599) org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:110) –> [main] Statistics initialized [enabled=false]  
[DEBUG] 2015-12-01 15:11:28,476(3158) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:212) –> [main] Obtaining JDBC connection  
[DEBUG] 2015-12-01 15:11:28,492(3174) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:218) –> [main] Obtained JDBC connection  
[DEBUG] 2015-12-01 15:11:28,507(3189) org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) –> [main] begin  
[DEBUG] 2015-12-01 15:11:28,507(3189) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) –> [main] initial autocommit status: true  
[DEBUG] 2015-12-01 15:11:28,507(3189) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) –> [main] disabling autocommit  
[DEBUG] 2015-12-01 15:11:28,507(3189) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:212) –> [main] Obtaining JDBC connection  
[DEBUG] 2015-12-01 15:11:28,507(3189) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:218) –> [main] Obtained JDBC connection  
[DEBUG] 2015-12-01 15:11:28,507(3189) org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) –> [main] begin  
[DEBUG] 2015-12-01 15:11:28,507(3189) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) –> [main] initial autocommit status: true  
[DEBUG] 2015-12-01 15:11:28,507(3189) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) –> [main] disabling autocommit  
[DEBUG] 2015-12-01 15:11:28,632(3314) org.hibernate.engine.transaction.spi.AbstractTransactionImpl.rollback(AbstractTransactionImpl.java:203) –> [main] rolling back  
[DEBUG] 2015-12-01 15:11:28,632(3314) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doRollback(JdbcTransaction.java:164) –> [main] rolled JDBC Connection  
[DEBUG] 2015-12-01 15:11:28,632(3314) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) –> [main] re-enabling autocommit  
[DEBUG] 2015-12-01 15:11:28,648(3330) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:232) –> [main] Releasing JDBC connection  
[DEBUG] 2015-12-01 15:11:28,648(3330) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:250) –> [main] Released JDBC connection  
[DEBUG] 2015-12-01 15:11:28,648(3330) org.hibernate.engine.transaction.spi.AbstractTransactionImpl.rollback(AbstractTransactionImpl.java:203) –> [main] rolling back  
[DEBUG] 2015-12-01 15:11:28,648(3330) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doRollback(JdbcTransaction.java:164) –> [main] rolled JDBC Connection  
[DEBUG] 2015-12-01 15:11:28,648(3330) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) –> [main] re-enabling autocommit  
[DEBUG] 2015-12-01 15:11:28,648(3330) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:232) –> [main] Releasing JDBC connection  
[DEBUG] 2015-12-01 15:11:28,648(3330) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:250) –> [main] Released JDBC connection  
[DEBUG] 2015-12-01 15:11:28,726(3408) org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1374) –> [Thread-2] HHH000031: Closing  
[DEBUG] 2015-12-01 15:11:28,726(3408) org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1374) –> [Thread-2] HHH000031: Closing  
[DEBUG] 2015-12-01 15:12:40,540(0) org.hibernate.cfg.Configuration.<clinit>(Configuration.java:184) –> [main] Logging Provider: org.jboss.logging.Log4jLoggerProvider  
[DEBUG] 2015-12-01 15:12:40,571(31) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@48974e45  
[DEBUG] 2015-12-01 15:12:40,587(47) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@48974e45  
[DEBUG] 2015-12-01 15:12:40,587(47) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@48974e45  
[DEBUG] 2015-12-01 15:12:40,587(47) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@57af006c  
[DEBUG] 2015-12-01 15:12:40,587(47) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@446293d  
[DEBUG] 2015-12-01 15:12:40,587(47) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@37654521  
[DEBUG] 2015-12-01 15:12:40,603(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2  
[DEBUG] 2015-12-01 15:12:40,603(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2  
[DEBUG] 2015-12-01 15:12:40,603(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7ea9e1e2  
[DEBUG] 2015-12-01 15:12:40,603(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@2053d869  
[DEBUG] 2015-12-01 15:12:40,603(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@2053d869  
[DEBUG] 2015-12-01 15:12:40,603(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2053d869  
[DEBUG] 2015-12-01 15:12:40,603(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@10d307f1  
[DEBUG] 2015-12-01 15:12:40,603(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@10d307f1  
[DEBUG] 2015-12-01 15:12:40,603(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@10d307f1  
[DEBUG] 2015-12-01 15:12:40,603(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@63a12c68  
[DEBUG] 2015-12-01 15:12:40,603(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@63a12c68  
[DEBUG] 2015-12-01 15:12:40,618(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@63a12c68  
[DEBUG] 2015-12-01 15:12:40,618(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@fba92d3  
[DEBUG] 2015-12-01 15:12:40,618(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@fba92d3  
[DEBUG] 2015-12-01 15:12:40,618(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@fba92d3  
[DEBUG] 2015-12-01 15:12:40,618(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@156b88f5  
[DEBUG] 2015-12-01 15:12:40,618(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@156b88f5  
[DEBUG] 2015-12-01 15:12:40,618(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@156b88f5  
[DEBUG] 2015-12-01 15:12:40,618(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@7133da86  
[DEBUG] 2015-12-01 15:12:40,618(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@7133da86  
[DEBUG] 2015-12-01 15:12:40,634(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7133da86  
[DEBUG] 2015-12-01 15:12:40,634(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2fb3536e  
[DEBUG] 2015-12-01 15:12:40,634(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2fb3536e  
[DEBUG] 2015-12-01 15:12:40,634(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3b6ddd1d  
[DEBUG] 2015-12-01 15:12:40,634(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3b6ddd1d  
[DEBUG] 2015-12-01 15:12:40,634(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration string -> org.hibernate.type.StringType@1a18644  
[DEBUG] 2015-12-01 15:12:40,634(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@1a18644  
[DEBUG] 2015-12-01 15:12:40,650(110) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1e04fa0a  
[DEBUG] 2015-12-01 15:12:40,650(110) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@f5acb9d  
[DEBUG] 2015-12-01 15:12:40,650(110) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration url -> org.hibernate.type.UrlType@7bd4937b  
[DEBUG] 2015-12-01 15:12:40,650(110) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@7bd4937b  
[DEBUG] 2015-12-01 15:12:40,650(110) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration date -> org.hibernate.type.DateType@209da20d  
[DEBUG] 2015-12-01 15:12:40,665(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@209da20d  
[DEBUG] 2015-12-01 15:12:40,665(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration time -> org.hibernate.type.TimeType@5d0a1059  
[DEBUG] 2015-12-01 15:12:40,665(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5d0a1059  
[DEBUG] 2015-12-01 15:12:40,681(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@37d4349f  
[DEBUG] 2015-12-01 15:12:40,681(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@37d4349f  
[DEBUG] 2015-12-01 15:12:40,681(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@37d4349f  
[DEBUG] 2015-12-01 15:12:40,681(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3a44431a  
[DEBUG] 2015-12-01 15:12:40,681(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@ffaa6af  
[DEBUG] 2015-12-01 15:12:40,681(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@ffaa6af  
[DEBUG] 2015-12-01 15:12:40,681(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@ffaa6af  
[DEBUG] 2015-12-01 15:12:40,681(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@729d991e  
[DEBUG] 2015-12-01 15:12:40,696(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@66f57048  
[DEBUG] 2015-12-01 15:12:40,696(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@66f57048  
[DEBUG] 2015-12-01 15:12:40,696(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@1e1a0406  
[DEBUG] 2015-12-01 15:12:40,696(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1e1a0406  
[DEBUG] 2015-12-01 15:12:40,696(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@71a8adcf  
[DEBUG] 2015-12-01 15:12:40,696(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@71a8adcf  
[DEBUG] 2015-12-01 15:12:40,696(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration class -> org.hibernate.type.ClassType@61001b64  
[DEBUG] 2015-12-01 15:12:40,696(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@61001b64  
[DEBUG] 2015-12-01 15:12:40,696(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@55634720  
[DEBUG] 2015-12-01 15:12:40,696(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@55634720  
[DEBUG] 2015-12-01 15:12:40,712(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2d710f1a  
[DEBUG] 2015-12-01 15:12:40,712(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@13fd2ccd  
[DEBUG] 2015-12-01 15:12:40,712(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@53aac487  
[DEBUG] 2015-12-01 15:12:40,712(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@53aac487  
[DEBUG] 2015-12-01 15:12:40,712(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@53aac487  
[DEBUG] 2015-12-01 15:12:40,712(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2d52216b  
[DEBUG] 2015-12-01 15:12:40,712(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2d52216b  
[DEBUG] 2015-12-01 15:12:40,712(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2d52216b  
[DEBUG] 2015-12-01 15:12:40,728(188) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration image -> org.hibernate.type.ImageType@4f80542f  
[DEBUG] 2015-12-01 15:12:40,728(188) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@5d534f5d  
[DEBUG] 2015-12-01 15:12:40,728(188) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@5d534f5d  
[DEBUG] 2015-12-01 15:12:40,728(188) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@5d534f5d  
[DEBUG] 2015-12-01 15:12:40,728(188) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6221a451  
[DEBUG] 2015-12-01 15:12:40,728(188) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6221a451  
[DEBUG] 2015-12-01 15:12:40,728(188) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6221a451  
[DEBUG] 2015-12-01 15:12:40,728(188) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration text -> org.hibernate.type.TextType@5677323c  
[DEBUG] 2015-12-01 15:12:40,743(203) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ntext -> org.hibernate.type.NTextType@1e0b4072  
[DEBUG] 2015-12-01 15:12:40,759(219) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@2892d68  
[DEBUG] 2015-12-01 15:12:40,759(219) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2892d68  
[DEBUG] 2015-12-01 15:12:40,759(219) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2e385cce  
[DEBUG] 2015-12-01 15:12:40,775(235) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@7d0b7e3c  
[DEBUG] 2015-12-01 15:12:40,775(235) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7d0b7e3c  
[DEBUG] 2015-12-01 15:12:40,790(250) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nclob -> org.hibernate.type.NClobType@117159c0  
[DEBUG] 2015-12-01 15:12:40,790(250) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@117159c0  
[DEBUG] 2015-12-01 15:12:40,790(250) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@235ecd9f  
[DEBUG] 2015-12-01 15:12:40,790(250) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@75d3a5e0  
[DEBUG] 2015-12-01 15:12:40,806(266) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@19e4653c  
[DEBUG] 2015-12-01 15:12:40,806(266) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@742ff096  
[DEBUG] 2015-12-01 15:12:40,806(266) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@742ff096  
[DEBUG] 2015-12-01 15:12:40,821(281) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@79e4c792  
[DEBUG] 2015-12-01 15:12:40,821(281) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4c60d6e9  
[DEBUG] 2015-12-01 15:12:40,821(281) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4a83a74a  
[DEBUG] 2015-12-01 15:12:40,821(281) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4b29d1d2  
[DEBUG] 2015-12-01 15:12:40,821(281) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@28261e8e  
[DEBUG] 2015-12-01 15:12:40,821(281) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@8519cb4  
[DEBUG] 2015-12-01 15:12:40,821(281) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2d901eb0  
[DEBUG] 2015-12-01 15:12:40,821(281) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3f191845  
[INFO ] 2015-12-01 15:12:40,853(313) org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66) –> [main] HCANN000001: Hibernate Commons Annotations {4.0.4.Final}  
[INFO ] 2015-12-01 15:12:40,868(328) org.hibernate.Version.logVersion(Version.java:41) –> [main] HHH000412: Hibernate Core {4.2.10.Final}  
[INFO ] 2015-12-01 15:12:40,868(328) org.hibernate.cfg.Environment.<clinit>(Environment.java:238) –> [main] HHH000206: hibernate.properties not found  
[INFO ] 2015-12-01 15:12:40,868(328) org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:345) –> [main] HHH000021: Bytecode provider name : javassist  
[DEBUG] 2015-12-01 15:12:40,884(344) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-12-01 15:12:40,900(360) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-12-01 15:12:40,900(360) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:12:40,900(360) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:12:40,900(360) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-12-01 15:12:40,900(360) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]  
[DEBUG] 2015-12-01 15:12:40,900(360) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-12-01 15:12:40,900(360) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-12-01 15:12:40,915(375) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-12-01 15:12:40,915(375) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-12-01 15:12:40,915(375) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-12-01 15:12:40,915(375) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-12-01 15:12:40,915(375) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-12-01 15:12:40,915(375) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-12-01 15:12:40,915(375) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]  
[DEBUG] 2015-12-01 15:12:40,946(406) org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) –> [main] Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].  
[DEBUG] 2015-12-01 15:12:40,993(453) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1781) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-12-01 15:12:41,400(860) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:121) –> [main] Database ->
       name : MySQL
    version : 5.6.22
      major : 5
      minor : 6  
[DEBUG] 2015-12-01 15:12:41,411(871) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:127) –> [main] Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[DEBUG] 2015-12-01 15:12:41,411(871) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:133) –> [main] JDBC version : 4.0  
[INFO ] 2015-12-01 15:12:41,443(903) org.hibernate.dialect.Dialect.<init>(Dialect.java:130) –> [main] HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-12-01 15:12:41,459(919) org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:120) –> [main] HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException  
[DEBUG] 2015-12-01 15:12:41,490(950) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:12:41,490(950) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:12:41,506(966) org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:534) –> [main] Binding entity from annotated class: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:12:41,553(1013) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}  
[DEBUG] 2015-12-01 15:12:41,553(1013) org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1118) –> [main] No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED  
[DEBUG] 2015-12-01 15:12:41,584(1044) org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:394) –> [main] Import with entity name TestEntity  
[DEBUG] 2015-12-01 15:12:41,615(1075) org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:564) –> [main] Bind entity com.it_sucre.entity.TestEntity on table test  
[DEBUG] 2015-12-01 15:12:41,678(1138) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=id, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:12:41,678(1138) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property id with lazy=false  
[DEBUG] 2015-12-01 15:12:41,693(1153) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for id  
[DEBUG] 2015-12-01 15:12:41,693(1153) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property id  
[DEBUG] 2015-12-01 15:12:41,709(1169) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=name, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:12:41,709(1169) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property name with lazy=false  
[DEBUG] 2015-12-01 15:12:41,709(1169) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for name  
[DEBUG] 2015-12-01 15:12:41,709(1169) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property name  
[DEBUG] 2015-12-01 15:12:41,709(1169) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for id  
[DEBUG] 2015-12-01 15:12:41,709(1169) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for name  
[DEBUG] 2015-12-01 15:12:41,709(1169) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:12:41,725(1185) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:12:41,725(1185) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:12:41,725(1185) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:12:41,725(1185) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:12:41,725(1185) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:12:41,725(1185) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:12:41,725(1185) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[DEBUG] 2015-12-01 15:12:41,740(1200) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:117) –> [main] Automatic flush during beforeCompletion(): disabled  
[DEBUG] 2015-12-01 15:12:41,740(1200) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:123) –> [main] Automatic session close at end of transaction: disabled  
[DEBUG] 2015-12-01 15:12:41,740(1200) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:134) –> [main] JDBC batch size: 15  
[DEBUG] 2015-12-01 15:12:41,740(1200) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:140) –> [main] JDBC batch updates for versioned data: disabled  
[DEBUG] 2015-12-01 15:12:41,740(1200) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:150) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-12-01 15:12:41,740(1200) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:156) –> [main] Wrap result sets: disabled  
[DEBUG] 2015-12-01 15:12:41,740(1200) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:162) –> [main] JDBC3 getGeneratedKeys(): enabled  
[DEBUG] 2015-12-01 15:12:41,740(1200) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:174) –> [main] multi-tenancy strategy : NONE  
[DEBUG] 2015-12-01 15:12:41,740(1200) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:180) –> [main] Connection release mode: auto  
[INFO ] 2015-12-01 15:12:41,740(1200) org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:68) –> [main] HHH000399: Using default transaction strategy (direct JDBC transactions)  
[DEBUG] 2015-12-01 15:12:41,756(1216) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Using BatchFetchStyle : LEGACY  
[DEBUG] 2015-12-01 15:12:41,756(1216) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:221) –> [main] Maximum outer join fetch depth: 2  
[DEBUG] 2015-12-01 15:12:41,756(1216) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:227) –> [main] Default batch fetch size: 1  
[DEBUG] 2015-12-01 15:12:41,756(1216) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:233) –> [main] Generate SQL with comments: disabled  
[DEBUG] 2015-12-01 15:12:41,756(1216) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:239) –> [main] Order SQL updates by primary key: disabled  
[DEBUG] 2015-12-01 15:12:41,756(1216) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Order SQL inserts for batching: disabled  
[DEBUG] 2015-12-01 15:12:41,756(1216) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Default null ordering: none  
[DEBUG] 2015-12-01 15:12:41,756(1216) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:584) –> [main] Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-12-01 15:12:41,787(1247) org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) –> [main] HHH000397: Using ASTQueryTranslatorFactory  
[DEBUG] 2015-12-01 15:12:41,787(1247) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:263) –> [main] Query language substitutions: {}  
[DEBUG] 2015-12-01 15:12:41,803(1263) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:269) –> [main] JPA-QL strict compliance: disabled  
[DEBUG] 2015-12-01 15:12:41,803(1263) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:277) –> [main] Second-level cache: enabled  
[DEBUG] 2015-12-01 15:12:41,803(1263) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:283) –> [main] Query cache: disabled  
[DEBUG] 2015-12-01 15:12:41,803(1263) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:524) –> [main] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory  
[DEBUG] 2015-12-01 15:12:41,803(1263) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:534) –> [main] org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.  
[DEBUG] 2015-12-01 15:12:41,803(1263) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:306) –> [main] Optimize cache for minimal puts: disabled  
[DEBUG] 2015-12-01 15:12:41,803(1263) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:321) –> [main] Structured second-level cache entries: disabled  
[DEBUG] 2015-12-01 15:12:41,803(1263) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:331) –> [main] Second-level cache direct-reference entries: disabled  
[DEBUG] 2015-12-01 15:12:41,803(1263) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:339) –> [main] Statistics: disabled  
[DEBUG] 2015-12-01 15:12:41,803(1263) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:345) –> [main] Deleted entity synthetic identifier rollback: disabled  
[DEBUG] 2015-12-01 15:12:41,803(1263) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:372) –> [main] Default entity-mode: pojo  
[DEBUG] 2015-12-01 15:12:41,803(1263) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:378) –> [main] Named query checking : enabled  
[DEBUG] 2015-12-01 15:12:41,803(1263) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:384) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): enabled  
[DEBUG] 2015-12-01 15:12:41,803(1263) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:402) –> [main] Allow initialization of lazy state outside session : : disabled  
[DEBUG] 2015-12-01 15:12:41,803(1263) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:412) –> [main] JTA Track by Thread: enabled  
[DEBUG] 2015-12-01 15:12:41,818(1278) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Building session factory  
[DEBUG] 2015-12-01 15:12:41,850(1310) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:280) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-12-01 15:12:41,850(1310) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:281) –> [main] Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=D:\Java\jdk1.8.0_40\jre\bin, java.vm.version=25.40-b25, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\Java\workspace\demo-chained-transactionmanager, java.runtime.version=1.8.0_40-b26, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=jta, java.endorsed.dirs=D:\Java\jdk1.8.0_40\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\奇点之~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8.1, sun.jnu.encoding=GBK, java.library.path=D:\Java\jdk1.8.0_40\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/jdk1.8.0_40/bin/../jre/bin/server;D:/Java/jdk1.8.0_40/bin/../jre/bin;D:/Java/jdk1.8.0_40/bin/../jre/lib/amd64;D:\Java\jdk1.8.0_40/bin;D:\Java\jdk1.8.0_40/lib/dt.jar;D:\Java\jdk1.8.0_40/lib/tools.jar;D:\__ENV__\apache-maven-3.2.1/bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__ENV__\apache-tomcat-7.0.57\bin;D:\__ENV__\apache-tomcat-7.0.57\jre;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\TortoiseSVN\bin;D:\__ENV__\eclipse;;., hibernate.connection.datasource=org.apache.commons.dbcp.BasicDataSource@2320fa6f, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=6.3, user.home=C:\Users\奇点之光08老师, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=奇点之光08老师, java.class.path=D:\Java\workspace\demo-chained-transactionmanager\target\test-classes;D:\Java\workspace\demo-chained-transactionmanager\target\classes;D:\__ENV__\repo\ch\qos\logback\logback-core\0.9.28\logback-core-0.9.28.jar;D:\__ENV__\repo\ch\qos\logback\logback-classic\0.9.28\logback-classic-0.9.28.jar;D:\__ENV__\repo\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;D:\__ENV__\repo\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;D:\__ENV__\repo\org\slf4j\slf4j-api\1.7.7\slf4j-api-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-jdk14\1.7.7\slf4j-jdk14-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-log4j12\1.7.7\slf4j-log4j12-1.7.7.jar;D:\__ENV__\repo\mysql\mysql-connector-java\5.1.26\mysql-connector-java-5.1.26.jar;D:\__ENV__\repo\log4j\log4j\1.2.14\log4j-1.2.14.jar;D:\__ENV__\repo\org\springframework\data\spring-data-commons\1.8.0.RELEASE\spring-data-commons-1.8.0.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\slf4j\jcl-over-slf4j\1.7.7\jcl-over-slf4j-1.7.7.jar;D:\__ENV__\repo\org\springframework\spring-context\3.2.4.RELEASE\spring-context-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-aop\3.2.4.RELEASE\spring-aop-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-expression\3.2.4.RELEASE\spring-expression-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-oxm\3.2.4.RELEASE\spring-oxm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\__ENV__\repo\org\springframework\spring-web\3.2.4.RELEASE\spring-web-3.2.4.RELEASE.jar;D:\__ENV__\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\__ENV__\repo\org\springframework\spring-webmvc\3.2.4.RELEASE\spring-webmvc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-orm\3.2.4.RELEASE\spring-orm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-jdbc\3.2.4.RELEASE\spring-jdbc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-tx\3.2.4.RELEASE\spring-tx-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-test\3.2.4.RELEASE\spring-test-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\__ENV__\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\__ENV__\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\__ENV__\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\__ENV__\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-validator\4.2.0.Final\hibernate-validator-4.2.0.Final.jar;D:\__ENV__\repo\javax\validation\validation-api\1.0.0.GA\validation-api-1.0.0.GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-core\4.2.10.Final\hibernate-core-4.2.10.Final.jar;D:\__ENV__\repo\antlr\antlr\2.7.7\antlr-2.7.7.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.1.Final\jboss-transaction-api_1.1_spec-1.0.1.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpcore\4.3.1\httpcore-4.3.1.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpclient\4.3.1\httpclient-4.3.1.jar;D:\__ENV__\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\__ENV__\repo\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpmime\4.3.1\httpmime-4.3.1.jar;D:\__ENV__\repo\redis\clients\jedis\2.7.2\jedis-2.7.2.jar;D:\__ENV__\repo\org\apache\commons\commons-pool2\2.3\commons-pool2-2.3.jar;D:\__ENV__\repo\javax\persistence\persistence-api\1.0.2\persistence-api-1.0.2.jar;D:\__ENV__\repo\org\ansj\ansj_seg\0.9\ansj_seg-0.9.jar;D:\__ENV__\repo\org\ansj\tree_split\1.0.1\tree_split-1.0.1.jar;D:\__ENV__\repo\org\apache\commons-lang3\commons-lang3\3.1\commons-lang3-3.1.jar;D:\__ENV__\repo\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;D:\__ENV__\repo\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;D:\__ENV__\repo\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;D:\__ENV__\repo\commons-io\commons-io\2.4\commons-io-2.4.jar;D:\__ENV__\repo\commons-fileupload\commons-fileupload\1.2.2\commons-fileupload-1.2.2.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\__ENV__\repo\com\googlecode\xmemcached\xmemcached\1.4.1\xmemcached-1.4.1.jar;D:\__ENV__\repo\net\sf\json-lib\json-lib\2.4\json-lib-2.4-jdk15.jar;D:\__ENV__\repo\commons-beanutils\commons-beanutils\1.8.0\commons-beanutils-1.8.0.jar;D:\__ENV__\repo\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;D:\__ENV__\repo\net\sf\ezmorph\ezmorph\1.0.6\ezmorph-1.0.6.jar;D:\__ENV__\repo\org\mybatis\mybatis\3.1.1\mybatis-3.1.1.jar;D:\__ENV__\repo\org\mybatis\mybatis-spring\1.1.1\mybatis-spring-1.1.1.jar;D:\__ENV__\repo\junit\junit\4.11\junit-4.11.jar;D:\__ENV__\repo\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/358/1/.cp/;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/357/1/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.classLoader.application=sun.misc.Launcher$AppClassLoader@3b07d329, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=D:\Java\jdk1.8.0_40\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 60813 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -test com.it_sucre.service.HibernateServiceTest:test, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_40, java.ext.dirs=D:\Java\jdk1.8.0_40\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=D:\Java\jdk1.8.0_40\jre\lib\resources.jar;D:\Java\jdk1.8.0_40\jre\lib\rt.jar;D:\Java\jdk1.8.0_40\jre\lib\sunrsasign.jar;D:\Java\jdk1.8.0_40\jre\lib\jsse.jar;D:\Java\jdk1.8.0_40\jre\lib\jce.jar;D:\Java\jdk1.8.0_40\jre\lib\charsets.jar;D:\Java\jdk1.8.0_40\jre\lib\jfr.jar;D:\Java\jdk1.8.0_40\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}  
[DEBUG] 2015-12-01 15:12:42,131(1591) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[DEBUG] 2015-12-01 15:12:42,412(1872) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3604) –> [main] Static SQL for entity: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:12:42,422(1882) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3609) –> [main]  Version select: select id from test where id =?  
[DEBUG] 2015-12-01 15:12:42,428(1888) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3612) –> [main]  Snapshot select: select testentity_.id, testentity_.name as name2_0_ from test testentity_ where testentity_.id=?  
[DEBUG] 2015-12-01 15:12:42,444(1904) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3615) –> [main]  Insert 0: insert into test (name, id) values (?, ?)  
[DEBUG] 2015-12-01 15:12:42,444(1904) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3616) –> [main]  Update 0: update test set name=? where id=?  
[DEBUG] 2015-12-01 15:12:42,444(1904) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3617) –> [main]  Delete 0: delete from test where id=?  
[DEBUG] 2015-12-01 15:12:42,506(1966) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [NONE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:12:42,506(1966) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:12:42,506(1966) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:12:42,506(1966) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE_NOWAIT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:12:42,506(1966) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [FORCE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:12:42,506(1966) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? lock in share mode  
[DEBUG] 2015-12-01 15:12:42,522(1982) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_WRITE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:12:42,522(1982) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:12:42,522(1982) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:12:42,522(1982) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:12:42,569(2029) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:12:42,569(2029) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:12:42,766(2226) org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:62) –> [main] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@16423501  
[DEBUG] 2015-12-01 15:12:42,768(2228) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:75) –> [main] Registering SessionFactory: 229ee1a4-4e47-476d-a469-2d10c8b27c51 (<unnamed>)  
[DEBUG] 2015-12-01 15:12:42,769(2229) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:82) –> [main] Not binding SessionFactory to JNDI, no JNDI name configured  
[DEBUG] 2015-12-01 15:12:42,769(2229) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:492) –> [main] Instantiated session factory  
[INFO ] 2015-12-01 15:12:42,781(2241) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:182) –> [main] HHH000228: Running hbm2ddl schema update  
[INFO ] 2015-12-01 15:12:42,782(2242) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:193) –> [main] HHH000102: Fetching database metadata  
[INFO ] 2015-12-01 15:12:42,790(2250) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:205) –> [main] HHH000396: Updating schema  
[DEBUG] 2015-12-01 15:12:42,791(2251) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:12:42,792(2252) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:12:42,793(2253) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:12:42,794(2254) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:12:42,795(2255) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:12:42,795(2255) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:12:42,796(2256) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:12:42,797(2257) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:12:42,826(2286) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:12:42,856(2316) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[INFO ] 2015-12-01 15:12:42,959(2419) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] HHH000261: Table found: Test.test  
[INFO ] 2015-12-01 15:12:42,962(2422) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:67) –> [main] HHH000037: Columns: [name, id]  
[INFO ] 2015-12-01 15:12:42,964(2424) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] HHH000108: Foreign keys: []  
[INFO ] 2015-12-01 15:12:42,965(2425) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:70) –> [main] HHH000126: Indexes: [primary]  
[DEBUG] 2015-12-01 15:12:42,966(2426) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-12-01 15:12:42,969(2429) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:242) –> [main] HHH000232: Schema update complete  
[WARN ] 2015-12-01 15:12:42,972(2432) org.hibernate.internal.SessionFactoryImpl.buildCurrentSessionContext(SessionFactoryImpl.java:1535) –> [main] HHH000008: JTASessionContext being used with JDBCTransactionFactory; auto-flush will not operate correctly with getCurrentSession()  
[DEBUG] 2015-12-01 15:12:42,977(2437) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1073) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-12-01 15:12:42,978(2438) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1096) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-12-01 15:12:43,004(2464) org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:110) –> [main] Statistics initialized [enabled=false]  
[DEBUG] 2015-12-01 15:12:43,182(2642) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@48974e45  
[DEBUG] 2015-12-01 15:12:43,182(2642) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@48974e45  
[DEBUG] 2015-12-01 15:12:43,183(2643) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@48974e45  
[DEBUG] 2015-12-01 15:12:43,186(2646) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@57af006c  
[DEBUG] 2015-12-01 15:12:43,197(2657) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@446293d  
[DEBUG] 2015-12-01 15:12:43,198(2658) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@37654521  
[DEBUG] 2015-12-01 15:12:43,202(2662) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2  
[DEBUG] 2015-12-01 15:12:43,205(2665) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2  
[DEBUG] 2015-12-01 15:12:43,208(2668) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7ea9e1e2  
[DEBUG] 2015-12-01 15:12:43,209(2669) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@2053d869  
[DEBUG] 2015-12-01 15:12:43,210(2670) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@2053d869  
[DEBUG] 2015-12-01 15:12:43,210(2670) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2053d869  
[DEBUG] 2015-12-01 15:12:43,211(2671) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@10d307f1  
[DEBUG] 2015-12-01 15:12:43,215(2675) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@10d307f1  
[DEBUG] 2015-12-01 15:12:43,216(2676) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@10d307f1  
[DEBUG] 2015-12-01 15:12:43,219(2679) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@63a12c68  
[DEBUG] 2015-12-01 15:12:43,222(2682) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@63a12c68  
[DEBUG] 2015-12-01 15:12:43,222(2682) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@63a12c68  
[DEBUG] 2015-12-01 15:12:43,223(2683) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@fba92d3  
[DEBUG] 2015-12-01 15:12:43,225(2685) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@fba92d3  
[DEBUG] 2015-12-01 15:12:43,226(2686) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@fba92d3  
[DEBUG] 2015-12-01 15:12:43,227(2687) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@156b88f5  
[DEBUG] 2015-12-01 15:12:43,228(2688) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@156b88f5  
[DEBUG] 2015-12-01 15:12:43,234(2694) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@156b88f5  
[DEBUG] 2015-12-01 15:12:43,239(2699) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@7133da86  
[DEBUG] 2015-12-01 15:12:43,241(2701) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@7133da86  
[DEBUG] 2015-12-01 15:12:43,243(2703) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7133da86  
[DEBUG] 2015-12-01 15:12:43,243(2703) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2fb3536e  
[DEBUG] 2015-12-01 15:12:43,244(2704) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2fb3536e  
[DEBUG] 2015-12-01 15:12:43,247(2707) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3b6ddd1d  
[DEBUG] 2015-12-01 15:12:43,265(2725) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3b6ddd1d  
[DEBUG] 2015-12-01 15:12:43,278(2738) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration string -> org.hibernate.type.StringType@1a18644  
[DEBUG] 2015-12-01 15:12:43,280(2740) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@1a18644  
[DEBUG] 2015-12-01 15:12:43,280(2740) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1e04fa0a  
[DEBUG] 2015-12-01 15:12:43,281(2741) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@f5acb9d  
[DEBUG] 2015-12-01 15:12:43,282(2742) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration url -> org.hibernate.type.UrlType@7bd4937b  
[DEBUG] 2015-12-01 15:12:43,285(2745) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@7bd4937b  
[DEBUG] 2015-12-01 15:12:43,286(2746) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration date -> org.hibernate.type.DateType@209da20d  
[DEBUG] 2015-12-01 15:12:43,287(2747) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@209da20d  
[DEBUG] 2015-12-01 15:12:43,287(2747) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration time -> org.hibernate.type.TimeType@5d0a1059  
[DEBUG] 2015-12-01 15:12:43,288(2748) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5d0a1059  
[DEBUG] 2015-12-01 15:12:43,290(2750) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@37d4349f  
[DEBUG] 2015-12-01 15:12:43,291(2751) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@37d4349f  
[DEBUG] 2015-12-01 15:12:43,315(2775) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@37d4349f  
[DEBUG] 2015-12-01 15:12:43,316(2776) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3a44431a  
[DEBUG] 2015-12-01 15:12:43,318(2778) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@ffaa6af  
[DEBUG] 2015-12-01 15:12:43,319(2779) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@ffaa6af  
[DEBUG] 2015-12-01 15:12:43,323(2783) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@ffaa6af  
[DEBUG] 2015-12-01 15:12:43,324(2784) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@729d991e  
[DEBUG] 2015-12-01 15:12:43,325(2785) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@66f57048  
[DEBUG] 2015-12-01 15:12:43,325(2785) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@66f57048  
[DEBUG] 2015-12-01 15:12:43,326(2786) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@1e1a0406  
[DEBUG] 2015-12-01 15:12:43,326(2786) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1e1a0406  
[DEBUG] 2015-12-01 15:12:43,327(2787) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@71a8adcf  
[DEBUG] 2015-12-01 15:12:43,327(2787) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@71a8adcf  
[DEBUG] 2015-12-01 15:12:43,328(2788) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration class -> org.hibernate.type.ClassType@61001b64  
[DEBUG] 2015-12-01 15:12:43,329(2789) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@61001b64  
[DEBUG] 2015-12-01 15:12:43,329(2789) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@55634720  
[DEBUG] 2015-12-01 15:12:43,330(2790) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@55634720  
[DEBUG] 2015-12-01 15:12:43,331(2791) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2d710f1a  
[DEBUG] 2015-12-01 15:12:43,332(2792) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@13fd2ccd  
[DEBUG] 2015-12-01 15:12:43,333(2793) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@53aac487  
[DEBUG] 2015-12-01 15:12:43,335(2795) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@53aac487  
[DEBUG] 2015-12-01 15:12:43,337(2797) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@53aac487  
[DEBUG] 2015-12-01 15:12:43,338(2798) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2d52216b  
[DEBUG] 2015-12-01 15:12:43,339(2799) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2d52216b  
[DEBUG] 2015-12-01 15:12:43,340(2800) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2d52216b  
[DEBUG] 2015-12-01 15:12:43,374(2834) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration image -> org.hibernate.type.ImageType@4f80542f  
[DEBUG] 2015-12-01 15:12:43,375(2835) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@5d534f5d  
[DEBUG] 2015-12-01 15:12:43,376(2836) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@5d534f5d  
[DEBUG] 2015-12-01 15:12:43,376(2836) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@5d534f5d  
[DEBUG] 2015-12-01 15:12:43,377(2837) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6221a451  
[DEBUG] 2015-12-01 15:12:43,377(2837) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6221a451  
[DEBUG] 2015-12-01 15:12:43,378(2838) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6221a451  
[DEBUG] 2015-12-01 15:12:43,378(2838) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration text -> org.hibernate.type.TextType@5677323c  
[DEBUG] 2015-12-01 15:12:43,383(2843) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ntext -> org.hibernate.type.NTextType@1e0b4072  
[DEBUG] 2015-12-01 15:12:43,402(2862) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@2892d68  
[DEBUG] 2015-12-01 15:12:43,410(2870) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2892d68  
[DEBUG] 2015-12-01 15:12:43,411(2871) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2e385cce  
[DEBUG] 2015-12-01 15:12:43,412(2872) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@7d0b7e3c  
[DEBUG] 2015-12-01 15:12:43,432(2892) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7d0b7e3c  
[DEBUG] 2015-12-01 15:12:43,433(2893) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nclob -> org.hibernate.type.NClobType@117159c0  
[DEBUG] 2015-12-01 15:12:43,434(2894) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@117159c0  
[DEBUG] 2015-12-01 15:12:43,435(2895) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@235ecd9f  
[DEBUG] 2015-12-01 15:12:43,436(2896) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@75d3a5e0  
[DEBUG] 2015-12-01 15:12:43,436(2896) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@19e4653c  
[DEBUG] 2015-12-01 15:12:43,437(2897) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@742ff096  
[DEBUG] 2015-12-01 15:12:43,438(2898) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@742ff096  
[DEBUG] 2015-12-01 15:12:43,439(2899) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@51768776  
[DEBUG] 2015-12-01 15:12:43,440(2900) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@b93aad  
[DEBUG] 2015-12-01 15:12:43,441(2901) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2f3c6ac4  
[DEBUG] 2015-12-01 15:12:43,443(2903) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@67af833b  
[DEBUG] 2015-12-01 15:12:43,444(2904) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@41394595  
[DEBUG] 2015-12-01 15:12:43,445(2905) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@21a5fd96  
[DEBUG] 2015-12-01 15:12:43,446(2906) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5c77053b  
[DEBUG] 2015-12-01 15:12:43,447(2907) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@287f94b1  
[DEBUG] 2015-12-01 15:12:43,448(2908) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-12-01 15:12:43,448(2908) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-12-01 15:12:43,449(2909) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:12:43,450(2910) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:12:43,450(2910) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-12-01 15:12:43,451(2911) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]  
[DEBUG] 2015-12-01 15:12:43,452(2912) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-12-01 15:12:43,453(2913) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-12-01 15:12:43,453(2913) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-12-01 15:12:43,454(2914) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-12-01 15:12:43,455(2915) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-12-01 15:12:43,455(2915) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-12-01 15:12:43,456(2916) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-12-01 15:12:43,456(2916) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-12-01 15:12:43,457(2917) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]  
[DEBUG] 2015-12-01 15:12:43,500(2960) org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) –> [main] Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].  
[DEBUG] 2015-12-01 15:12:43,507(2967) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1781) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-12-01 15:12:43,590(3050) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:121) –> [main] Database ->
       name : MySQL
    version : 5.6.22
      major : 5
      minor : 6  
[DEBUG] 2015-12-01 15:12:43,591(3051) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:127) –> [main] Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[DEBUG] 2015-12-01 15:12:43,592(3052) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:133) –> [main] JDBC version : 4.0  
[INFO ] 2015-12-01 15:12:43,598(3058) org.hibernate.dialect.Dialect.<init>(Dialect.java:130) –> [main] HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-12-01 15:12:43,599(3059) org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:120) –> [main] HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException  
[DEBUG] 2015-12-01 15:12:43,602(3062) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:12:43,603(3063) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:12:43,604(3064) org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:534) –> [main] Binding entity from annotated class: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:12:43,605(3065) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}  
[DEBUG] 2015-12-01 15:12:43,605(3065) org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1118) –> [main] No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED  
[DEBUG] 2015-12-01 15:12:43,606(3066) org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:394) –> [main] Import with entity name TestEntity  
[DEBUG] 2015-12-01 15:12:43,607(3067) org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:564) –> [main] Bind entity com.it_sucre.entity.TestEntity on table test  
[DEBUG] 2015-12-01 15:12:43,608(3068) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=id, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:12:43,609(3069) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property id with lazy=false  
[DEBUG] 2015-12-01 15:12:43,610(3070) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for id  
[DEBUG] 2015-12-01 15:12:43,610(3070) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property id  
[DEBUG] 2015-12-01 15:12:43,611(3071) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=name, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:12:43,611(3071) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property name with lazy=false  
[DEBUG] 2015-12-01 15:12:43,612(3072) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for name  
[DEBUG] 2015-12-01 15:12:43,612(3072) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property name  
[DEBUG] 2015-12-01 15:12:43,613(3073) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for id  
[DEBUG] 2015-12-01 15:12:43,613(3073) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for name  
[DEBUG] 2015-12-01 15:12:43,614(3074) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:12:43,614(3074) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:12:43,615(3075) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:12:43,615(3075) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:12:43,616(3076) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:12:43,616(3076) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:12:43,616(3076) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:12:43,618(3078) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[DEBUG] 2015-12-01 15:12:43,619(3079) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:117) –> [main] Automatic flush during beforeCompletion(): disabled  
[DEBUG] 2015-12-01 15:12:43,620(3080) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:123) –> [main] Automatic session close at end of transaction: disabled  
[DEBUG] 2015-12-01 15:12:43,620(3080) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:134) –> [main] JDBC batch size: 15  
[DEBUG] 2015-12-01 15:12:43,621(3081) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:140) –> [main] JDBC batch updates for versioned data: disabled  
[DEBUG] 2015-12-01 15:12:43,621(3081) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:150) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-12-01 15:12:43,622(3082) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:156) –> [main] Wrap result sets: disabled  
[DEBUG] 2015-12-01 15:12:43,623(3083) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:162) –> [main] JDBC3 getGeneratedKeys(): enabled  
[DEBUG] 2015-12-01 15:12:43,625(3085) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:174) –> [main] multi-tenancy strategy : NONE  
[DEBUG] 2015-12-01 15:12:43,627(3087) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:180) –> [main] Connection release mode: auto  
[INFO ] 2015-12-01 15:12:43,628(3088) org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:68) –> [main] HHH000399: Using default transaction strategy (direct JDBC transactions)  
[DEBUG] 2015-12-01 15:12:43,629(3089) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Using BatchFetchStyle : LEGACY  
[DEBUG] 2015-12-01 15:12:43,630(3090) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:221) –> [main] Maximum outer join fetch depth: 2  
[DEBUG] 2015-12-01 15:12:43,630(3090) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:227) –> [main] Default batch fetch size: 1  
[DEBUG] 2015-12-01 15:12:43,631(3091) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:233) –> [main] Generate SQL with comments: disabled  
[DEBUG] 2015-12-01 15:12:43,631(3091) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:239) –> [main] Order SQL updates by primary key: disabled  
[DEBUG] 2015-12-01 15:12:43,632(3092) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Order SQL inserts for batching: disabled  
[DEBUG] 2015-12-01 15:12:43,633(3093) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Default null ordering: none  
[DEBUG] 2015-12-01 15:12:43,633(3093) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:584) –> [main] Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-12-01 15:12:43,635(3095) org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) –> [main] HHH000397: Using ASTQueryTranslatorFactory  
[DEBUG] 2015-12-01 15:12:43,636(3096) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:263) –> [main] Query language substitutions: {}  
[DEBUG] 2015-12-01 15:12:43,636(3096) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:269) –> [main] JPA-QL strict compliance: disabled  
[DEBUG] 2015-12-01 15:12:43,637(3097) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:277) –> [main] Second-level cache: enabled  
[DEBUG] 2015-12-01 15:12:43,637(3097) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:283) –> [main] Query cache: disabled  
[DEBUG] 2015-12-01 15:12:43,638(3098) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:524) –> [main] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory  
[DEBUG] 2015-12-01 15:12:43,639(3099) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:534) –> [main] org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.  
[DEBUG] 2015-12-01 15:12:43,645(3105) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:306) –> [main] Optimize cache for minimal puts: disabled  
[DEBUG] 2015-12-01 15:12:43,650(3110) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:321) –> [main] Structured second-level cache entries: disabled  
[DEBUG] 2015-12-01 15:12:43,652(3112) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:331) –> [main] Second-level cache direct-reference entries: disabled  
[DEBUG] 2015-12-01 15:12:43,653(3113) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:339) –> [main] Statistics: disabled  
[DEBUG] 2015-12-01 15:12:43,654(3114) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:345) –> [main] Deleted entity synthetic identifier rollback: disabled  
[DEBUG] 2015-12-01 15:12:43,654(3114) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:372) –> [main] Default entity-mode: pojo  
[DEBUG] 2015-12-01 15:12:43,655(3115) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:378) –> [main] Named query checking : enabled  
[DEBUG] 2015-12-01 15:12:43,655(3115) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:384) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): enabled  
[DEBUG] 2015-12-01 15:12:43,656(3116) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:402) –> [main] Allow initialization of lazy state outside session : : disabled  
[DEBUG] 2015-12-01 15:12:43,657(3117) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:412) –> [main] JTA Track by Thread: enabled  
[DEBUG] 2015-12-01 15:12:43,657(3117) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Building session factory  
[DEBUG] 2015-12-01 15:12:43,659(3119) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:280) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-12-01 15:12:43,660(3120) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:281) –> [main] Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=D:\Java\jdk1.8.0_40\jre\bin, java.vm.version=25.40-b25, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\Java\workspace\demo-chained-transactionmanager, java.runtime.version=1.8.0_40-b26, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=jta, java.endorsed.dirs=D:\Java\jdk1.8.0_40\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\奇点之~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8.1, sun.jnu.encoding=GBK, java.library.path=D:\Java\jdk1.8.0_40\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/jdk1.8.0_40/bin/../jre/bin/server;D:/Java/jdk1.8.0_40/bin/../jre/bin;D:/Java/jdk1.8.0_40/bin/../jre/lib/amd64;D:\Java\jdk1.8.0_40/bin;D:\Java\jdk1.8.0_40/lib/dt.jar;D:\Java\jdk1.8.0_40/lib/tools.jar;D:\__ENV__\apache-maven-3.2.1/bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__ENV__\apache-tomcat-7.0.57\bin;D:\__ENV__\apache-tomcat-7.0.57\jre;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\TortoiseSVN\bin;D:\__ENV__\eclipse;;., hibernate.connection.datasource=org.apache.commons.dbcp.BasicDataSource@f5c79a6, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=6.3, user.home=C:\Users\奇点之光08老师, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=奇点之光08老师, java.class.path=D:\Java\workspace\demo-chained-transactionmanager\target\test-classes;D:\Java\workspace\demo-chained-transactionmanager\target\classes;D:\__ENV__\repo\ch\qos\logback\logback-core\0.9.28\logback-core-0.9.28.jar;D:\__ENV__\repo\ch\qos\logback\logback-classic\0.9.28\logback-classic-0.9.28.jar;D:\__ENV__\repo\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;D:\__ENV__\repo\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;D:\__ENV__\repo\org\slf4j\slf4j-api\1.7.7\slf4j-api-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-jdk14\1.7.7\slf4j-jdk14-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-log4j12\1.7.7\slf4j-log4j12-1.7.7.jar;D:\__ENV__\repo\mysql\mysql-connector-java\5.1.26\mysql-connector-java-5.1.26.jar;D:\__ENV__\repo\log4j\log4j\1.2.14\log4j-1.2.14.jar;D:\__ENV__\repo\org\springframework\data\spring-data-commons\1.8.0.RELEASE\spring-data-commons-1.8.0.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\slf4j\jcl-over-slf4j\1.7.7\jcl-over-slf4j-1.7.7.jar;D:\__ENV__\repo\org\springframework\spring-context\3.2.4.RELEASE\spring-context-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-aop\3.2.4.RELEASE\spring-aop-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-expression\3.2.4.RELEASE\spring-expression-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-oxm\3.2.4.RELEASE\spring-oxm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\__ENV__\repo\org\springframework\spring-web\3.2.4.RELEASE\spring-web-3.2.4.RELEASE.jar;D:\__ENV__\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\__ENV__\repo\org\springframework\spring-webmvc\3.2.4.RELEASE\spring-webmvc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-orm\3.2.4.RELEASE\spring-orm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-jdbc\3.2.4.RELEASE\spring-jdbc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-tx\3.2.4.RELEASE\spring-tx-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-test\3.2.4.RELEASE\spring-test-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\__ENV__\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\__ENV__\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\__ENV__\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\__ENV__\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-validator\4.2.0.Final\hibernate-validator-4.2.0.Final.jar;D:\__ENV__\repo\javax\validation\validation-api\1.0.0.GA\validation-api-1.0.0.GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-core\4.2.10.Final\hibernate-core-4.2.10.Final.jar;D:\__ENV__\repo\antlr\antlr\2.7.7\antlr-2.7.7.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.1.Final\jboss-transaction-api_1.1_spec-1.0.1.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpcore\4.3.1\httpcore-4.3.1.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpclient\4.3.1\httpclient-4.3.1.jar;D:\__ENV__\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\__ENV__\repo\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpmime\4.3.1\httpmime-4.3.1.jar;D:\__ENV__\repo\redis\clients\jedis\2.7.2\jedis-2.7.2.jar;D:\__ENV__\repo\org\apache\commons\commons-pool2\2.3\commons-pool2-2.3.jar;D:\__ENV__\repo\javax\persistence\persistence-api\1.0.2\persistence-api-1.0.2.jar;D:\__ENV__\repo\org\ansj\ansj_seg\0.9\ansj_seg-0.9.jar;D:\__ENV__\repo\org\ansj\tree_split\1.0.1\tree_split-1.0.1.jar;D:\__ENV__\repo\org\apache\commons-lang3\commons-lang3\3.1\commons-lang3-3.1.jar;D:\__ENV__\repo\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;D:\__ENV__\repo\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;D:\__ENV__\repo\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;D:\__ENV__\repo\commons-io\commons-io\2.4\commons-io-2.4.jar;D:\__ENV__\repo\commons-fileupload\commons-fileupload\1.2.2\commons-fileupload-1.2.2.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\__ENV__\repo\com\googlecode\xmemcached\xmemcached\1.4.1\xmemcached-1.4.1.jar;D:\__ENV__\repo\net\sf\json-lib\json-lib\2.4\json-lib-2.4-jdk15.jar;D:\__ENV__\repo\commons-beanutils\commons-beanutils\1.8.0\commons-beanutils-1.8.0.jar;D:\__ENV__\repo\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;D:\__ENV__\repo\net\sf\ezmorph\ezmorph\1.0.6\ezmorph-1.0.6.jar;D:\__ENV__\repo\org\mybatis\mybatis\3.1.1\mybatis-3.1.1.jar;D:\__ENV__\repo\org\mybatis\mybatis-spring\1.1.1\mybatis-spring-1.1.1.jar;D:\__ENV__\repo\junit\junit\4.11\junit-4.11.jar;D:\__ENV__\repo\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/358/1/.cp/;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/357/1/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.classLoader.application=sun.misc.Launcher$AppClassLoader@3b07d329, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=D:\Java\jdk1.8.0_40\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 60813 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -test com.it_sucre.service.HibernateServiceTest:test, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_40, java.ext.dirs=D:\Java\jdk1.8.0_40\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=D:\Java\jdk1.8.0_40\jre\lib\resources.jar;D:\Java\jdk1.8.0_40\jre\lib\rt.jar;D:\Java\jdk1.8.0_40\jre\lib\sunrsasign.jar;D:\Java\jdk1.8.0_40\jre\lib\jsse.jar;D:\Java\jdk1.8.0_40\jre\lib\jce.jar;D:\Java\jdk1.8.0_40\jre\lib\charsets.jar;D:\Java\jdk1.8.0_40\jre\lib\jfr.jar;D:\Java\jdk1.8.0_40\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}  
[DEBUG] 2015-12-01 15:12:43,758(3218) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[DEBUG] 2015-12-01 15:12:43,764(3224) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3604) –> [main] Static SQL for entity: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:12:43,765(3225) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3609) –> [main]  Version select: select id from test where id =?  
[DEBUG] 2015-12-01 15:12:43,766(3226) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3612) –> [main]  Snapshot select: select testentity_.id, testentity_.name as name2_0_ from test testentity_ where testentity_.id=?  
[DEBUG] 2015-12-01 15:12:43,767(3227) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3615) –> [main]  Insert 0: insert into test (name, id) values (?, ?)  
[DEBUG] 2015-12-01 15:12:43,768(3228) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3616) –> [main]  Update 0: update test set name=? where id=?  
[DEBUG] 2015-12-01 15:12:43,769(3229) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3617) –> [main]  Delete 0: delete from test where id=?  
[DEBUG] 2015-12-01 15:12:43,770(3230) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [NONE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:12:43,771(3231) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:12:43,779(3239) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:12:43,780(3240) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE_NOWAIT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:12:43,781(3241) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [FORCE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:12:43,782(3242) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? lock in share mode  
[DEBUG] 2015-12-01 15:12:43,783(3243) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_WRITE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:12:43,784(3244) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:12:43,785(3245) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:12:43,786(3246) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:12:43,787(3247) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:12:43,787(3247) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:12:43,808(3268) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:75) –> [main] Registering SessionFactory: 22dd2986-d7b2-4ad4-9c6d-9a67e30e5f26 (<unnamed>)  
[DEBUG] 2015-12-01 15:12:43,810(3270) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:82) –> [main] Not binding SessionFactory to JNDI, no JNDI name configured  
[DEBUG] 2015-12-01 15:12:43,810(3270) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:492) –> [main] Instantiated session factory  
[INFO ] 2015-12-01 15:12:43,814(3274) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:182) –> [main] HHH000228: Running hbm2ddl schema update  
[INFO ] 2015-12-01 15:12:43,815(3275) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:193) –> [main] HHH000102: Fetching database metadata  
[INFO ] 2015-12-01 15:12:43,817(3277) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:205) –> [main] HHH000396: Updating schema  
[DEBUG] 2015-12-01 15:12:43,818(3278) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:12:43,818(3278) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:12:43,819(3279) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:12:43,820(3280) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:12:43,823(3283) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:12:43,824(3284) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:12:43,825(3285) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:12:43,826(3286) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:12:43,827(3287) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:12:43,827(3287) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[INFO ] 2015-12-01 15:12:43,844(3304) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] HHH000261: Table found: Test.test  
[INFO ] 2015-12-01 15:12:43,844(3304) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:67) –> [main] HHH000037: Columns: [name, id]  
[INFO ] 2015-12-01 15:12:43,845(3305) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] HHH000108: Foreign keys: []  
[INFO ] 2015-12-01 15:12:43,845(3305) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:70) –> [main] HHH000126: Indexes: [primary]  
[DEBUG] 2015-12-01 15:12:43,846(3306) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-12-01 15:12:43,846(3306) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:242) –> [main] HHH000232: Schema update complete  
[WARN ] 2015-12-01 15:12:43,847(3307) org.hibernate.internal.SessionFactoryImpl.buildCurrentSessionContext(SessionFactoryImpl.java:1535) –> [main] HHH000008: JTASessionContext being used with JDBCTransactionFactory; auto-flush will not operate correctly with getCurrentSession()  
[DEBUG] 2015-12-01 15:12:43,848(3308) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1073) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-12-01 15:12:43,848(3308) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1096) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-12-01 15:12:43,850(3310) org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:110) –> [main] Statistics initialized [enabled=false]  
[DEBUG] 2015-12-01 15:12:44,248(3708) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:212) –> [main] Obtaining JDBC connection  
[DEBUG] 2015-12-01 15:12:44,248(3708) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:218) –> [main] Obtained JDBC connection  
[DEBUG] 2015-12-01 15:12:44,264(3724) org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) –> [main] begin  
[DEBUG] 2015-12-01 15:12:44,264(3724) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) –> [main] initial autocommit status: true  
[DEBUG] 2015-12-01 15:12:44,264(3724) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) –> [main] disabling autocommit  
[DEBUG] 2015-12-01 15:12:44,264(3724) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:212) –> [main] Obtaining JDBC connection  
[DEBUG] 2015-12-01 15:12:44,264(3724) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:218) –> [main] Obtained JDBC connection  
[DEBUG] 2015-12-01 15:12:44,264(3724) org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) –> [main] begin  
[DEBUG] 2015-12-01 15:12:44,264(3724) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) –> [main] initial autocommit status: true  
[DEBUG] 2015-12-01 15:12:44,264(3724) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) –> [main] disabling autocommit  
[DEBUG] 2015-12-01 15:12:44,327(3787) org.hibernate.engine.transaction.spi.AbstractTransactionImpl.rollback(AbstractTransactionImpl.java:203) –> [main] rolling back  
[DEBUG] 2015-12-01 15:12:44,327(3787) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doRollback(JdbcTransaction.java:164) –> [main] rolled JDBC Connection  
[DEBUG] 2015-12-01 15:12:44,327(3787) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) –> [main] re-enabling autocommit  
[DEBUG] 2015-12-01 15:12:44,342(3802) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:232) –> [main] Releasing JDBC connection  
[DEBUG] 2015-12-01 15:12:44,342(3802) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:250) –> [main] Released JDBC connection  
[DEBUG] 2015-12-01 15:12:44,342(3802) org.hibernate.engine.transaction.spi.AbstractTransactionImpl.rollback(AbstractTransactionImpl.java:203) –> [main] rolling back  
[DEBUG] 2015-12-01 15:12:44,342(3802) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doRollback(JdbcTransaction.java:164) –> [main] rolled JDBC Connection  
[DEBUG] 2015-12-01 15:12:44,342(3802) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) –> [main] re-enabling autocommit  
[DEBUG] 2015-12-01 15:12:44,342(3802) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:232) –> [main] Releasing JDBC connection  
[DEBUG] 2015-12-01 15:12:44,342(3802) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:250) –> [main] Released JDBC connection  
[DEBUG] 2015-12-01 15:12:44,358(3818) org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1374) –> [Thread-2] HHH000031: Closing  
[DEBUG] 2015-12-01 15:12:44,373(3833) org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1374) –> [Thread-2] HHH000031: Closing  
[DEBUG] 2015-12-01 15:14:17,133(0) org.hibernate.cfg.Configuration.<clinit>(Configuration.java:184) –> [main] Logging Provider: org.jboss.logging.Log4jLoggerProvider  
[DEBUG] 2015-12-01 15:14:17,168(35) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@48974e45  
[DEBUG] 2015-12-01 15:14:17,169(36) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@48974e45  
[DEBUG] 2015-12-01 15:14:17,170(37) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@48974e45  
[DEBUG] 2015-12-01 15:14:17,173(40) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@57af006c  
[DEBUG] 2015-12-01 15:14:17,178(45) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@446293d  
[DEBUG] 2015-12-01 15:14:17,182(49) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@37654521  
[DEBUG] 2015-12-01 15:14:17,190(57) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2  
[DEBUG] 2015-12-01 15:14:17,191(58) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2  
[DEBUG] 2015-12-01 15:14:17,193(60) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7ea9e1e2  
[DEBUG] 2015-12-01 15:14:17,198(65) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@2053d869  
[DEBUG] 2015-12-01 15:14:17,199(66) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@2053d869  
[DEBUG] 2015-12-01 15:14:17,200(67) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2053d869  
[DEBUG] 2015-12-01 15:14:17,206(73) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@10d307f1  
[DEBUG] 2015-12-01 15:14:17,207(74) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@10d307f1  
[DEBUG] 2015-12-01 15:14:17,207(74) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@10d307f1  
[DEBUG] 2015-12-01 15:14:17,211(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@63a12c68  
[DEBUG] 2015-12-01 15:14:17,212(79) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@63a12c68  
[DEBUG] 2015-12-01 15:14:17,212(79) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@63a12c68  
[DEBUG] 2015-12-01 15:14:17,216(83) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@fba92d3  
[DEBUG] 2015-12-01 15:14:17,216(83) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@fba92d3  
[DEBUG] 2015-12-01 15:14:17,217(84) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@fba92d3  
[DEBUG] 2015-12-01 15:14:17,220(87) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@156b88f5  
[DEBUG] 2015-12-01 15:14:17,222(89) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@156b88f5  
[DEBUG] 2015-12-01 15:14:17,223(90) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@156b88f5  
[DEBUG] 2015-12-01 15:14:17,230(97) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@7133da86  
[DEBUG] 2015-12-01 15:14:17,232(99) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@7133da86  
[DEBUG] 2015-12-01 15:14:17,242(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7133da86  
[DEBUG] 2015-12-01 15:14:17,248(115) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2fb3536e  
[DEBUG] 2015-12-01 15:14:17,249(116) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2fb3536e  
[DEBUG] 2015-12-01 15:14:17,254(121) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3b6ddd1d  
[DEBUG] 2015-12-01 15:14:17,256(123) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3b6ddd1d  
[DEBUG] 2015-12-01 15:14:17,259(126) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration string -> org.hibernate.type.StringType@1a18644  
[DEBUG] 2015-12-01 15:14:17,260(127) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@1a18644  
[DEBUG] 2015-12-01 15:14:17,263(130) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1e04fa0a  
[DEBUG] 2015-12-01 15:14:17,265(132) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@f5acb9d  
[DEBUG] 2015-12-01 15:14:17,267(134) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration url -> org.hibernate.type.UrlType@7bd4937b  
[DEBUG] 2015-12-01 15:14:17,267(134) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@7bd4937b  
[DEBUG] 2015-12-01 15:14:17,273(140) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration date -> org.hibernate.type.DateType@209da20d  
[DEBUG] 2015-12-01 15:14:17,274(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@209da20d  
[DEBUG] 2015-12-01 15:14:17,279(146) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration time -> org.hibernate.type.TimeType@5d0a1059  
[DEBUG] 2015-12-01 15:14:17,280(147) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5d0a1059  
[DEBUG] 2015-12-01 15:14:17,283(150) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@37d4349f  
[DEBUG] 2015-12-01 15:14:17,284(151) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@37d4349f  
[DEBUG] 2015-12-01 15:14:17,288(155) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@37d4349f  
[DEBUG] 2015-12-01 15:14:17,293(160) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3a44431a  
[DEBUG] 2015-12-01 15:14:17,296(163) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@ffaa6af  
[DEBUG] 2015-12-01 15:14:17,297(164) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@ffaa6af  
[DEBUG] 2015-12-01 15:14:17,298(165) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@ffaa6af  
[DEBUG] 2015-12-01 15:14:17,300(167) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@729d991e  
[DEBUG] 2015-12-01 15:14:17,302(169) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@66f57048  
[DEBUG] 2015-12-01 15:14:17,303(170) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@66f57048  
[DEBUG] 2015-12-01 15:14:17,306(173) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@1e1a0406  
[DEBUG] 2015-12-01 15:14:17,306(173) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1e1a0406  
[DEBUG] 2015-12-01 15:14:17,308(175) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@71a8adcf  
[DEBUG] 2015-12-01 15:14:17,308(175) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@71a8adcf  
[DEBUG] 2015-12-01 15:14:17,311(178) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration class -> org.hibernate.type.ClassType@61001b64  
[DEBUG] 2015-12-01 15:14:17,312(179) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@61001b64  
[DEBUG] 2015-12-01 15:14:17,314(181) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@55634720  
[DEBUG] 2015-12-01 15:14:17,315(182) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@55634720  
[DEBUG] 2015-12-01 15:14:17,316(183) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2d710f1a  
[DEBUG] 2015-12-01 15:14:17,318(185) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@13fd2ccd  
[DEBUG] 2015-12-01 15:14:17,322(189) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@53aac487  
[DEBUG] 2015-12-01 15:14:17,324(191) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@53aac487  
[DEBUG] 2015-12-01 15:14:17,328(195) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@53aac487  
[DEBUG] 2015-12-01 15:14:17,337(204) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2d52216b  
[DEBUG] 2015-12-01 15:14:17,339(206) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2d52216b  
[DEBUG] 2015-12-01 15:14:17,340(207) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2d52216b  
[DEBUG] 2015-12-01 15:14:17,343(210) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration image -> org.hibernate.type.ImageType@4f80542f  
[DEBUG] 2015-12-01 15:14:17,346(213) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@5d534f5d  
[DEBUG] 2015-12-01 15:14:17,346(213) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@5d534f5d  
[DEBUG] 2015-12-01 15:14:17,348(215) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@5d534f5d  
[DEBUG] 2015-12-01 15:14:17,367(234) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6221a451  
[DEBUG] 2015-12-01 15:14:17,369(236) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6221a451  
[DEBUG] 2015-12-01 15:14:17,370(237) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6221a451  
[DEBUG] 2015-12-01 15:14:17,374(241) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration text -> org.hibernate.type.TextType@5677323c  
[DEBUG] 2015-12-01 15:14:17,378(245) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ntext -> org.hibernate.type.NTextType@1e0b4072  
[DEBUG] 2015-12-01 15:14:17,411(278) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@2892d68  
[DEBUG] 2015-12-01 15:14:17,413(280) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2892d68  
[DEBUG] 2015-12-01 15:14:17,416(283) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2e385cce  
[DEBUG] 2015-12-01 15:14:17,431(298) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@7d0b7e3c  
[DEBUG] 2015-12-01 15:14:17,431(298) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7d0b7e3c  
[DEBUG] 2015-12-01 15:14:17,439(306) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nclob -> org.hibernate.type.NClobType@117159c0  
[DEBUG] 2015-12-01 15:14:17,440(307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@117159c0  
[DEBUG] 2015-12-01 15:14:17,444(311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@235ecd9f  
[DEBUG] 2015-12-01 15:14:17,448(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@75d3a5e0  
[DEBUG] 2015-12-01 15:14:17,451(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@19e4653c  
[DEBUG] 2015-12-01 15:14:17,456(323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@742ff096  
[DEBUG] 2015-12-01 15:14:17,456(323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@742ff096  
[DEBUG] 2015-12-01 15:14:17,457(324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@79e4c792  
[DEBUG] 2015-12-01 15:14:17,458(325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4c60d6e9  
[DEBUG] 2015-12-01 15:14:17,459(326) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4a83a74a  
[DEBUG] 2015-12-01 15:14:17,459(326) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4b29d1d2  
[DEBUG] 2015-12-01 15:14:17,460(327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@28261e8e  
[DEBUG] 2015-12-01 15:14:17,461(328) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@8519cb4  
[DEBUG] 2015-12-01 15:14:17,461(328) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2d901eb0  
[DEBUG] 2015-12-01 15:14:17,462(329) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3f191845  
[INFO ] 2015-12-01 15:14:17,498(365) org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66) –> [main] HCANN000001: Hibernate Commons Annotations {4.0.4.Final}  
[INFO ] 2015-12-01 15:14:17,507(374) org.hibernate.Version.logVersion(Version.java:41) –> [main] HHH000412: Hibernate Core {4.2.10.Final}  
[INFO ] 2015-12-01 15:14:17,514(381) org.hibernate.cfg.Environment.<clinit>(Environment.java:238) –> [main] HHH000206: hibernate.properties not found  
[INFO ] 2015-12-01 15:14:17,517(384) org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:345) –> [main] HHH000021: Bytecode provider name : javassist  
[DEBUG] 2015-12-01 15:14:17,537(404) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-12-01 15:14:17,539(406) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-12-01 15:14:17,540(407) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:14:17,541(408) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:14:17,544(411) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-12-01 15:14:17,545(412) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]  
[DEBUG] 2015-12-01 15:14:17,547(414) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-12-01 15:14:17,549(416) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-12-01 15:14:17,551(418) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-12-01 15:14:17,553(420) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-12-01 15:14:17,556(423) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-12-01 15:14:17,558(425) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-12-01 15:14:17,560(427) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-12-01 15:14:17,564(431) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-12-01 15:14:17,567(434) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]  
[DEBUG] 2015-12-01 15:14:17,610(477) org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) –> [main] Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].  
[DEBUG] 2015-12-01 15:14:17,652(519) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1781) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-12-01 15:14:18,140(1007) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:121) –> [main] Database ->
       name : MySQL
    version : 5.6.22
      major : 5
      minor : 6  
[DEBUG] 2015-12-01 15:14:18,141(1008) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:127) –> [main] Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[DEBUG] 2015-12-01 15:14:18,142(1009) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:133) –> [main] JDBC version : 4.0  
[INFO ] 2015-12-01 15:14:18,184(1051) org.hibernate.dialect.Dialect.<init>(Dialect.java:130) –> [main] HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-12-01 15:14:18,206(1073) org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:120) –> [main] HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException  
[DEBUG] 2015-12-01 15:14:18,252(1119) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:14:18,253(1120) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:14:18,264(1131) org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:534) –> [main] Binding entity from annotated class: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:14:18,322(1189) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}  
[DEBUG] 2015-12-01 15:14:18,341(1208) org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1118) –> [main] No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED  
[DEBUG] 2015-12-01 15:14:18,398(1265) org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:394) –> [main] Import with entity name TestEntity  
[DEBUG] 2015-12-01 15:14:18,410(1277) org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:564) –> [main] Bind entity com.it_sucre.entity.TestEntity on table test  
[DEBUG] 2015-12-01 15:14:18,448(1315) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=id, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:14:18,464(1331) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property id with lazy=false  
[DEBUG] 2015-12-01 15:14:18,489(1356) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for id  
[DEBUG] 2015-12-01 15:14:18,493(1360) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property id  
[DEBUG] 2015-12-01 15:14:18,502(1369) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=name, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:14:18,504(1371) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property name with lazy=false  
[DEBUG] 2015-12-01 15:14:18,505(1372) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for name  
[DEBUG] 2015-12-01 15:14:18,506(1373) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property name  
[DEBUG] 2015-12-01 15:14:18,511(1378) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for id  
[DEBUG] 2015-12-01 15:14:18,512(1379) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for name  
[DEBUG] 2015-12-01 15:14:18,513(1380) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:14:18,516(1383) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:14:18,516(1383) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:14:18,517(1384) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:14:18,517(1384) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:14:18,517(1384) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:14:18,518(1385) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:14:18,518(1385) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[DEBUG] 2015-12-01 15:14:18,550(1417) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:117) –> [main] Automatic flush during beforeCompletion(): disabled  
[DEBUG] 2015-12-01 15:14:18,553(1420) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:123) –> [main] Automatic session close at end of transaction: disabled  
[DEBUG] 2015-12-01 15:14:18,555(1422) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:134) –> [main] JDBC batch size: 15  
[DEBUG] 2015-12-01 15:14:18,556(1423) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:140) –> [main] JDBC batch updates for versioned data: disabled  
[DEBUG] 2015-12-01 15:14:18,556(1423) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:150) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-12-01 15:14:18,557(1424) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:156) –> [main] Wrap result sets: disabled  
[DEBUG] 2015-12-01 15:14:18,557(1424) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:162) –> [main] JDBC3 getGeneratedKeys(): enabled  
[DEBUG] 2015-12-01 15:14:18,559(1426) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:174) –> [main] multi-tenancy strategy : NONE  
[DEBUG] 2015-12-01 15:14:18,560(1427) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:180) –> [main] Connection release mode: auto  
[INFO ] 2015-12-01 15:14:18,562(1429) org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:68) –> [main] HHH000399: Using default transaction strategy (direct JDBC transactions)  
[DEBUG] 2015-12-01 15:14:18,569(1436) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Using BatchFetchStyle : LEGACY  
[DEBUG] 2015-12-01 15:14:18,570(1437) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:221) –> [main] Maximum outer join fetch depth: 2  
[DEBUG] 2015-12-01 15:14:18,571(1438) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:227) –> [main] Default batch fetch size: 1  
[DEBUG] 2015-12-01 15:14:18,572(1439) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:233) –> [main] Generate SQL with comments: disabled  
[DEBUG] 2015-12-01 15:14:18,572(1439) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:239) –> [main] Order SQL updates by primary key: disabled  
[DEBUG] 2015-12-01 15:14:18,573(1440) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Order SQL inserts for batching: disabled  
[DEBUG] 2015-12-01 15:14:18,574(1441) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Default null ordering: none  
[DEBUG] 2015-12-01 15:14:18,576(1443) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:584) –> [main] Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-12-01 15:14:18,611(1478) org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) –> [main] HHH000397: Using ASTQueryTranslatorFactory  
[DEBUG] 2015-12-01 15:14:18,612(1479) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:263) –> [main] Query language substitutions: {}  
[DEBUG] 2015-12-01 15:14:18,612(1479) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:269) –> [main] JPA-QL strict compliance: disabled  
[DEBUG] 2015-12-01 15:14:18,613(1480) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:277) –> [main] Second-level cache: enabled  
[DEBUG] 2015-12-01 15:14:18,614(1481) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:283) –> [main] Query cache: disabled  
[DEBUG] 2015-12-01 15:14:18,615(1482) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:524) –> [main] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory  
[DEBUG] 2015-12-01 15:14:18,617(1484) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:534) –> [main] org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.  
[DEBUG] 2015-12-01 15:14:18,618(1485) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:306) –> [main] Optimize cache for minimal puts: disabled  
[DEBUG] 2015-12-01 15:14:18,619(1486) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:321) –> [main] Structured second-level cache entries: disabled  
[DEBUG] 2015-12-01 15:14:18,620(1487) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:331) –> [main] Second-level cache direct-reference entries: disabled  
[DEBUG] 2015-12-01 15:14:18,621(1488) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:339) –> [main] Statistics: disabled  
[DEBUG] 2015-12-01 15:14:18,622(1489) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:345) –> [main] Deleted entity synthetic identifier rollback: disabled  
[DEBUG] 2015-12-01 15:14:18,622(1489) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:372) –> [main] Default entity-mode: pojo  
[DEBUG] 2015-12-01 15:14:18,623(1490) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:378) –> [main] Named query checking : enabled  
[DEBUG] 2015-12-01 15:14:18,624(1491) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:384) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): enabled  
[DEBUG] 2015-12-01 15:14:18,625(1492) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:402) –> [main] Allow initialization of lazy state outside session : : disabled  
[DEBUG] 2015-12-01 15:14:18,626(1493) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:412) –> [main] JTA Track by Thread: enabled  
[DEBUG] 2015-12-01 15:14:18,648(1515) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Building session factory  
[DEBUG] 2015-12-01 15:14:18,692(1559) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:280) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-12-01 15:14:18,695(1562) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:281) –> [main] Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=D:\Java\jdk1.8.0_40\jre\bin, java.vm.version=25.40-b25, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\Java\workspace\demo-chained-transactionmanager, java.runtime.version=1.8.0_40-b26, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=managed, java.endorsed.dirs=D:\Java\jdk1.8.0_40\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\奇点之~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8.1, sun.jnu.encoding=GBK, java.library.path=D:\Java\jdk1.8.0_40\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/jdk1.8.0_40/bin/../jre/bin/server;D:/Java/jdk1.8.0_40/bin/../jre/bin;D:/Java/jdk1.8.0_40/bin/../jre/lib/amd64;D:\Java\jdk1.8.0_40/bin;D:\Java\jdk1.8.0_40/lib/dt.jar;D:\Java\jdk1.8.0_40/lib/tools.jar;D:\__ENV__\apache-maven-3.2.1/bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__ENV__\apache-tomcat-7.0.57\bin;D:\__ENV__\apache-tomcat-7.0.57\jre;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\TortoiseSVN\bin;D:\__ENV__\eclipse;;., hibernate.connection.datasource=org.apache.commons.dbcp.BasicDataSource@2320fa6f, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=6.3, user.home=C:\Users\奇点之光08老师, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=奇点之光08老师, java.class.path=D:\Java\workspace\demo-chained-transactionmanager\target\test-classes;D:\Java\workspace\demo-chained-transactionmanager\target\classes;D:\__ENV__\repo\ch\qos\logback\logback-core\0.9.28\logback-core-0.9.28.jar;D:\__ENV__\repo\ch\qos\logback\logback-classic\0.9.28\logback-classic-0.9.28.jar;D:\__ENV__\repo\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;D:\__ENV__\repo\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;D:\__ENV__\repo\org\slf4j\slf4j-api\1.7.7\slf4j-api-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-jdk14\1.7.7\slf4j-jdk14-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-log4j12\1.7.7\slf4j-log4j12-1.7.7.jar;D:\__ENV__\repo\mysql\mysql-connector-java\5.1.26\mysql-connector-java-5.1.26.jar;D:\__ENV__\repo\log4j\log4j\1.2.14\log4j-1.2.14.jar;D:\__ENV__\repo\org\springframework\data\spring-data-commons\1.8.0.RELEASE\spring-data-commons-1.8.0.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\slf4j\jcl-over-slf4j\1.7.7\jcl-over-slf4j-1.7.7.jar;D:\__ENV__\repo\org\springframework\spring-context\3.2.4.RELEASE\spring-context-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-aop\3.2.4.RELEASE\spring-aop-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-expression\3.2.4.RELEASE\spring-expression-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-oxm\3.2.4.RELEASE\spring-oxm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\__ENV__\repo\org\springframework\spring-web\3.2.4.RELEASE\spring-web-3.2.4.RELEASE.jar;D:\__ENV__\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\__ENV__\repo\org\springframework\spring-webmvc\3.2.4.RELEASE\spring-webmvc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-orm\3.2.4.RELEASE\spring-orm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-jdbc\3.2.4.RELEASE\spring-jdbc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-tx\3.2.4.RELEASE\spring-tx-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-test\3.2.4.RELEASE\spring-test-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\__ENV__\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\__ENV__\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\__ENV__\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\__ENV__\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-validator\4.2.0.Final\hibernate-validator-4.2.0.Final.jar;D:\__ENV__\repo\javax\validation\validation-api\1.0.0.GA\validation-api-1.0.0.GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-core\4.2.10.Final\hibernate-core-4.2.10.Final.jar;D:\__ENV__\repo\antlr\antlr\2.7.7\antlr-2.7.7.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.1.Final\jboss-transaction-api_1.1_spec-1.0.1.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpcore\4.3.1\httpcore-4.3.1.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpclient\4.3.1\httpclient-4.3.1.jar;D:\__ENV__\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\__ENV__\repo\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpmime\4.3.1\httpmime-4.3.1.jar;D:\__ENV__\repo\redis\clients\jedis\2.7.2\jedis-2.7.2.jar;D:\__ENV__\repo\org\apache\commons\commons-pool2\2.3\commons-pool2-2.3.jar;D:\__ENV__\repo\javax\persistence\persistence-api\1.0.2\persistence-api-1.0.2.jar;D:\__ENV__\repo\org\ansj\ansj_seg\0.9\ansj_seg-0.9.jar;D:\__ENV__\repo\org\ansj\tree_split\1.0.1\tree_split-1.0.1.jar;D:\__ENV__\repo\org\apache\commons-lang3\commons-lang3\3.1\commons-lang3-3.1.jar;D:\__ENV__\repo\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;D:\__ENV__\repo\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;D:\__ENV__\repo\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;D:\__ENV__\repo\commons-io\commons-io\2.4\commons-io-2.4.jar;D:\__ENV__\repo\commons-fileupload\commons-fileupload\1.2.2\commons-fileupload-1.2.2.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\__ENV__\repo\com\googlecode\xmemcached\xmemcached\1.4.1\xmemcached-1.4.1.jar;D:\__ENV__\repo\net\sf\json-lib\json-lib\2.4\json-lib-2.4-jdk15.jar;D:\__ENV__\repo\commons-beanutils\commons-beanutils\1.8.0\commons-beanutils-1.8.0.jar;D:\__ENV__\repo\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;D:\__ENV__\repo\net\sf\ezmorph\ezmorph\1.0.6\ezmorph-1.0.6.jar;D:\__ENV__\repo\org\mybatis\mybatis\3.1.1\mybatis-3.1.1.jar;D:\__ENV__\repo\org\mybatis\mybatis-spring\1.1.1\mybatis-spring-1.1.1.jar;D:\__ENV__\repo\junit\junit\4.11\junit-4.11.jar;D:\__ENV__\repo\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/358/1/.cp/;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/357/1/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.classLoader.application=sun.misc.Launcher$AppClassLoader@3b07d329, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=D:\Java\jdk1.8.0_40\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 60917 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -test com.it_sucre.service.HibernateServiceTest:test, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_40, java.ext.dirs=D:\Java\jdk1.8.0_40\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=D:\Java\jdk1.8.0_40\jre\lib\resources.jar;D:\Java\jdk1.8.0_40\jre\lib\rt.jar;D:\Java\jdk1.8.0_40\jre\lib\sunrsasign.jar;D:\Java\jdk1.8.0_40\jre\lib\jsse.jar;D:\Java\jdk1.8.0_40\jre\lib\jce.jar;D:\Java\jdk1.8.0_40\jre\lib\charsets.jar;D:\Java\jdk1.8.0_40\jre\lib\jfr.jar;D:\Java\jdk1.8.0_40\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}  
[DEBUG] 2015-12-01 15:14:18,929(1796) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[DEBUG] 2015-12-01 15:14:19,317(2184) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3604) –> [main] Static SQL for entity: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:14:19,319(2186) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3609) –> [main]  Version select: select id from test where id =?  
[DEBUG] 2015-12-01 15:14:19,320(2187) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3612) –> [main]  Snapshot select: select testentity_.id, testentity_.name as name2_0_ from test testentity_ where testentity_.id=?  
[DEBUG] 2015-12-01 15:14:19,322(2189) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3615) –> [main]  Insert 0: insert into test (name, id) values (?, ?)  
[DEBUG] 2015-12-01 15:14:19,323(2190) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3616) –> [main]  Update 0: update test set name=? where id=?  
[DEBUG] 2015-12-01 15:14:19,331(2198) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3617) –> [main]  Delete 0: delete from test where id=?  
[DEBUG] 2015-12-01 15:14:19,408(2275) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [NONE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:14:19,410(2277) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:14:19,411(2278) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:14:19,412(2279) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE_NOWAIT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:14:19,413(2280) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [FORCE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:14:19,414(2281) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? lock in share mode  
[DEBUG] 2015-12-01 15:14:19,416(2283) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_WRITE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:14:19,417(2284) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:14:19,418(2285) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:14:19,419(2286) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:14:19,436(2303) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:14:19,439(2306) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:14:19,594(2461) org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:62) –> [main] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@16423501  
[DEBUG] 2015-12-01 15:14:19,596(2463) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:75) –> [main] Registering SessionFactory: 7fb8e699-ebbd-4461-a978-4c85cb478109 (<unnamed>)  
[DEBUG] 2015-12-01 15:14:19,596(2463) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:82) –> [main] Not binding SessionFactory to JNDI, no JNDI name configured  
[DEBUG] 2015-12-01 15:14:19,597(2464) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:492) –> [main] Instantiated session factory  
[INFO ] 2015-12-01 15:14:19,607(2474) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:182) –> [main] HHH000228: Running hbm2ddl schema update  
[INFO ] 2015-12-01 15:14:19,607(2474) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:193) –> [main] HHH000102: Fetching database metadata  
[INFO ] 2015-12-01 15:14:19,613(2480) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:205) –> [main] HHH000396: Updating schema  
[DEBUG] 2015-12-01 15:14:19,614(2481) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:14:19,615(2482) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:14:19,616(2483) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:14:19,617(2484) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:14:19,617(2484) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:14:19,618(2485) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:14:19,619(2486) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:14:19,620(2487) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:14:19,621(2488) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:14:19,621(2488) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[INFO ] 2015-12-01 15:14:19,666(2533) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] HHH000261: Table found: Test.test  
[INFO ] 2015-12-01 15:14:19,667(2534) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:67) –> [main] HHH000037: Columns: [name, id]  
[INFO ] 2015-12-01 15:14:19,668(2535) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] HHH000108: Foreign keys: []  
[INFO ] 2015-12-01 15:14:19,669(2536) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:70) –> [main] HHH000126: Indexes: [primary]  
[DEBUG] 2015-12-01 15:14:19,670(2537) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-12-01 15:14:19,671(2538) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:242) –> [main] HHH000232: Schema update complete  
[DEBUG] 2015-12-01 15:14:19,676(2543) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1073) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-12-01 15:14:19,677(2544) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1096) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-12-01 15:14:19,696(2563) org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:110) –> [main] Statistics initialized [enabled=false]  
[DEBUG] 2015-12-01 15:14:19,779(2646) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@48974e45  
[DEBUG] 2015-12-01 15:14:19,780(2647) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@48974e45  
[DEBUG] 2015-12-01 15:14:19,780(2647) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@48974e45  
[DEBUG] 2015-12-01 15:14:19,781(2648) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@57af006c  
[DEBUG] 2015-12-01 15:14:19,786(2653) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@446293d  
[DEBUG] 2015-12-01 15:14:19,787(2654) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@37654521  
[DEBUG] 2015-12-01 15:14:19,788(2655) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2  
[DEBUG] 2015-12-01 15:14:19,789(2656) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2  
[DEBUG] 2015-12-01 15:14:19,790(2657) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7ea9e1e2  
[DEBUG] 2015-12-01 15:14:19,790(2657) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@2053d869  
[DEBUG] 2015-12-01 15:14:19,791(2658) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@2053d869  
[DEBUG] 2015-12-01 15:14:19,791(2658) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2053d869  
[DEBUG] 2015-12-01 15:14:19,793(2660) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@10d307f1  
[DEBUG] 2015-12-01 15:14:19,795(2662) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@10d307f1  
[DEBUG] 2015-12-01 15:14:19,796(2663) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@10d307f1  
[DEBUG] 2015-12-01 15:14:19,799(2666) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@63a12c68  
[DEBUG] 2015-12-01 15:14:19,801(2668) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@63a12c68  
[DEBUG] 2015-12-01 15:14:19,802(2669) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@63a12c68  
[DEBUG] 2015-12-01 15:14:19,803(2670) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@fba92d3  
[DEBUG] 2015-12-01 15:14:19,804(2671) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@fba92d3  
[DEBUG] 2015-12-01 15:14:19,807(2674) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@fba92d3  
[DEBUG] 2015-12-01 15:14:19,808(2675) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@156b88f5  
[DEBUG] 2015-12-01 15:14:19,809(2676) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@156b88f5  
[DEBUG] 2015-12-01 15:14:19,811(2678) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@156b88f5  
[DEBUG] 2015-12-01 15:14:19,814(2681) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@7133da86  
[DEBUG] 2015-12-01 15:14:19,817(2684) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@7133da86  
[DEBUG] 2015-12-01 15:14:19,818(2685) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7133da86  
[DEBUG] 2015-12-01 15:14:19,818(2685) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2fb3536e  
[DEBUG] 2015-12-01 15:14:19,819(2686) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2fb3536e  
[DEBUG] 2015-12-01 15:14:19,819(2686) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3b6ddd1d  
[DEBUG] 2015-12-01 15:14:19,820(2687) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3b6ddd1d  
[DEBUG] 2015-12-01 15:14:19,820(2687) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration string -> org.hibernate.type.StringType@1a18644  
[DEBUG] 2015-12-01 15:14:19,821(2688) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@1a18644  
[DEBUG] 2015-12-01 15:14:19,823(2690) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1e04fa0a  
[DEBUG] 2015-12-01 15:14:19,824(2691) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@f5acb9d  
[DEBUG] 2015-12-01 15:14:19,827(2694) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration url -> org.hibernate.type.UrlType@7bd4937b  
[DEBUG] 2015-12-01 15:14:19,828(2695) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@7bd4937b  
[DEBUG] 2015-12-01 15:14:19,829(2696) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration date -> org.hibernate.type.DateType@209da20d  
[DEBUG] 2015-12-01 15:14:19,830(2697) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@209da20d  
[DEBUG] 2015-12-01 15:14:19,830(2697) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration time -> org.hibernate.type.TimeType@5d0a1059  
[DEBUG] 2015-12-01 15:14:19,832(2699) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5d0a1059  
[DEBUG] 2015-12-01 15:14:19,832(2699) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@37d4349f  
[DEBUG] 2015-12-01 15:14:19,833(2700) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@37d4349f  
[DEBUG] 2015-12-01 15:14:19,833(2700) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@37d4349f  
[DEBUG] 2015-12-01 15:14:19,834(2701) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3a44431a  
[DEBUG] 2015-12-01 15:14:19,834(2701) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@ffaa6af  
[DEBUG] 2015-12-01 15:14:19,835(2702) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@ffaa6af  
[DEBUG] 2015-12-01 15:14:19,836(2703) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@ffaa6af  
[DEBUG] 2015-12-01 15:14:19,836(2703) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@729d991e  
[DEBUG] 2015-12-01 15:14:19,837(2704) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@66f57048  
[DEBUG] 2015-12-01 15:14:19,839(2706) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@66f57048  
[DEBUG] 2015-12-01 15:14:19,840(2707) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@1e1a0406  
[DEBUG] 2015-12-01 15:14:19,841(2708) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1e1a0406  
[DEBUG] 2015-12-01 15:14:19,841(2708) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@71a8adcf  
[DEBUG] 2015-12-01 15:14:19,842(2709) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@71a8adcf  
[DEBUG] 2015-12-01 15:14:19,843(2710) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration class -> org.hibernate.type.ClassType@61001b64  
[DEBUG] 2015-12-01 15:14:19,844(2711) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@61001b64  
[DEBUG] 2015-12-01 15:14:19,845(2712) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@55634720  
[DEBUG] 2015-12-01 15:14:19,845(2712) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@55634720  
[DEBUG] 2015-12-01 15:14:19,846(2713) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2d710f1a  
[DEBUG] 2015-12-01 15:14:19,846(2713) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@13fd2ccd  
[DEBUG] 2015-12-01 15:14:19,847(2714) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@53aac487  
[DEBUG] 2015-12-01 15:14:19,848(2715) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@53aac487  
[DEBUG] 2015-12-01 15:14:19,848(2715) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@53aac487  
[DEBUG] 2015-12-01 15:14:19,849(2716) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2d52216b  
[DEBUG] 2015-12-01 15:14:19,849(2716) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2d52216b  
[DEBUG] 2015-12-01 15:14:19,850(2717) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2d52216b  
[DEBUG] 2015-12-01 15:14:19,850(2717) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration image -> org.hibernate.type.ImageType@4f80542f  
[DEBUG] 2015-12-01 15:14:19,852(2719) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@5d534f5d  
[DEBUG] 2015-12-01 15:14:19,852(2719) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@5d534f5d  
[DEBUG] 2015-12-01 15:14:19,853(2720) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@5d534f5d  
[DEBUG] 2015-12-01 15:14:19,854(2721) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6221a451  
[DEBUG] 2015-12-01 15:14:19,859(2726) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6221a451  
[DEBUG] 2015-12-01 15:14:19,863(2730) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6221a451  
[DEBUG] 2015-12-01 15:14:19,864(2731) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration text -> org.hibernate.type.TextType@5677323c  
[DEBUG] 2015-12-01 15:14:19,866(2733) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ntext -> org.hibernate.type.NTextType@1e0b4072  
[DEBUG] 2015-12-01 15:14:19,869(2736) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@2892d68  
[DEBUG] 2015-12-01 15:14:19,870(2737) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2892d68  
[DEBUG] 2015-12-01 15:14:19,871(2738) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2e385cce  
[DEBUG] 2015-12-01 15:14:19,872(2739) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@7d0b7e3c  
[DEBUG] 2015-12-01 15:14:19,873(2740) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7d0b7e3c  
[DEBUG] 2015-12-01 15:14:19,873(2740) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nclob -> org.hibernate.type.NClobType@117159c0  
[DEBUG] 2015-12-01 15:14:19,874(2741) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@117159c0  
[DEBUG] 2015-12-01 15:14:19,875(2742) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@235ecd9f  
[DEBUG] 2015-12-01 15:14:19,875(2742) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@75d3a5e0  
[DEBUG] 2015-12-01 15:14:19,877(2744) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@19e4653c  
[DEBUG] 2015-12-01 15:14:19,878(2745) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@742ff096  
[DEBUG] 2015-12-01 15:14:19,878(2745) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@742ff096  
[DEBUG] 2015-12-01 15:14:19,879(2746) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5a021cb9  
[DEBUG] 2015-12-01 15:14:19,879(2746) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@f31c0c6  
[DEBUG] 2015-12-01 15:14:19,880(2747) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4a9419d7  
[DEBUG] 2015-12-01 15:14:19,880(2747) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2e8ab815  
[DEBUG] 2015-12-01 15:14:19,881(2748) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@d1f74b8  
[DEBUG] 2015-12-01 15:14:19,882(2749) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3a0807b7  
[DEBUG] 2015-12-01 15:14:19,883(2750) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5769e7ae  
[DEBUG] 2015-12-01 15:14:19,884(2751) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@26b894bd  
[DEBUG] 2015-12-01 15:14:19,884(2751) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-12-01 15:14:19,885(2752) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-12-01 15:14:19,885(2752) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:14:19,886(2753) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:14:19,886(2753) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-12-01 15:14:19,887(2754) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]  
[DEBUG] 2015-12-01 15:14:19,887(2754) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-12-01 15:14:19,887(2754) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-12-01 15:14:19,888(2755) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-12-01 15:14:19,889(2756) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-12-01 15:14:19,890(2757) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-12-01 15:14:19,890(2757) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-12-01 15:14:19,891(2758) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-12-01 15:14:19,891(2758) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-12-01 15:14:19,896(2763) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]  
[DEBUG] 2015-12-01 15:14:19,938(2805) org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) –> [main] Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].  
[DEBUG] 2015-12-01 15:14:19,945(2812) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1781) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-12-01 15:14:20,015(2882) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:121) –> [main] Database ->
       name : MySQL
    version : 5.6.22
      major : 5
      minor : 6  
[DEBUG] 2015-12-01 15:14:20,016(2883) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:127) –> [main] Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[DEBUG] 2015-12-01 15:14:20,016(2883) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:133) –> [main] JDBC version : 4.0  
[INFO ] 2015-12-01 15:14:20,031(2898) org.hibernate.dialect.Dialect.<init>(Dialect.java:130) –> [main] HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-12-01 15:14:20,043(2910) org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:120) –> [main] HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException  
[DEBUG] 2015-12-01 15:14:20,045(2912) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:14:20,046(2913) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:14:20,046(2913) org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:534) –> [main] Binding entity from annotated class: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:14:20,047(2914) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}  
[DEBUG] 2015-12-01 15:14:20,048(2915) org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1118) –> [main] No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED  
[DEBUG] 2015-12-01 15:14:20,049(2916) org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:394) –> [main] Import with entity name TestEntity  
[DEBUG] 2015-12-01 15:14:20,049(2916) org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:564) –> [main] Bind entity com.it_sucre.entity.TestEntity on table test  
[DEBUG] 2015-12-01 15:14:20,051(2918) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=id, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:14:20,052(2919) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property id with lazy=false  
[DEBUG] 2015-12-01 15:14:20,053(2920) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for id  
[DEBUG] 2015-12-01 15:14:20,053(2920) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property id  
[DEBUG] 2015-12-01 15:14:20,054(2921) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=name, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:14:20,054(2921) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property name with lazy=false  
[DEBUG] 2015-12-01 15:14:20,055(2922) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for name  
[DEBUG] 2015-12-01 15:14:20,056(2923) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property name  
[DEBUG] 2015-12-01 15:14:20,056(2923) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for id  
[DEBUG] 2015-12-01 15:14:20,057(2924) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for name  
[DEBUG] 2015-12-01 15:14:20,058(2925) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:14:20,058(2925) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:14:20,059(2926) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:14:20,059(2926) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:14:20,059(2926) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:14:20,060(2927) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:14:20,060(2927) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:14:20,061(2928) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[DEBUG] 2015-12-01 15:14:20,062(2929) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:117) –> [main] Automatic flush during beforeCompletion(): disabled  
[DEBUG] 2015-12-01 15:14:20,062(2929) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:123) –> [main] Automatic session close at end of transaction: disabled  
[DEBUG] 2015-12-01 15:14:20,063(2930) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:134) –> [main] JDBC batch size: 15  
[DEBUG] 2015-12-01 15:14:20,063(2930) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:140) –> [main] JDBC batch updates for versioned data: disabled  
[DEBUG] 2015-12-01 15:14:20,074(2941) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:150) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-12-01 15:14:20,074(2941) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:156) –> [main] Wrap result sets: disabled  
[DEBUG] 2015-12-01 15:14:20,075(2942) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:162) –> [main] JDBC3 getGeneratedKeys(): enabled  
[DEBUG] 2015-12-01 15:14:20,075(2942) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:174) –> [main] multi-tenancy strategy : NONE  
[DEBUG] 2015-12-01 15:14:20,077(2944) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:180) –> [main] Connection release mode: auto  
[INFO ] 2015-12-01 15:14:20,077(2944) org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:68) –> [main] HHH000399: Using default transaction strategy (direct JDBC transactions)  
[DEBUG] 2015-12-01 15:14:20,082(2949) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Using BatchFetchStyle : LEGACY  
[DEBUG] 2015-12-01 15:14:20,084(2951) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:221) –> [main] Maximum outer join fetch depth: 2  
[DEBUG] 2015-12-01 15:14:20,085(2952) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:227) –> [main] Default batch fetch size: 1  
[DEBUG] 2015-12-01 15:14:20,086(2953) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:233) –> [main] Generate SQL with comments: disabled  
[DEBUG] 2015-12-01 15:14:20,086(2953) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:239) –> [main] Order SQL updates by primary key: disabled  
[DEBUG] 2015-12-01 15:14:20,088(2955) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Order SQL inserts for batching: disabled  
[DEBUG] 2015-12-01 15:14:20,090(2957) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Default null ordering: none  
[DEBUG] 2015-12-01 15:14:20,091(2958) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:584) –> [main] Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-12-01 15:14:20,092(2959) org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) –> [main] HHH000397: Using ASTQueryTranslatorFactory  
[DEBUG] 2015-12-01 15:14:20,093(2960) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:263) –> [main] Query language substitutions: {}  
[DEBUG] 2015-12-01 15:14:20,095(2962) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:269) –> [main] JPA-QL strict compliance: disabled  
[DEBUG] 2015-12-01 15:14:20,097(2964) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:277) –> [main] Second-level cache: enabled  
[DEBUG] 2015-12-01 15:14:20,099(2966) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:283) –> [main] Query cache: disabled  
[DEBUG] 2015-12-01 15:14:20,099(2966) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:524) –> [main] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory  
[DEBUG] 2015-12-01 15:14:20,104(2971) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:534) –> [main] org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.  
[DEBUG] 2015-12-01 15:14:20,108(2975) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:306) –> [main] Optimize cache for minimal puts: disabled  
[DEBUG] 2015-12-01 15:14:20,110(2977) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:321) –> [main] Structured second-level cache entries: disabled  
[DEBUG] 2015-12-01 15:14:20,110(2977) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:331) –> [main] Second-level cache direct-reference entries: disabled  
[DEBUG] 2015-12-01 15:14:20,115(2982) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:339) –> [main] Statistics: disabled  
[DEBUG] 2015-12-01 15:14:20,116(2983) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:345) –> [main] Deleted entity synthetic identifier rollback: disabled  
[DEBUG] 2015-12-01 15:14:20,118(2985) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:372) –> [main] Default entity-mode: pojo  
[DEBUG] 2015-12-01 15:14:20,118(2985) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:378) –> [main] Named query checking : enabled  
[DEBUG] 2015-12-01 15:14:20,119(2986) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:384) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): enabled  
[DEBUG] 2015-12-01 15:14:20,119(2986) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:402) –> [main] Allow initialization of lazy state outside session : : disabled  
[DEBUG] 2015-12-01 15:14:20,120(2987) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:412) –> [main] JTA Track by Thread: enabled  
[DEBUG] 2015-12-01 15:14:20,120(2987) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Building session factory  
[DEBUG] 2015-12-01 15:14:20,124(2991) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:280) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-12-01 15:14:20,125(2992) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:281) –> [main] Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=D:\Java\jdk1.8.0_40\jre\bin, java.vm.version=25.40-b25, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\Java\workspace\demo-chained-transactionmanager, java.runtime.version=1.8.0_40-b26, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=managed, java.endorsed.dirs=D:\Java\jdk1.8.0_40\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\奇点之~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8.1, sun.jnu.encoding=GBK, java.library.path=D:\Java\jdk1.8.0_40\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/jdk1.8.0_40/bin/../jre/bin/server;D:/Java/jdk1.8.0_40/bin/../jre/bin;D:/Java/jdk1.8.0_40/bin/../jre/lib/amd64;D:\Java\jdk1.8.0_40/bin;D:\Java\jdk1.8.0_40/lib/dt.jar;D:\Java\jdk1.8.0_40/lib/tools.jar;D:\__ENV__\apache-maven-3.2.1/bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__ENV__\apache-tomcat-7.0.57\bin;D:\__ENV__\apache-tomcat-7.0.57\jre;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\TortoiseSVN\bin;D:\__ENV__\eclipse;;., hibernate.connection.datasource=org.apache.commons.dbcp.BasicDataSource@32f61a31, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=6.3, user.home=C:\Users\奇点之光08老师, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=奇点之光08老师, java.class.path=D:\Java\workspace\demo-chained-transactionmanager\target\test-classes;D:\Java\workspace\demo-chained-transactionmanager\target\classes;D:\__ENV__\repo\ch\qos\logback\logback-core\0.9.28\logback-core-0.9.28.jar;D:\__ENV__\repo\ch\qos\logback\logback-classic\0.9.28\logback-classic-0.9.28.jar;D:\__ENV__\repo\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;D:\__ENV__\repo\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;D:\__ENV__\repo\org\slf4j\slf4j-api\1.7.7\slf4j-api-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-jdk14\1.7.7\slf4j-jdk14-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-log4j12\1.7.7\slf4j-log4j12-1.7.7.jar;D:\__ENV__\repo\mysql\mysql-connector-java\5.1.26\mysql-connector-java-5.1.26.jar;D:\__ENV__\repo\log4j\log4j\1.2.14\log4j-1.2.14.jar;D:\__ENV__\repo\org\springframework\data\spring-data-commons\1.8.0.RELEASE\spring-data-commons-1.8.0.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\slf4j\jcl-over-slf4j\1.7.7\jcl-over-slf4j-1.7.7.jar;D:\__ENV__\repo\org\springframework\spring-context\3.2.4.RELEASE\spring-context-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-aop\3.2.4.RELEASE\spring-aop-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-expression\3.2.4.RELEASE\spring-expression-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-oxm\3.2.4.RELEASE\spring-oxm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\__ENV__\repo\org\springframework\spring-web\3.2.4.RELEASE\spring-web-3.2.4.RELEASE.jar;D:\__ENV__\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\__ENV__\repo\org\springframework\spring-webmvc\3.2.4.RELEASE\spring-webmvc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-orm\3.2.4.RELEASE\spring-orm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-jdbc\3.2.4.RELEASE\spring-jdbc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-tx\3.2.4.RELEASE\spring-tx-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-test\3.2.4.RELEASE\spring-test-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\__ENV__\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\__ENV__\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\__ENV__\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\__ENV__\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-validator\4.2.0.Final\hibernate-validator-4.2.0.Final.jar;D:\__ENV__\repo\javax\validation\validation-api\1.0.0.GA\validation-api-1.0.0.GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-core\4.2.10.Final\hibernate-core-4.2.10.Final.jar;D:\__ENV__\repo\antlr\antlr\2.7.7\antlr-2.7.7.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.1.Final\jboss-transaction-api_1.1_spec-1.0.1.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpcore\4.3.1\httpcore-4.3.1.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpclient\4.3.1\httpclient-4.3.1.jar;D:\__ENV__\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\__ENV__\repo\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpmime\4.3.1\httpmime-4.3.1.jar;D:\__ENV__\repo\redis\clients\jedis\2.7.2\jedis-2.7.2.jar;D:\__ENV__\repo\org\apache\commons\commons-pool2\2.3\commons-pool2-2.3.jar;D:\__ENV__\repo\javax\persistence\persistence-api\1.0.2\persistence-api-1.0.2.jar;D:\__ENV__\repo\org\ansj\ansj_seg\0.9\ansj_seg-0.9.jar;D:\__ENV__\repo\org\ansj\tree_split\1.0.1\tree_split-1.0.1.jar;D:\__ENV__\repo\org\apache\commons-lang3\commons-lang3\3.1\commons-lang3-3.1.jar;D:\__ENV__\repo\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;D:\__ENV__\repo\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;D:\__ENV__\repo\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;D:\__ENV__\repo\commons-io\commons-io\2.4\commons-io-2.4.jar;D:\__ENV__\repo\commons-fileupload\commons-fileupload\1.2.2\commons-fileupload-1.2.2.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\__ENV__\repo\com\googlecode\xmemcached\xmemcached\1.4.1\xmemcached-1.4.1.jar;D:\__ENV__\repo\net\sf\json-lib\json-lib\2.4\json-lib-2.4-jdk15.jar;D:\__ENV__\repo\commons-beanutils\commons-beanutils\1.8.0\commons-beanutils-1.8.0.jar;D:\__ENV__\repo\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;D:\__ENV__\repo\net\sf\ezmorph\ezmorph\1.0.6\ezmorph-1.0.6.jar;D:\__ENV__\repo\org\mybatis\mybatis\3.1.1\mybatis-3.1.1.jar;D:\__ENV__\repo\org\mybatis\mybatis-spring\1.1.1\mybatis-spring-1.1.1.jar;D:\__ENV__\repo\junit\junit\4.11\junit-4.11.jar;D:\__ENV__\repo\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/358/1/.cp/;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/357/1/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.classLoader.application=sun.misc.Launcher$AppClassLoader@3b07d329, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=D:\Java\jdk1.8.0_40\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 60917 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -test com.it_sucre.service.HibernateServiceTest:test, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_40, java.ext.dirs=D:\Java\jdk1.8.0_40\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=D:\Java\jdk1.8.0_40\jre\lib\resources.jar;D:\Java\jdk1.8.0_40\jre\lib\rt.jar;D:\Java\jdk1.8.0_40\jre\lib\sunrsasign.jar;D:\Java\jdk1.8.0_40\jre\lib\jsse.jar;D:\Java\jdk1.8.0_40\jre\lib\jce.jar;D:\Java\jdk1.8.0_40\jre\lib\charsets.jar;D:\Java\jdk1.8.0_40\jre\lib\jfr.jar;D:\Java\jdk1.8.0_40\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}  
[DEBUG] 2015-12-01 15:14:20,149(3016) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[DEBUG] 2015-12-01 15:14:20,152(3019) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3604) –> [main] Static SQL for entity: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:14:20,153(3020) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3609) –> [main]  Version select: select id from test where id =?  
[DEBUG] 2015-12-01 15:14:20,154(3021) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3612) –> [main]  Snapshot select: select testentity_.id, testentity_.name as name2_0_ from test testentity_ where testentity_.id=?  
[DEBUG] 2015-12-01 15:14:20,154(3021) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3615) –> [main]  Insert 0: insert into test (name, id) values (?, ?)  
[DEBUG] 2015-12-01 15:14:20,155(3022) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3616) –> [main]  Update 0: update test set name=? where id=?  
[DEBUG] 2015-12-01 15:14:20,156(3023) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3617) –> [main]  Delete 0: delete from test where id=?  
[DEBUG] 2015-12-01 15:14:20,157(3024) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [NONE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:14:20,158(3025) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:14:20,159(3026) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:14:20,160(3027) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE_NOWAIT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:14:20,161(3028) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [FORCE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:14:20,161(3028) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? lock in share mode  
[DEBUG] 2015-12-01 15:14:20,162(3029) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_WRITE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:14:20,163(3030) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:14:20,164(3031) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:14:20,165(3032) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:14:20,168(3035) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:14:20,169(3036) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:14:20,171(3038) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:75) –> [main] Registering SessionFactory: 858cb1dc-f23e-4597-835c-48df7b812455 (<unnamed>)  
[DEBUG] 2015-12-01 15:14:20,172(3039) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:82) –> [main] Not binding SessionFactory to JNDI, no JNDI name configured  
[DEBUG] 2015-12-01 15:14:20,178(3045) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:492) –> [main] Instantiated session factory  
[INFO ] 2015-12-01 15:14:20,179(3046) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:182) –> [main] HHH000228: Running hbm2ddl schema update  
[INFO ] 2015-12-01 15:14:20,179(3046) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:193) –> [main] HHH000102: Fetching database metadata  
[INFO ] 2015-12-01 15:14:20,180(3047) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:205) –> [main] HHH000396: Updating schema  
[DEBUG] 2015-12-01 15:14:20,180(3047) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:14:20,181(3048) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:14:20,181(3048) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:14:20,183(3050) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:14:20,183(3050) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:14:20,184(3051) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:14:20,184(3051) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:14:20,185(3052) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:14:20,185(3052) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:14:20,186(3053) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[INFO ] 2015-12-01 15:14:20,207(3074) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] HHH000261: Table found: Test.test  
[INFO ] 2015-12-01 15:14:20,208(3075) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:67) –> [main] HHH000037: Columns: [name, id]  
[INFO ] 2015-12-01 15:14:20,208(3075) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] HHH000108: Foreign keys: []  
[INFO ] 2015-12-01 15:14:20,208(3075) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:70) –> [main] HHH000126: Indexes: [primary]  
[DEBUG] 2015-12-01 15:14:20,209(3076) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-12-01 15:14:20,210(3077) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:242) –> [main] HHH000232: Schema update complete  
[DEBUG] 2015-12-01 15:14:20,211(3078) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1073) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-12-01 15:14:20,211(3078) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1096) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-12-01 15:14:20,212(3079) org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:110) –> [main] Statistics initialized [enabled=false]  
[DEBUG] 2015-12-01 15:14:20,779(3646) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:212) –> [main] Obtaining JDBC connection  
[DEBUG] 2015-12-01 15:14:20,780(3647) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:218) –> [main] Obtained JDBC connection  
[DEBUG] 2015-12-01 15:14:20,806(3673) org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) –> [main] begin  
[DEBUG] 2015-12-01 15:14:20,811(3678) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) –> [main] initial autocommit status: true  
[DEBUG] 2015-12-01 15:14:20,812(3679) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) –> [main] disabling autocommit  
[DEBUG] 2015-12-01 15:14:20,819(3686) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:212) –> [main] Obtaining JDBC connection  
[DEBUG] 2015-12-01 15:14:20,820(3687) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:218) –> [main] Obtained JDBC connection  
[DEBUG] 2015-12-01 15:14:20,820(3687) org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) –> [main] begin  
[DEBUG] 2015-12-01 15:14:20,820(3687) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) –> [main] initial autocommit status: true  
[DEBUG] 2015-12-01 15:14:20,821(3688) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) –> [main] disabling autocommit  
[DEBUG] 2015-12-01 15:14:20,880(3747) org.hibernate.engine.transaction.spi.AbstractTransactionImpl.rollback(AbstractTransactionImpl.java:203) –> [main] rolling back  
[DEBUG] 2015-12-01 15:14:20,881(3748) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doRollback(JdbcTransaction.java:164) –> [main] rolled JDBC Connection  
[DEBUG] 2015-12-01 15:14:20,882(3749) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) –> [main] re-enabling autocommit  
[DEBUG] 2015-12-01 15:14:20,889(3756) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:232) –> [main] Releasing JDBC connection  
[DEBUG] 2015-12-01 15:14:20,890(3757) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:250) –> [main] Released JDBC connection  
[DEBUG] 2015-12-01 15:14:20,896(3763) org.hibernate.engine.transaction.spi.AbstractTransactionImpl.rollback(AbstractTransactionImpl.java:203) –> [main] rolling back  
[DEBUG] 2015-12-01 15:14:20,897(3764) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doRollback(JdbcTransaction.java:164) –> [main] rolled JDBC Connection  
[DEBUG] 2015-12-01 15:14:20,898(3765) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) –> [main] re-enabling autocommit  
[DEBUG] 2015-12-01 15:14:20,900(3767) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:232) –> [main] Releasing JDBC connection  
[DEBUG] 2015-12-01 15:14:20,901(3768) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:250) –> [main] Released JDBC connection  
[DEBUG] 2015-12-01 15:14:20,921(3788) org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1374) –> [Thread-2] HHH000031: Closing  
[DEBUG] 2015-12-01 15:14:20,925(3792) org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1374) –> [Thread-2] HHH000031: Closing  
[DEBUG] 2015-12-01 15:15:20,240(0) org.hibernate.cfg.Configuration.<clinit>(Configuration.java:184) –> [main] Logging Provider: org.jboss.logging.Log4jLoggerProvider  
[DEBUG] 2015-12-01 15:15:20,271(31) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@48974e45  
[DEBUG] 2015-12-01 15:15:20,271(31) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@48974e45  
[DEBUG] 2015-12-01 15:15:20,271(31) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@48974e45  
[DEBUG] 2015-12-01 15:15:20,271(31) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@57af006c  
[DEBUG] 2015-12-01 15:15:20,271(31) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@446293d  
[DEBUG] 2015-12-01 15:15:20,271(31) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@37654521  
[DEBUG] 2015-12-01 15:15:20,286(46) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2  
[DEBUG] 2015-12-01 15:15:20,286(46) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2  
[DEBUG] 2015-12-01 15:15:20,286(46) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7ea9e1e2  
[DEBUG] 2015-12-01 15:15:20,286(46) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@2053d869  
[DEBUG] 2015-12-01 15:15:20,286(46) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@2053d869  
[DEBUG] 2015-12-01 15:15:20,286(46) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2053d869  
[DEBUG] 2015-12-01 15:15:20,286(46) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@10d307f1  
[DEBUG] 2015-12-01 15:15:20,302(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@10d307f1  
[DEBUG] 2015-12-01 15:15:20,302(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@10d307f1  
[DEBUG] 2015-12-01 15:15:20,302(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@63a12c68  
[DEBUG] 2015-12-01 15:15:20,302(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@63a12c68  
[DEBUG] 2015-12-01 15:15:20,302(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@63a12c68  
[DEBUG] 2015-12-01 15:15:20,302(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@fba92d3  
[DEBUG] 2015-12-01 15:15:20,302(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@fba92d3  
[DEBUG] 2015-12-01 15:15:20,302(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@fba92d3  
[DEBUG] 2015-12-01 15:15:20,302(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@156b88f5  
[DEBUG] 2015-12-01 15:15:20,318(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@156b88f5  
[DEBUG] 2015-12-01 15:15:20,318(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@156b88f5  
[DEBUG] 2015-12-01 15:15:20,318(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@7133da86  
[DEBUG] 2015-12-01 15:15:20,318(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@7133da86  
[DEBUG] 2015-12-01 15:15:20,318(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7133da86  
[DEBUG] 2015-12-01 15:15:20,318(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2fb3536e  
[DEBUG] 2015-12-01 15:15:20,318(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2fb3536e  
[DEBUG] 2015-12-01 15:15:20,333(93) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3b6ddd1d  
[DEBUG] 2015-12-01 15:15:20,333(93) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3b6ddd1d  
[DEBUG] 2015-12-01 15:15:20,333(93) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration string -> org.hibernate.type.StringType@1a18644  
[DEBUG] 2015-12-01 15:15:20,333(93) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@1a18644  
[DEBUG] 2015-12-01 15:15:20,333(93) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1e04fa0a  
[DEBUG] 2015-12-01 15:15:20,349(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@f5acb9d  
[DEBUG] 2015-12-01 15:15:20,349(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration url -> org.hibernate.type.UrlType@7bd4937b  
[DEBUG] 2015-12-01 15:15:20,349(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@7bd4937b  
[DEBUG] 2015-12-01 15:15:20,349(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration date -> org.hibernate.type.DateType@209da20d  
[DEBUG] 2015-12-01 15:15:20,349(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@209da20d  
[DEBUG] 2015-12-01 15:15:20,349(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration time -> org.hibernate.type.TimeType@5d0a1059  
[DEBUG] 2015-12-01 15:15:20,349(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5d0a1059  
[DEBUG] 2015-12-01 15:15:20,349(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@37d4349f  
[DEBUG] 2015-12-01 15:15:20,349(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@37d4349f  
[DEBUG] 2015-12-01 15:15:20,365(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@37d4349f  
[DEBUG] 2015-12-01 15:15:20,365(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3a44431a  
[DEBUG] 2015-12-01 15:15:20,365(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@ffaa6af  
[DEBUG] 2015-12-01 15:15:20,365(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@ffaa6af  
[DEBUG] 2015-12-01 15:15:20,365(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@ffaa6af  
[DEBUG] 2015-12-01 15:15:20,365(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@729d991e  
[DEBUG] 2015-12-01 15:15:20,365(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@66f57048  
[DEBUG] 2015-12-01 15:15:20,380(140) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@66f57048  
[DEBUG] 2015-12-01 15:15:20,380(140) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@1e1a0406  
[DEBUG] 2015-12-01 15:15:20,380(140) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1e1a0406  
[DEBUG] 2015-12-01 15:15:20,380(140) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@71a8adcf  
[DEBUG] 2015-12-01 15:15:20,380(140) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@71a8adcf  
[DEBUG] 2015-12-01 15:15:20,380(140) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration class -> org.hibernate.type.ClassType@61001b64  
[DEBUG] 2015-12-01 15:15:20,380(140) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@61001b64  
[DEBUG] 2015-12-01 15:15:20,380(140) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@55634720  
[DEBUG] 2015-12-01 15:15:20,380(140) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@55634720  
[DEBUG] 2015-12-01 15:15:20,380(140) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2d710f1a  
[DEBUG] 2015-12-01 15:15:20,396(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@13fd2ccd  
[DEBUG] 2015-12-01 15:15:20,396(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@53aac487  
[DEBUG] 2015-12-01 15:15:20,396(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@53aac487  
[DEBUG] 2015-12-01 15:15:20,396(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@53aac487  
[DEBUG] 2015-12-01 15:15:20,396(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2d52216b  
[DEBUG] 2015-12-01 15:15:20,396(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2d52216b  
[DEBUG] 2015-12-01 15:15:20,411(171) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2d52216b  
[DEBUG] 2015-12-01 15:15:20,411(171) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration image -> org.hibernate.type.ImageType@4f80542f  
[DEBUG] 2015-12-01 15:15:20,411(171) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@5d534f5d  
[DEBUG] 2015-12-01 15:15:20,411(171) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@5d534f5d  
[DEBUG] 2015-12-01 15:15:20,411(171) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@5d534f5d  
[DEBUG] 2015-12-01 15:15:20,458(218) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6221a451  
[DEBUG] 2015-12-01 15:15:20,458(218) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6221a451  
[DEBUG] 2015-12-01 15:15:20,458(218) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6221a451  
[DEBUG] 2015-12-01 15:15:20,458(218) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration text -> org.hibernate.type.TextType@5677323c  
[DEBUG] 2015-12-01 15:15:20,474(234) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ntext -> org.hibernate.type.NTextType@1e0b4072  
[DEBUG] 2015-12-01 15:15:20,490(250) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@2892d68  
[DEBUG] 2015-12-01 15:15:20,490(250) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2892d68  
[DEBUG] 2015-12-01 15:15:20,505(265) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2e385cce  
[DEBUG] 2015-12-01 15:15:20,505(265) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@7d0b7e3c  
[DEBUG] 2015-12-01 15:15:20,505(265) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7d0b7e3c  
[DEBUG] 2015-12-01 15:15:20,521(281) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nclob -> org.hibernate.type.NClobType@117159c0  
[DEBUG] 2015-12-01 15:15:20,521(281) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@117159c0  
[DEBUG] 2015-12-01 15:15:20,521(281) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@235ecd9f  
[DEBUG] 2015-12-01 15:15:20,521(281) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@75d3a5e0  
[DEBUG] 2015-12-01 15:15:20,521(281) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@19e4653c  
[DEBUG] 2015-12-01 15:15:20,537(297) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@742ff096  
[DEBUG] 2015-12-01 15:15:20,537(297) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@742ff096  
[DEBUG] 2015-12-01 15:15:20,537(297) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@79e4c792  
[DEBUG] 2015-12-01 15:15:20,537(297) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4c60d6e9  
[DEBUG] 2015-12-01 15:15:20,537(297) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4a83a74a  
[DEBUG] 2015-12-01 15:15:20,537(297) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4b29d1d2  
[DEBUG] 2015-12-01 15:15:20,537(297) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@28261e8e  
[DEBUG] 2015-12-01 15:15:20,537(297) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@8519cb4  
[DEBUG] 2015-12-01 15:15:20,537(297) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2d901eb0  
[DEBUG] 2015-12-01 15:15:20,537(297) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3f191845  
[INFO ] 2015-12-01 15:15:20,568(328) org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66) –> [main] HCANN000001: Hibernate Commons Annotations {4.0.4.Final}  
[INFO ] 2015-12-01 15:15:20,583(343) org.hibernate.Version.logVersion(Version.java:41) –> [main] HHH000412: Hibernate Core {4.2.10.Final}  
[INFO ] 2015-12-01 15:15:20,583(343) org.hibernate.cfg.Environment.<clinit>(Environment.java:238) –> [main] HHH000206: hibernate.properties not found  
[INFO ] 2015-12-01 15:15:20,599(359) org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:345) –> [main] HHH000021: Bytecode provider name : javassist  
[DEBUG] 2015-12-01 15:15:20,615(375) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-12-01 15:15:20,615(375) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-12-01 15:15:20,615(375) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:15:20,615(375) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:15:20,615(375) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-12-01 15:15:20,615(375) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]  
[DEBUG] 2015-12-01 15:15:20,630(390) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-12-01 15:15:20,630(390) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-12-01 15:15:20,630(390) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-12-01 15:15:20,630(390) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-12-01 15:15:20,630(390) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-12-01 15:15:20,646(406) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-12-01 15:15:20,646(406) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-12-01 15:15:20,646(406) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-12-01 15:15:20,646(406) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]  
[DEBUG] 2015-12-01 15:15:20,693(453) org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) –> [main] Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].  
[DEBUG] 2015-12-01 15:15:20,724(484) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1781) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-12-01 15:15:21,146(906) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:121) –> [main] Database ->
       name : MySQL
    version : 5.6.22
      major : 5
      minor : 6  
[DEBUG] 2015-12-01 15:15:21,147(907) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:127) –> [main] Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[DEBUG] 2015-12-01 15:15:21,147(907) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:133) –> [main] JDBC version : 4.0  
[INFO ] 2015-12-01 15:15:21,180(940) org.hibernate.dialect.Dialect.<init>(Dialect.java:130) –> [main] HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-12-01 15:15:21,195(955) org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:120) –> [main] HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException  
[DEBUG] 2015-12-01 15:15:21,242(1002) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:15:21,242(1002) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:15:21,242(1002) org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:534) –> [main] Binding entity from annotated class: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:15:21,289(1049) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}  
[DEBUG] 2015-12-01 15:15:21,305(1065) org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1118) –> [main] No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED  
[DEBUG] 2015-12-01 15:15:21,336(1096) org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:394) –> [main] Import with entity name TestEntity  
[DEBUG] 2015-12-01 15:15:21,351(1111) org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:564) –> [main] Bind entity com.it_sucre.entity.TestEntity on table test  
[DEBUG] 2015-12-01 15:15:21,383(1143) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=id, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:15:21,398(1158) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property id with lazy=false  
[DEBUG] 2015-12-01 15:15:21,414(1174) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for id  
[DEBUG] 2015-12-01 15:15:21,414(1174) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property id  
[DEBUG] 2015-12-01 15:15:21,430(1190) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=name, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:15:21,430(1190) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property name with lazy=false  
[DEBUG] 2015-12-01 15:15:21,430(1190) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for name  
[DEBUG] 2015-12-01 15:15:21,430(1190) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property name  
[DEBUG] 2015-12-01 15:15:21,430(1190) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for id  
[DEBUG] 2015-12-01 15:15:21,430(1190) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for name  
[DEBUG] 2015-12-01 15:15:21,430(1190) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:15:21,445(1205) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:15:21,445(1205) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:15:21,445(1205) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:15:21,445(1205) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:15:21,445(1205) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:15:21,445(1205) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:15:21,445(1205) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[DEBUG] 2015-12-01 15:15:21,461(1221) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:117) –> [main] Automatic flush during beforeCompletion(): disabled  
[DEBUG] 2015-12-01 15:15:21,461(1221) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:123) –> [main] Automatic session close at end of transaction: disabled  
[DEBUG] 2015-12-01 15:15:21,461(1221) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:134) –> [main] JDBC batch size: 15  
[DEBUG] 2015-12-01 15:15:21,461(1221) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:140) –> [main] JDBC batch updates for versioned data: disabled  
[DEBUG] 2015-12-01 15:15:21,461(1221) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:150) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-12-01 15:15:21,461(1221) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:156) –> [main] Wrap result sets: disabled  
[DEBUG] 2015-12-01 15:15:21,476(1236) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:162) –> [main] JDBC3 getGeneratedKeys(): enabled  
[DEBUG] 2015-12-01 15:15:21,476(1236) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:174) –> [main] multi-tenancy strategy : NONE  
[DEBUG] 2015-12-01 15:15:21,476(1236) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:180) –> [main] Connection release mode: auto  
[INFO ] 2015-12-01 15:15:21,476(1236) org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:68) –> [main] HHH000399: Using default transaction strategy (direct JDBC transactions)  
[DEBUG] 2015-12-01 15:15:21,476(1236) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Using BatchFetchStyle : LEGACY  
[DEBUG] 2015-12-01 15:15:21,476(1236) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:221) –> [main] Maximum outer join fetch depth: 2  
[DEBUG] 2015-12-01 15:15:21,476(1236) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:227) –> [main] Default batch fetch size: 1  
[DEBUG] 2015-12-01 15:15:21,476(1236) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:233) –> [main] Generate SQL with comments: disabled  
[DEBUG] 2015-12-01 15:15:21,476(1236) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:239) –> [main] Order SQL updates by primary key: disabled  
[DEBUG] 2015-12-01 15:15:21,476(1236) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Order SQL inserts for batching: disabled  
[DEBUG] 2015-12-01 15:15:21,476(1236) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Default null ordering: none  
[DEBUG] 2015-12-01 15:15:21,476(1236) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:584) –> [main] Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-12-01 15:15:21,508(1268) org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) –> [main] HHH000397: Using ASTQueryTranslatorFactory  
[DEBUG] 2015-12-01 15:15:21,508(1268) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:263) –> [main] Query language substitutions: {}  
[DEBUG] 2015-12-01 15:15:21,508(1268) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:269) –> [main] JPA-QL strict compliance: disabled  
[DEBUG] 2015-12-01 15:15:21,508(1268) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:277) –> [main] Second-level cache: enabled  
[DEBUG] 2015-12-01 15:15:21,508(1268) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:283) –> [main] Query cache: disabled  
[DEBUG] 2015-12-01 15:15:21,508(1268) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:524) –> [main] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory  
[DEBUG] 2015-12-01 15:15:21,508(1268) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:534) –> [main] org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.  
[DEBUG] 2015-12-01 15:15:21,508(1268) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:306) –> [main] Optimize cache for minimal puts: disabled  
[DEBUG] 2015-12-01 15:15:21,508(1268) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:321) –> [main] Structured second-level cache entries: disabled  
[DEBUG] 2015-12-01 15:15:21,508(1268) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:331) –> [main] Second-level cache direct-reference entries: disabled  
[DEBUG] 2015-12-01 15:15:21,508(1268) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:339) –> [main] Statistics: disabled  
[DEBUG] 2015-12-01 15:15:21,508(1268) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:345) –> [main] Deleted entity synthetic identifier rollback: disabled  
[DEBUG] 2015-12-01 15:15:21,523(1283) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:372) –> [main] Default entity-mode: pojo  
[DEBUG] 2015-12-01 15:15:21,523(1283) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:378) –> [main] Named query checking : enabled  
[DEBUG] 2015-12-01 15:15:21,523(1283) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:384) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): enabled  
[DEBUG] 2015-12-01 15:15:21,523(1283) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:402) –> [main] Allow initialization of lazy state outside session : : disabled  
[DEBUG] 2015-12-01 15:15:21,523(1283) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:412) –> [main] JTA Track by Thread: enabled  
[DEBUG] 2015-12-01 15:15:21,539(1299) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Building session factory  
[DEBUG] 2015-12-01 15:15:21,555(1315) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:280) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-12-01 15:15:21,555(1315) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:281) –> [main] Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=D:\Java\jdk1.8.0_40\jre\bin, java.vm.version=25.40-b25, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\Java\workspace\demo-chained-transactionmanager, java.runtime.version=1.8.0_40-b26, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=thread, java.endorsed.dirs=D:\Java\jdk1.8.0_40\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\奇点之~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8.1, sun.jnu.encoding=GBK, java.library.path=D:\Java\jdk1.8.0_40\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/jdk1.8.0_40/bin/../jre/bin/server;D:/Java/jdk1.8.0_40/bin/../jre/bin;D:/Java/jdk1.8.0_40/bin/../jre/lib/amd64;D:\Java\jdk1.8.0_40/bin;D:\Java\jdk1.8.0_40/lib/dt.jar;D:\Java\jdk1.8.0_40/lib/tools.jar;D:\__ENV__\apache-maven-3.2.1/bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__ENV__\apache-tomcat-7.0.57\bin;D:\__ENV__\apache-tomcat-7.0.57\jre;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\TortoiseSVN\bin;D:\__ENV__\eclipse;;., hibernate.connection.datasource=org.apache.commons.dbcp.BasicDataSource@2320fa6f, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=6.3, user.home=C:\Users\奇点之光08老师, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=奇点之光08老师, java.class.path=D:\Java\workspace\demo-chained-transactionmanager\target\test-classes;D:\Java\workspace\demo-chained-transactionmanager\target\classes;D:\__ENV__\repo\ch\qos\logback\logback-core\0.9.28\logback-core-0.9.28.jar;D:\__ENV__\repo\ch\qos\logback\logback-classic\0.9.28\logback-classic-0.9.28.jar;D:\__ENV__\repo\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;D:\__ENV__\repo\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;D:\__ENV__\repo\org\slf4j\slf4j-api\1.7.7\slf4j-api-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-jdk14\1.7.7\slf4j-jdk14-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-log4j12\1.7.7\slf4j-log4j12-1.7.7.jar;D:\__ENV__\repo\mysql\mysql-connector-java\5.1.26\mysql-connector-java-5.1.26.jar;D:\__ENV__\repo\log4j\log4j\1.2.14\log4j-1.2.14.jar;D:\__ENV__\repo\org\springframework\data\spring-data-commons\1.8.0.RELEASE\spring-data-commons-1.8.0.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\slf4j\jcl-over-slf4j\1.7.7\jcl-over-slf4j-1.7.7.jar;D:\__ENV__\repo\org\springframework\spring-context\3.2.4.RELEASE\spring-context-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-aop\3.2.4.RELEASE\spring-aop-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-expression\3.2.4.RELEASE\spring-expression-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-oxm\3.2.4.RELEASE\spring-oxm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\__ENV__\repo\org\springframework\spring-web\3.2.4.RELEASE\spring-web-3.2.4.RELEASE.jar;D:\__ENV__\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\__ENV__\repo\org\springframework\spring-webmvc\3.2.4.RELEASE\spring-webmvc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-orm\3.2.4.RELEASE\spring-orm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-jdbc\3.2.4.RELEASE\spring-jdbc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-tx\3.2.4.RELEASE\spring-tx-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-test\3.2.4.RELEASE\spring-test-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\__ENV__\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\__ENV__\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\__ENV__\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\__ENV__\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-validator\4.2.0.Final\hibernate-validator-4.2.0.Final.jar;D:\__ENV__\repo\javax\validation\validation-api\1.0.0.GA\validation-api-1.0.0.GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-core\4.2.10.Final\hibernate-core-4.2.10.Final.jar;D:\__ENV__\repo\antlr\antlr\2.7.7\antlr-2.7.7.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.1.Final\jboss-transaction-api_1.1_spec-1.0.1.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpcore\4.3.1\httpcore-4.3.1.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpclient\4.3.1\httpclient-4.3.1.jar;D:\__ENV__\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\__ENV__\repo\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpmime\4.3.1\httpmime-4.3.1.jar;D:\__ENV__\repo\redis\clients\jedis\2.7.2\jedis-2.7.2.jar;D:\__ENV__\repo\org\apache\commons\commons-pool2\2.3\commons-pool2-2.3.jar;D:\__ENV__\repo\javax\persistence\persistence-api\1.0.2\persistence-api-1.0.2.jar;D:\__ENV__\repo\org\ansj\ansj_seg\0.9\ansj_seg-0.9.jar;D:\__ENV__\repo\org\ansj\tree_split\1.0.1\tree_split-1.0.1.jar;D:\__ENV__\repo\org\apache\commons-lang3\commons-lang3\3.1\commons-lang3-3.1.jar;D:\__ENV__\repo\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;D:\__ENV__\repo\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;D:\__ENV__\repo\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;D:\__ENV__\repo\commons-io\commons-io\2.4\commons-io-2.4.jar;D:\__ENV__\repo\commons-fileupload\commons-fileupload\1.2.2\commons-fileupload-1.2.2.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\__ENV__\repo\com\googlecode\xmemcached\xmemcached\1.4.1\xmemcached-1.4.1.jar;D:\__ENV__\repo\net\sf\json-lib\json-lib\2.4\json-lib-2.4-jdk15.jar;D:\__ENV__\repo\commons-beanutils\commons-beanutils\1.8.0\commons-beanutils-1.8.0.jar;D:\__ENV__\repo\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;D:\__ENV__\repo\net\sf\ezmorph\ezmorph\1.0.6\ezmorph-1.0.6.jar;D:\__ENV__\repo\org\mybatis\mybatis\3.1.1\mybatis-3.1.1.jar;D:\__ENV__\repo\org\mybatis\mybatis-spring\1.1.1\mybatis-spring-1.1.1.jar;D:\__ENV__\repo\junit\junit\4.11\junit-4.11.jar;D:\__ENV__\repo\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/358/1/.cp/;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/357/1/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.classLoader.application=sun.misc.Launcher$AppClassLoader@3b07d329, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=D:\Java\jdk1.8.0_40\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 60941 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -test com.it_sucre.service.HibernateServiceTest:test, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_40, java.ext.dirs=D:\Java\jdk1.8.0_40\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=D:\Java\jdk1.8.0_40\jre\lib\resources.jar;D:\Java\jdk1.8.0_40\jre\lib\rt.jar;D:\Java\jdk1.8.0_40\jre\lib\sunrsasign.jar;D:\Java\jdk1.8.0_40\jre\lib\jsse.jar;D:\Java\jdk1.8.0_40\jre\lib\jce.jar;D:\Java\jdk1.8.0_40\jre\lib\charsets.jar;D:\Java\jdk1.8.0_40\jre\lib\jfr.jar;D:\Java\jdk1.8.0_40\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}  
[DEBUG] 2015-12-01 15:15:21,773(1533) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[DEBUG] 2015-12-01 15:15:22,133(1893) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3604) –> [main] Static SQL for entity: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:15:22,133(1893) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3609) –> [main]  Version select: select id from test where id =?  
[DEBUG] 2015-12-01 15:15:22,153(1913) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3612) –> [main]  Snapshot select: select testentity_.id, testentity_.name as name2_0_ from test testentity_ where testentity_.id=?  
[DEBUG] 2015-12-01 15:15:22,154(1914) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3615) –> [main]  Insert 0: insert into test (name, id) values (?, ?)  
[DEBUG] 2015-12-01 15:15:22,154(1914) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3616) –> [main]  Update 0: update test set name=? where id=?  
[DEBUG] 2015-12-01 15:15:22,154(1914) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3617) –> [main]  Delete 0: delete from test where id=?  
[DEBUG] 2015-12-01 15:15:22,201(1961) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [NONE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:15:22,217(1977) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:15:22,217(1977) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:15:22,217(1977) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE_NOWAIT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:15:22,217(1977) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [FORCE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:15:22,217(1977) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? lock in share mode  
[DEBUG] 2015-12-01 15:15:22,217(1977) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_WRITE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:15:22,217(1977) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:15:22,217(1977) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:15:22,217(1977) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:15:22,248(2008) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:15:22,248(2008) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:15:22,399(2159) org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:62) –> [main] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@16423501  
[DEBUG] 2015-12-01 15:15:22,401(2161) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:75) –> [main] Registering SessionFactory: 842e450f-3925-48d3-b7fe-d73d3e1789c5 (<unnamed>)  
[DEBUG] 2015-12-01 15:15:22,402(2162) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:82) –> [main] Not binding SessionFactory to JNDI, no JNDI name configured  
[DEBUG] 2015-12-01 15:15:22,403(2163) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:492) –> [main] Instantiated session factory  
[INFO ] 2015-12-01 15:15:22,418(2178) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:182) –> [main] HHH000228: Running hbm2ddl schema update  
[INFO ] 2015-12-01 15:15:22,419(2179) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:193) –> [main] HHH000102: Fetching database metadata  
[INFO ] 2015-12-01 15:15:22,426(2186) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:205) –> [main] HHH000396: Updating schema  
[DEBUG] 2015-12-01 15:15:22,428(2188) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:15:22,429(2189) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:15:22,430(2190) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:15:22,431(2191) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:15:22,431(2191) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:15:22,432(2192) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:15:22,432(2192) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:15:22,433(2193) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:15:22,434(2194) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:15:22,434(2194) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[INFO ] 2015-12-01 15:15:22,511(2271) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] HHH000261: Table found: Test.test  
[INFO ] 2015-12-01 15:15:22,522(2282) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:67) –> [main] HHH000037: Columns: [name, id]  
[INFO ] 2015-12-01 15:15:22,524(2284) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] HHH000108: Foreign keys: []  
[INFO ] 2015-12-01 15:15:22,525(2285) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:70) –> [main] HHH000126: Indexes: [primary]  
[DEBUG] 2015-12-01 15:15:22,526(2286) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-12-01 15:15:22,529(2289) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:242) –> [main] HHH000232: Schema update complete  
[DEBUG] 2015-12-01 15:15:22,552(2312) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1073) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-12-01 15:15:22,552(2312) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1096) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-12-01 15:15:22,577(2337) org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:110) –> [main] Statistics initialized [enabled=false]  
[DEBUG] 2015-12-01 15:15:22,674(2434) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@48974e45  
[DEBUG] 2015-12-01 15:15:22,674(2434) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@48974e45  
[DEBUG] 2015-12-01 15:15:22,675(2435) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@48974e45  
[DEBUG] 2015-12-01 15:15:22,676(2436) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@57af006c  
[DEBUG] 2015-12-01 15:15:22,699(2459) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@446293d  
[DEBUG] 2015-12-01 15:15:22,702(2462) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@37654521  
[DEBUG] 2015-12-01 15:15:22,703(2463) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2  
[DEBUG] 2015-12-01 15:15:22,704(2464) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2  
[DEBUG] 2015-12-01 15:15:22,706(2466) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7ea9e1e2  
[DEBUG] 2015-12-01 15:15:22,706(2466) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@2053d869  
[DEBUG] 2015-12-01 15:15:22,707(2467) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@2053d869  
[DEBUG] 2015-12-01 15:15:22,708(2468) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2053d869  
[DEBUG] 2015-12-01 15:15:22,708(2468) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@10d307f1  
[DEBUG] 2015-12-01 15:15:22,710(2470) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@10d307f1  
[DEBUG] 2015-12-01 15:15:22,719(2479) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@10d307f1  
[DEBUG] 2015-12-01 15:15:22,728(2488) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@63a12c68  
[DEBUG] 2015-12-01 15:15:22,729(2489) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@63a12c68  
[DEBUG] 2015-12-01 15:15:22,731(2491) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@63a12c68  
[DEBUG] 2015-12-01 15:15:22,731(2491) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@fba92d3  
[DEBUG] 2015-12-01 15:15:22,732(2492) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@fba92d3  
[DEBUG] 2015-12-01 15:15:22,734(2494) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@fba92d3  
[DEBUG] 2015-12-01 15:15:22,735(2495) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@156b88f5  
[DEBUG] 2015-12-01 15:15:22,736(2496) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@156b88f5  
[DEBUG] 2015-12-01 15:15:22,736(2496) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@156b88f5  
[DEBUG] 2015-12-01 15:15:22,746(2506) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@7133da86  
[DEBUG] 2015-12-01 15:15:22,757(2517) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@7133da86  
[DEBUG] 2015-12-01 15:15:22,758(2518) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7133da86  
[DEBUG] 2015-12-01 15:15:22,760(2520) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2fb3536e  
[DEBUG] 2015-12-01 15:15:22,761(2521) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2fb3536e  
[DEBUG] 2015-12-01 15:15:22,762(2522) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3b6ddd1d  
[DEBUG] 2015-12-01 15:15:22,763(2523) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3b6ddd1d  
[DEBUG] 2015-12-01 15:15:22,774(2534) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration string -> org.hibernate.type.StringType@1a18644  
[DEBUG] 2015-12-01 15:15:22,780(2540) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@1a18644  
[DEBUG] 2015-12-01 15:15:22,781(2541) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1e04fa0a  
[DEBUG] 2015-12-01 15:15:22,782(2542) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@f5acb9d  
[DEBUG] 2015-12-01 15:15:22,782(2542) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration url -> org.hibernate.type.UrlType@7bd4937b  
[DEBUG] 2015-12-01 15:15:22,784(2544) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@7bd4937b  
[DEBUG] 2015-12-01 15:15:22,788(2548) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration date -> org.hibernate.type.DateType@209da20d  
[DEBUG] 2015-12-01 15:15:22,789(2549) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@209da20d  
[DEBUG] 2015-12-01 15:15:22,790(2550) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration time -> org.hibernate.type.TimeType@5d0a1059  
[DEBUG] 2015-12-01 15:15:22,790(2550) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5d0a1059  
[DEBUG] 2015-12-01 15:15:22,791(2551) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@37d4349f  
[DEBUG] 2015-12-01 15:15:22,791(2551) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@37d4349f  
[DEBUG] 2015-12-01 15:15:22,793(2553) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@37d4349f  
[DEBUG] 2015-12-01 15:15:22,794(2554) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3a44431a  
[DEBUG] 2015-12-01 15:15:22,794(2554) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@ffaa6af  
[DEBUG] 2015-12-01 15:15:22,795(2555) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@ffaa6af  
[DEBUG] 2015-12-01 15:15:22,806(2566) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@ffaa6af  
[DEBUG] 2015-12-01 15:15:22,810(2570) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@729d991e  
[DEBUG] 2015-12-01 15:15:22,811(2571) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@66f57048  
[DEBUG] 2015-12-01 15:15:22,812(2572) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@66f57048  
[DEBUG] 2015-12-01 15:15:22,812(2572) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@1e1a0406  
[DEBUG] 2015-12-01 15:15:22,814(2574) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1e1a0406  
[DEBUG] 2015-12-01 15:15:22,814(2574) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@71a8adcf  
[DEBUG] 2015-12-01 15:15:22,815(2575) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@71a8adcf  
[DEBUG] 2015-12-01 15:15:22,816(2576) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration class -> org.hibernate.type.ClassType@61001b64  
[DEBUG] 2015-12-01 15:15:22,861(2621) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@61001b64  
[DEBUG] 2015-12-01 15:15:22,868(2628) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@55634720  
[DEBUG] 2015-12-01 15:15:22,869(2629) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@55634720  
[DEBUG] 2015-12-01 15:15:22,869(2629) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2d710f1a  
[DEBUG] 2015-12-01 15:15:22,870(2630) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@13fd2ccd  
[DEBUG] 2015-12-01 15:15:22,871(2631) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@53aac487  
[DEBUG] 2015-12-01 15:15:22,873(2633) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@53aac487  
[DEBUG] 2015-12-01 15:15:22,875(2635) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@53aac487  
[DEBUG] 2015-12-01 15:15:22,877(2637) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2d52216b  
[DEBUG] 2015-12-01 15:15:22,878(2638) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2d52216b  
[DEBUG] 2015-12-01 15:15:22,878(2638) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2d52216b  
[DEBUG] 2015-12-01 15:15:22,891(2651) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration image -> org.hibernate.type.ImageType@4f80542f  
[DEBUG] 2015-12-01 15:15:22,892(2652) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@5d534f5d  
[DEBUG] 2015-12-01 15:15:22,893(2653) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@5d534f5d  
[DEBUG] 2015-12-01 15:15:22,895(2655) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@5d534f5d  
[DEBUG] 2015-12-01 15:15:22,901(2661) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6221a451  
[DEBUG] 2015-12-01 15:15:22,902(2662) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6221a451  
[DEBUG] 2015-12-01 15:15:22,903(2663) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6221a451  
[DEBUG] 2015-12-01 15:15:22,903(2663) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration text -> org.hibernate.type.TextType@5677323c  
[DEBUG] 2015-12-01 15:15:22,904(2664) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ntext -> org.hibernate.type.NTextType@1e0b4072  
[DEBUG] 2015-12-01 15:15:22,905(2665) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@2892d68  
[DEBUG] 2015-12-01 15:15:22,906(2666) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2892d68  
[DEBUG] 2015-12-01 15:15:22,907(2667) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2e385cce  
[DEBUG] 2015-12-01 15:15:22,908(2668) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@7d0b7e3c  
[DEBUG] 2015-12-01 15:15:22,908(2668) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7d0b7e3c  
[DEBUG] 2015-12-01 15:15:22,910(2670) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nclob -> org.hibernate.type.NClobType@117159c0  
[DEBUG] 2015-12-01 15:15:22,910(2670) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@117159c0  
[DEBUG] 2015-12-01 15:15:22,911(2671) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@235ecd9f  
[DEBUG] 2015-12-01 15:15:22,911(2671) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@75d3a5e0  
[DEBUG] 2015-12-01 15:15:22,912(2672) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@19e4653c  
[DEBUG] 2015-12-01 15:15:22,912(2672) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@742ff096  
[DEBUG] 2015-12-01 15:15:22,913(2673) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@742ff096  
[DEBUG] 2015-12-01 15:15:22,914(2674) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4a9419d7  
[DEBUG] 2015-12-01 15:15:22,914(2674) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2e8ab815  
[DEBUG] 2015-12-01 15:15:22,915(2675) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@d1f74b8  
[DEBUG] 2015-12-01 15:15:22,915(2675) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3a0807b7  
[DEBUG] 2015-12-01 15:15:22,916(2676) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5769e7ae  
[DEBUG] 2015-12-01 15:15:22,919(2679) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@26b894bd  
[DEBUG] 2015-12-01 15:15:22,920(2680) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@30b34287  
[DEBUG] 2015-12-01 15:15:22,921(2681) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3676ac27  
[DEBUG] 2015-12-01 15:15:22,921(2681) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-12-01 15:15:22,922(2682) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-12-01 15:15:22,923(2683) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:15:22,923(2683) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:15:22,924(2684) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-12-01 15:15:22,924(2684) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]  
[DEBUG] 2015-12-01 15:15:22,925(2685) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-12-01 15:15:22,926(2686) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-12-01 15:15:22,926(2686) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-12-01 15:15:22,927(2687) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-12-01 15:15:22,928(2688) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-12-01 15:15:22,928(2688) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-12-01 15:15:22,930(2690) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-12-01 15:15:22,931(2691) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-12-01 15:15:22,931(2691) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]  
[DEBUG] 2015-12-01 15:15:23,005(2765) org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) –> [main] Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].  
[DEBUG] 2015-12-01 15:15:23,025(2785) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1781) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-12-01 15:15:23,084(2844) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:121) –> [main] Database ->
       name : MySQL
    version : 5.6.22
      major : 5
      minor : 6  
[DEBUG] 2015-12-01 15:15:23,085(2845) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:127) –> [main] Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[DEBUG] 2015-12-01 15:15:23,085(2845) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:133) –> [main] JDBC version : 4.0  
[INFO ] 2015-12-01 15:15:23,091(2851) org.hibernate.dialect.Dialect.<init>(Dialect.java:130) –> [main] HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-12-01 15:15:23,093(2853) org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:120) –> [main] HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException  
[DEBUG] 2015-12-01 15:15:23,097(2857) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:15:23,097(2857) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:15:23,098(2858) org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:534) –> [main] Binding entity from annotated class: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:15:23,099(2859) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}  
[DEBUG] 2015-12-01 15:15:23,102(2862) org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1118) –> [main] No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED  
[DEBUG] 2015-12-01 15:15:23,112(2872) org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:394) –> [main] Import with entity name TestEntity  
[DEBUG] 2015-12-01 15:15:23,115(2875) org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:564) –> [main] Bind entity com.it_sucre.entity.TestEntity on table test  
[DEBUG] 2015-12-01 15:15:23,118(2878) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=id, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:15:23,120(2880) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property id with lazy=false  
[DEBUG] 2015-12-01 15:15:23,121(2881) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for id  
[DEBUG] 2015-12-01 15:15:23,122(2882) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property id  
[DEBUG] 2015-12-01 15:15:23,123(2883) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=name, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:15:23,124(2884) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property name with lazy=false  
[DEBUG] 2015-12-01 15:15:23,124(2884) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for name  
[DEBUG] 2015-12-01 15:15:23,125(2885) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property name  
[DEBUG] 2015-12-01 15:15:23,126(2886) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for id  
[DEBUG] 2015-12-01 15:15:23,127(2887) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for name  
[DEBUG] 2015-12-01 15:15:23,128(2888) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:15:23,128(2888) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:15:23,129(2889) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:15:23,129(2889) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:15:23,130(2890) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:15:23,130(2890) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:15:23,131(2891) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:15:23,131(2891) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[DEBUG] 2015-12-01 15:15:23,133(2893) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:117) –> [main] Automatic flush during beforeCompletion(): disabled  
[DEBUG] 2015-12-01 15:15:23,134(2894) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:123) –> [main] Automatic session close at end of transaction: disabled  
[DEBUG] 2015-12-01 15:15:23,136(2896) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:134) –> [main] JDBC batch size: 15  
[DEBUG] 2015-12-01 15:15:23,137(2897) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:140) –> [main] JDBC batch updates for versioned data: disabled  
[DEBUG] 2015-12-01 15:15:23,138(2898) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:150) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-12-01 15:15:23,139(2899) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:156) –> [main] Wrap result sets: disabled  
[DEBUG] 2015-12-01 15:15:23,140(2900) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:162) –> [main] JDBC3 getGeneratedKeys(): enabled  
[DEBUG] 2015-12-01 15:15:23,140(2900) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:174) –> [main] multi-tenancy strategy : NONE  
[DEBUG] 2015-12-01 15:15:23,142(2902) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:180) –> [main] Connection release mode: auto  
[INFO ] 2015-12-01 15:15:23,144(2904) org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:68) –> [main] HHH000399: Using default transaction strategy (direct JDBC transactions)  
[DEBUG] 2015-12-01 15:15:23,145(2905) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Using BatchFetchStyle : LEGACY  
[DEBUG] 2015-12-01 15:15:23,146(2906) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:221) –> [main] Maximum outer join fetch depth: 2  
[DEBUG] 2015-12-01 15:15:23,146(2906) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:227) –> [main] Default batch fetch size: 1  
[DEBUG] 2015-12-01 15:15:23,147(2907) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:233) –> [main] Generate SQL with comments: disabled  
[DEBUG] 2015-12-01 15:15:23,148(2908) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:239) –> [main] Order SQL updates by primary key: disabled  
[DEBUG] 2015-12-01 15:15:23,148(2908) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Order SQL inserts for batching: disabled  
[DEBUG] 2015-12-01 15:15:23,149(2909) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Default null ordering: none  
[DEBUG] 2015-12-01 15:15:23,149(2909) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:584) –> [main] Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-12-01 15:15:23,149(2909) org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) –> [main] HHH000397: Using ASTQueryTranslatorFactory  
[DEBUG] 2015-12-01 15:15:23,150(2910) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:263) –> [main] Query language substitutions: {}  
[DEBUG] 2015-12-01 15:15:23,155(2915) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:269) –> [main] JPA-QL strict compliance: disabled  
[DEBUG] 2015-12-01 15:15:23,156(2916) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:277) –> [main] Second-level cache: enabled  
[DEBUG] 2015-12-01 15:15:23,156(2916) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:283) –> [main] Query cache: disabled  
[DEBUG] 2015-12-01 15:15:23,157(2917) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:524) –> [main] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory  
[DEBUG] 2015-12-01 15:15:23,158(2918) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:534) –> [main] org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.  
[DEBUG] 2015-12-01 15:15:23,159(2919) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:306) –> [main] Optimize cache for minimal puts: disabled  
[DEBUG] 2015-12-01 15:15:23,173(2933) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:321) –> [main] Structured second-level cache entries: disabled  
[DEBUG] 2015-12-01 15:15:23,177(2937) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:331) –> [main] Second-level cache direct-reference entries: disabled  
[DEBUG] 2015-12-01 15:15:23,178(2938) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:339) –> [main] Statistics: disabled  
[DEBUG] 2015-12-01 15:15:23,178(2938) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:345) –> [main] Deleted entity synthetic identifier rollback: disabled  
[DEBUG] 2015-12-01 15:15:23,179(2939) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:372) –> [main] Default entity-mode: pojo  
[DEBUG] 2015-12-01 15:15:23,180(2940) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:378) –> [main] Named query checking : enabled  
[DEBUG] 2015-12-01 15:15:23,181(2941) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:384) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): enabled  
[DEBUG] 2015-12-01 15:15:23,181(2941) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:402) –> [main] Allow initialization of lazy state outside session : : disabled  
[DEBUG] 2015-12-01 15:15:23,182(2942) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:412) –> [main] JTA Track by Thread: enabled  
[DEBUG] 2015-12-01 15:15:23,182(2942) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Building session factory  
[DEBUG] 2015-12-01 15:15:23,189(2949) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:280) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-12-01 15:15:23,191(2951) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:281) –> [main] Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=D:\Java\jdk1.8.0_40\jre\bin, java.vm.version=25.40-b25, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\Java\workspace\demo-chained-transactionmanager, java.runtime.version=1.8.0_40-b26, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=thread, java.endorsed.dirs=D:\Java\jdk1.8.0_40\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\奇点之~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8.1, sun.jnu.encoding=GBK, java.library.path=D:\Java\jdk1.8.0_40\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/jdk1.8.0_40/bin/../jre/bin/server;D:/Java/jdk1.8.0_40/bin/../jre/bin;D:/Java/jdk1.8.0_40/bin/../jre/lib/amd64;D:\Java\jdk1.8.0_40/bin;D:\Java\jdk1.8.0_40/lib/dt.jar;D:\Java\jdk1.8.0_40/lib/tools.jar;D:\__ENV__\apache-maven-3.2.1/bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__ENV__\apache-tomcat-7.0.57\bin;D:\__ENV__\apache-tomcat-7.0.57\jre;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\TortoiseSVN\bin;D:\__ENV__\eclipse;;., hibernate.connection.datasource=org.apache.commons.dbcp.BasicDataSource@51a06cbe, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=6.3, user.home=C:\Users\奇点之光08老师, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=奇点之光08老师, java.class.path=D:\Java\workspace\demo-chained-transactionmanager\target\test-classes;D:\Java\workspace\demo-chained-transactionmanager\target\classes;D:\__ENV__\repo\ch\qos\logback\logback-core\0.9.28\logback-core-0.9.28.jar;D:\__ENV__\repo\ch\qos\logback\logback-classic\0.9.28\logback-classic-0.9.28.jar;D:\__ENV__\repo\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;D:\__ENV__\repo\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;D:\__ENV__\repo\org\slf4j\slf4j-api\1.7.7\slf4j-api-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-jdk14\1.7.7\slf4j-jdk14-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-log4j12\1.7.7\slf4j-log4j12-1.7.7.jar;D:\__ENV__\repo\mysql\mysql-connector-java\5.1.26\mysql-connector-java-5.1.26.jar;D:\__ENV__\repo\log4j\log4j\1.2.14\log4j-1.2.14.jar;D:\__ENV__\repo\org\springframework\data\spring-data-commons\1.8.0.RELEASE\spring-data-commons-1.8.0.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\slf4j\jcl-over-slf4j\1.7.7\jcl-over-slf4j-1.7.7.jar;D:\__ENV__\repo\org\springframework\spring-context\3.2.4.RELEASE\spring-context-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-aop\3.2.4.RELEASE\spring-aop-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-expression\3.2.4.RELEASE\spring-expression-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-oxm\3.2.4.RELEASE\spring-oxm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\__ENV__\repo\org\springframework\spring-web\3.2.4.RELEASE\spring-web-3.2.4.RELEASE.jar;D:\__ENV__\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\__ENV__\repo\org\springframework\spring-webmvc\3.2.4.RELEASE\spring-webmvc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-orm\3.2.4.RELEASE\spring-orm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-jdbc\3.2.4.RELEASE\spring-jdbc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-tx\3.2.4.RELEASE\spring-tx-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-test\3.2.4.RELEASE\spring-test-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\__ENV__\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\__ENV__\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\__ENV__\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\__ENV__\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-validator\4.2.0.Final\hibernate-validator-4.2.0.Final.jar;D:\__ENV__\repo\javax\validation\validation-api\1.0.0.GA\validation-api-1.0.0.GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-core\4.2.10.Final\hibernate-core-4.2.10.Final.jar;D:\__ENV__\repo\antlr\antlr\2.7.7\antlr-2.7.7.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.1.Final\jboss-transaction-api_1.1_spec-1.0.1.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpcore\4.3.1\httpcore-4.3.1.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpclient\4.3.1\httpclient-4.3.1.jar;D:\__ENV__\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\__ENV__\repo\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpmime\4.3.1\httpmime-4.3.1.jar;D:\__ENV__\repo\redis\clients\jedis\2.7.2\jedis-2.7.2.jar;D:\__ENV__\repo\org\apache\commons\commons-pool2\2.3\commons-pool2-2.3.jar;D:\__ENV__\repo\javax\persistence\persistence-api\1.0.2\persistence-api-1.0.2.jar;D:\__ENV__\repo\org\ansj\ansj_seg\0.9\ansj_seg-0.9.jar;D:\__ENV__\repo\org\ansj\tree_split\1.0.1\tree_split-1.0.1.jar;D:\__ENV__\repo\org\apache\commons-lang3\commons-lang3\3.1\commons-lang3-3.1.jar;D:\__ENV__\repo\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;D:\__ENV__\repo\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;D:\__ENV__\repo\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;D:\__ENV__\repo\commons-io\commons-io\2.4\commons-io-2.4.jar;D:\__ENV__\repo\commons-fileupload\commons-fileupload\1.2.2\commons-fileupload-1.2.2.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\__ENV__\repo\com\googlecode\xmemcached\xmemcached\1.4.1\xmemcached-1.4.1.jar;D:\__ENV__\repo\net\sf\json-lib\json-lib\2.4\json-lib-2.4-jdk15.jar;D:\__ENV__\repo\commons-beanutils\commons-beanutils\1.8.0\commons-beanutils-1.8.0.jar;D:\__ENV__\repo\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;D:\__ENV__\repo\net\sf\ezmorph\ezmorph\1.0.6\ezmorph-1.0.6.jar;D:\__ENV__\repo\org\mybatis\mybatis\3.1.1\mybatis-3.1.1.jar;D:\__ENV__\repo\org\mybatis\mybatis-spring\1.1.1\mybatis-spring-1.1.1.jar;D:\__ENV__\repo\junit\junit\4.11\junit-4.11.jar;D:\__ENV__\repo\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/358/1/.cp/;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/357/1/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.classLoader.application=sun.misc.Launcher$AppClassLoader@3b07d329, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=D:\Java\jdk1.8.0_40\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 60941 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -test com.it_sucre.service.HibernateServiceTest:test, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_40, java.ext.dirs=D:\Java\jdk1.8.0_40\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=D:\Java\jdk1.8.0_40\jre\lib\resources.jar;D:\Java\jdk1.8.0_40\jre\lib\rt.jar;D:\Java\jdk1.8.0_40\jre\lib\sunrsasign.jar;D:\Java\jdk1.8.0_40\jre\lib\jsse.jar;D:\Java\jdk1.8.0_40\jre\lib\jce.jar;D:\Java\jdk1.8.0_40\jre\lib\charsets.jar;D:\Java\jdk1.8.0_40\jre\lib\jfr.jar;D:\Java\jdk1.8.0_40\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}  
[DEBUG] 2015-12-01 15:15:23,208(2968) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[DEBUG] 2015-12-01 15:15:23,212(2972) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3604) –> [main] Static SQL for entity: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:15:23,213(2973) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3609) –> [main]  Version select: select id from test where id =?  
[DEBUG] 2015-12-01 15:15:23,214(2974) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3612) –> [main]  Snapshot select: select testentity_.id, testentity_.name as name2_0_ from test testentity_ where testentity_.id=?  
[DEBUG] 2015-12-01 15:15:23,227(2987) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3615) –> [main]  Insert 0: insert into test (name, id) values (?, ?)  
[DEBUG] 2015-12-01 15:15:23,228(2988) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3616) –> [main]  Update 0: update test set name=? where id=?  
[DEBUG] 2015-12-01 15:15:23,229(2989) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3617) –> [main]  Delete 0: delete from test where id=?  
[DEBUG] 2015-12-01 15:15:23,230(2990) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [NONE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:15:23,232(2992) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:15:23,233(2993) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:15:23,236(2996) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE_NOWAIT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:15:23,238(2998) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [FORCE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:15:23,238(2998) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? lock in share mode  
[DEBUG] 2015-12-01 15:15:23,240(3000) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_WRITE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:15:23,241(3001) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:15:23,242(3002) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:15:23,244(3004) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:15:23,245(3005) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:15:23,246(3006) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:15:23,247(3007) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:75) –> [main] Registering SessionFactory: e71419e6-5b3a-435d-b3e0-f869c109f625 (<unnamed>)  
[DEBUG] 2015-12-01 15:15:23,248(3008) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:82) –> [main] Not binding SessionFactory to JNDI, no JNDI name configured  
[DEBUG] 2015-12-01 15:15:23,248(3008) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:492) –> [main] Instantiated session factory  
[INFO ] 2015-12-01 15:15:23,249(3009) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:182) –> [main] HHH000228: Running hbm2ddl schema update  
[INFO ] 2015-12-01 15:15:23,250(3010) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:193) –> [main] HHH000102: Fetching database metadata  
[INFO ] 2015-12-01 15:15:23,253(3013) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:205) –> [main] HHH000396: Updating schema  
[DEBUG] 2015-12-01 15:15:23,253(3013) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:15:23,254(3014) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:15:23,255(3015) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:15:23,255(3015) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:15:23,256(3016) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:15:23,257(3017) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:15:23,257(3017) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:15:23,257(3017) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:15:23,258(3018) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:15:23,259(3019) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[INFO ] 2015-12-01 15:15:23,277(3037) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] HHH000261: Table found: Test.test  
[INFO ] 2015-12-01 15:15:23,278(3038) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:67) –> [main] HHH000037: Columns: [name, id]  
[INFO ] 2015-12-01 15:15:23,278(3038) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] HHH000108: Foreign keys: []  
[INFO ] 2015-12-01 15:15:23,279(3039) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:70) –> [main] HHH000126: Indexes: [primary]  
[DEBUG] 2015-12-01 15:15:23,280(3040) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-12-01 15:15:23,281(3041) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:242) –> [main] HHH000232: Schema update complete  
[DEBUG] 2015-12-01 15:15:23,282(3042) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1073) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-12-01 15:15:23,282(3042) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1096) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-12-01 15:15:23,283(3043) org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:110) –> [main] Statistics initialized [enabled=false]  
[DEBUG] 2015-12-01 15:15:23,723(3483) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:212) –> [main] Obtaining JDBC connection  
[DEBUG] 2015-12-01 15:15:23,723(3483) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:218) –> [main] Obtained JDBC connection  
[DEBUG] 2015-12-01 15:15:23,739(3499) org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) –> [main] begin  
[DEBUG] 2015-12-01 15:15:23,739(3499) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) –> [main] initial autocommit status: true  
[DEBUG] 2015-12-01 15:15:23,739(3499) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) –> [main] disabling autocommit  
[DEBUG] 2015-12-01 15:15:23,833(3593) org.hibernate.engine.transaction.spi.AbstractTransactionImpl.rollback(AbstractTransactionImpl.java:203) –> [main] rolling back  
[DEBUG] 2015-12-01 15:15:23,833(3593) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doRollback(JdbcTransaction.java:164) –> [main] rolled JDBC Connection  
[DEBUG] 2015-12-01 15:15:23,833(3593) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) –> [main] re-enabling autocommit  
[DEBUG] 2015-12-01 15:15:23,848(3608) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:232) –> [main] Releasing JDBC connection  
[DEBUG] 2015-12-01 15:15:23,848(3608) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:250) –> [main] Released JDBC connection  
[DEBUG] 2015-12-01 15:15:23,911(3671) org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1374) –> [Thread-2] HHH000031: Closing  
[DEBUG] 2015-12-01 15:15:23,911(3671) org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1374) –> [Thread-2] HHH000031: Closing  
[DEBUG] 2015-12-01 15:15:33,967(0) org.hibernate.cfg.Configuration.<clinit>(Configuration.java:184) –> [main] Logging Provider: org.jboss.logging.Log4jLoggerProvider  
[DEBUG] 2015-12-01 15:15:33,999(32) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@48974e45  
[DEBUG] 2015-12-01 15:15:33,999(32) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@48974e45  
[DEBUG] 2015-12-01 15:15:33,999(32) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@48974e45  
[DEBUG] 2015-12-01 15:15:34,014(47) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@57af006c  
[DEBUG] 2015-12-01 15:15:34,014(47) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@446293d  
[DEBUG] 2015-12-01 15:15:34,014(47) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@37654521  
[DEBUG] 2015-12-01 15:15:34,030(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2  
[DEBUG] 2015-12-01 15:15:34,030(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2  
[DEBUG] 2015-12-01 15:15:34,030(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7ea9e1e2  
[DEBUG] 2015-12-01 15:15:34,030(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@2053d869  
[DEBUG] 2015-12-01 15:15:34,030(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@2053d869  
[DEBUG] 2015-12-01 15:15:34,030(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2053d869  
[DEBUG] 2015-12-01 15:15:34,030(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@10d307f1  
[DEBUG] 2015-12-01 15:15:34,046(79) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@10d307f1  
[DEBUG] 2015-12-01 15:15:34,046(79) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@10d307f1  
[DEBUG] 2015-12-01 15:15:34,046(79) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@63a12c68  
[DEBUG] 2015-12-01 15:15:34,046(79) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@63a12c68  
[DEBUG] 2015-12-01 15:15:34,046(79) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@63a12c68  
[DEBUG] 2015-12-01 15:15:34,046(79) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@fba92d3  
[DEBUG] 2015-12-01 15:15:34,046(79) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@fba92d3  
[DEBUG] 2015-12-01 15:15:34,046(79) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@fba92d3  
[DEBUG] 2015-12-01 15:15:34,046(79) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@156b88f5  
[DEBUG] 2015-12-01 15:15:34,046(79) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@156b88f5  
[DEBUG] 2015-12-01 15:15:34,061(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@156b88f5  
[DEBUG] 2015-12-01 15:15:34,061(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@7133da86  
[DEBUG] 2015-12-01 15:15:34,061(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@7133da86  
[DEBUG] 2015-12-01 15:15:34,061(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7133da86  
[DEBUG] 2015-12-01 15:15:34,061(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2fb3536e  
[DEBUG] 2015-12-01 15:15:34,061(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2fb3536e  
[DEBUG] 2015-12-01 15:15:34,061(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3b6ddd1d  
[DEBUG] 2015-12-01 15:15:34,061(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3b6ddd1d  
[DEBUG] 2015-12-01 15:15:34,077(110) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration string -> org.hibernate.type.StringType@1a18644  
[DEBUG] 2015-12-01 15:15:34,077(110) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@1a18644  
[DEBUG] 2015-12-01 15:15:34,077(110) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1e04fa0a  
[DEBUG] 2015-12-01 15:15:34,077(110) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@f5acb9d  
[DEBUG] 2015-12-01 15:15:34,077(110) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration url -> org.hibernate.type.UrlType@7bd4937b  
[DEBUG] 2015-12-01 15:15:34,077(110) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@7bd4937b  
[DEBUG] 2015-12-01 15:15:34,092(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration date -> org.hibernate.type.DateType@209da20d  
[DEBUG] 2015-12-01 15:15:34,092(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@209da20d  
[DEBUG] 2015-12-01 15:15:34,092(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration time -> org.hibernate.type.TimeType@5d0a1059  
[DEBUG] 2015-12-01 15:15:34,092(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5d0a1059  
[DEBUG] 2015-12-01 15:15:34,108(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@37d4349f  
[DEBUG] 2015-12-01 15:15:34,108(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@37d4349f  
[DEBUG] 2015-12-01 15:15:34,108(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@37d4349f  
[DEBUG] 2015-12-01 15:15:34,108(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3a44431a  
[DEBUG] 2015-12-01 15:15:34,108(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@ffaa6af  
[DEBUG] 2015-12-01 15:15:34,108(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@ffaa6af  
[DEBUG] 2015-12-01 15:15:34,108(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@ffaa6af  
[DEBUG] 2015-12-01 15:15:34,108(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@729d991e  
[DEBUG] 2015-12-01 15:15:34,124(157) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@66f57048  
[DEBUG] 2015-12-01 15:15:34,124(157) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@66f57048  
[DEBUG] 2015-12-01 15:15:34,124(157) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@1e1a0406  
[DEBUG] 2015-12-01 15:15:34,124(157) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1e1a0406  
[DEBUG] 2015-12-01 15:15:34,139(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@71a8adcf  
[DEBUG] 2015-12-01 15:15:34,139(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@71a8adcf  
[DEBUG] 2015-12-01 15:15:34,139(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration class -> org.hibernate.type.ClassType@61001b64  
[DEBUG] 2015-12-01 15:15:34,139(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@61001b64  
[DEBUG] 2015-12-01 15:15:34,139(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@55634720  
[DEBUG] 2015-12-01 15:15:34,139(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@55634720  
[DEBUG] 2015-12-01 15:15:34,139(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2d710f1a  
[DEBUG] 2015-12-01 15:15:34,139(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@13fd2ccd  
[DEBUG] 2015-12-01 15:15:34,139(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@53aac487  
[DEBUG] 2015-12-01 15:15:34,139(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@53aac487  
[DEBUG] 2015-12-01 15:15:34,155(188) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@53aac487  
[DEBUG] 2015-12-01 15:15:34,155(188) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2d52216b  
[DEBUG] 2015-12-01 15:15:34,155(188) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2d52216b  
[DEBUG] 2015-12-01 15:15:34,155(188) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2d52216b  
[DEBUG] 2015-12-01 15:15:34,155(188) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration image -> org.hibernate.type.ImageType@4f80542f  
[DEBUG] 2015-12-01 15:15:34,171(204) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@5d534f5d  
[DEBUG] 2015-12-01 15:15:34,171(204) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@5d534f5d  
[DEBUG] 2015-12-01 15:15:34,171(204) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@5d534f5d  
[DEBUG] 2015-12-01 15:15:34,171(204) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6221a451  
[DEBUG] 2015-12-01 15:15:34,171(204) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6221a451  
[DEBUG] 2015-12-01 15:15:34,171(204) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6221a451  
[DEBUG] 2015-12-01 15:15:34,171(204) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration text -> org.hibernate.type.TextType@5677323c  
[DEBUG] 2015-12-01 15:15:34,186(219) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ntext -> org.hibernate.type.NTextType@1e0b4072  
[DEBUG] 2015-12-01 15:15:34,217(250) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@2892d68  
[DEBUG] 2015-12-01 15:15:34,217(250) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2892d68  
[DEBUG] 2015-12-01 15:15:34,217(250) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2e385cce  
[DEBUG] 2015-12-01 15:15:34,233(266) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@7d0b7e3c  
[DEBUG] 2015-12-01 15:15:34,233(266) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7d0b7e3c  
[DEBUG] 2015-12-01 15:15:34,249(282) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nclob -> org.hibernate.type.NClobType@117159c0  
[DEBUG] 2015-12-01 15:15:34,249(282) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@117159c0  
[DEBUG] 2015-12-01 15:15:34,249(282) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@235ecd9f  
[DEBUG] 2015-12-01 15:15:34,249(282) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@75d3a5e0  
[DEBUG] 2015-12-01 15:15:34,249(282) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@19e4653c  
[DEBUG] 2015-12-01 15:15:34,249(282) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@742ff096  
[DEBUG] 2015-12-01 15:15:34,249(282) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@742ff096  
[DEBUG] 2015-12-01 15:15:34,249(282) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@79e4c792  
[DEBUG] 2015-12-01 15:15:34,249(282) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4c60d6e9  
[DEBUG] 2015-12-01 15:15:34,249(282) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4a83a74a  
[DEBUG] 2015-12-01 15:15:34,249(282) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4b29d1d2  
[DEBUG] 2015-12-01 15:15:34,249(282) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@28261e8e  
[DEBUG] 2015-12-01 15:15:34,264(297) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@8519cb4  
[DEBUG] 2015-12-01 15:15:34,264(297) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2d901eb0  
[DEBUG] 2015-12-01 15:15:34,264(297) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3f191845  
[INFO ] 2015-12-01 15:15:34,296(329) org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66) –> [main] HCANN000001: Hibernate Commons Annotations {4.0.4.Final}  
[INFO ] 2015-12-01 15:15:34,311(344) org.hibernate.Version.logVersion(Version.java:41) –> [main] HHH000412: Hibernate Core {4.2.10.Final}  
[INFO ] 2015-12-01 15:15:34,327(360) org.hibernate.cfg.Environment.<clinit>(Environment.java:238) –> [main] HHH000206: hibernate.properties not found  
[INFO ] 2015-12-01 15:15:34,327(360) org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:345) –> [main] HHH000021: Bytecode provider name : javassist  
[DEBUG] 2015-12-01 15:15:34,358(391) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-12-01 15:15:34,358(391) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-12-01 15:15:34,358(391) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:15:34,358(391) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:15:34,358(391) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-12-01 15:15:34,358(391) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]  
[DEBUG] 2015-12-01 15:15:34,358(391) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-12-01 15:15:34,358(391) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-12-01 15:15:34,374(407) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-12-01 15:15:34,374(407) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-12-01 15:15:34,374(407) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-12-01 15:15:34,374(407) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-12-01 15:15:34,374(407) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-12-01 15:15:34,374(407) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-12-01 15:15:34,374(407) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]  
[DEBUG] 2015-12-01 15:15:34,421(454) org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) –> [main] Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].  
[DEBUG] 2015-12-01 15:15:34,452(485) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1781) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-12-01 15:15:34,889(922) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:121) –> [main] Database ->
       name : MySQL
    version : 5.6.22
      major : 5
      minor : 6  
[DEBUG] 2015-12-01 15:15:34,898(931) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:127) –> [main] Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[DEBUG] 2015-12-01 15:15:34,898(931) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:133) –> [main] JDBC version : 4.0  
[INFO ] 2015-12-01 15:15:34,940(973) org.hibernate.dialect.Dialect.<init>(Dialect.java:130) –> [main] HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-12-01 15:15:34,956(989) org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:120) –> [main] HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException  
[DEBUG] 2015-12-01 15:15:34,987(1020) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:15:35,003(1036) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:15:35,003(1036) org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:534) –> [main] Binding entity from annotated class: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:15:35,050(1083) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}  
[DEBUG] 2015-12-01 15:15:35,065(1098) org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1118) –> [main] No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED  
[DEBUG] 2015-12-01 15:15:35,096(1129) org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:394) –> [main] Import with entity name TestEntity  
[DEBUG] 2015-12-01 15:15:35,112(1145) org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:564) –> [main] Bind entity com.it_sucre.entity.TestEntity on table test  
[DEBUG] 2015-12-01 15:15:35,159(1192) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=id, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:15:35,159(1192) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property id with lazy=false  
[DEBUG] 2015-12-01 15:15:35,175(1208) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for id  
[DEBUG] 2015-12-01 15:15:35,175(1208) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property id  
[DEBUG] 2015-12-01 15:15:35,190(1223) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=name, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:15:35,190(1223) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property name with lazy=false  
[DEBUG] 2015-12-01 15:15:35,190(1223) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for name  
[DEBUG] 2015-12-01 15:15:35,190(1223) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property name  
[DEBUG] 2015-12-01 15:15:35,190(1223) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for id  
[DEBUG] 2015-12-01 15:15:35,206(1239) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for name  
[DEBUG] 2015-12-01 15:15:35,206(1239) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:15:35,206(1239) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:15:35,206(1239) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:15:35,206(1239) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:15:35,206(1239) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:15:35,206(1239) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:15:35,206(1239) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:15:35,221(1254) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[DEBUG] 2015-12-01 15:15:35,237(1270) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:117) –> [main] Automatic flush during beforeCompletion(): disabled  
[DEBUG] 2015-12-01 15:15:35,237(1270) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:123) –> [main] Automatic session close at end of transaction: disabled  
[DEBUG] 2015-12-01 15:15:35,237(1270) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:134) –> [main] JDBC batch size: 15  
[DEBUG] 2015-12-01 15:15:35,237(1270) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:140) –> [main] JDBC batch updates for versioned data: disabled  
[DEBUG] 2015-12-01 15:15:35,237(1270) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:150) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-12-01 15:15:35,237(1270) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:156) –> [main] Wrap result sets: disabled  
[DEBUG] 2015-12-01 15:15:35,237(1270) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:162) –> [main] JDBC3 getGeneratedKeys(): enabled  
[DEBUG] 2015-12-01 15:15:35,237(1270) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:174) –> [main] multi-tenancy strategy : NONE  
[DEBUG] 2015-12-01 15:15:35,237(1270) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:180) –> [main] Connection release mode: auto  
[INFO ] 2015-12-01 15:15:35,237(1270) org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:68) –> [main] HHH000399: Using default transaction strategy (direct JDBC transactions)  
[DEBUG] 2015-12-01 15:15:35,253(1286) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Using BatchFetchStyle : LEGACY  
[DEBUG] 2015-12-01 15:15:35,253(1286) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:221) –> [main] Maximum outer join fetch depth: 2  
[DEBUG] 2015-12-01 15:15:35,253(1286) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:227) –> [main] Default batch fetch size: 1  
[DEBUG] 2015-12-01 15:15:35,253(1286) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:233) –> [main] Generate SQL with comments: disabled  
[DEBUG] 2015-12-01 15:15:35,253(1286) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:239) –> [main] Order SQL updates by primary key: disabled  
[DEBUG] 2015-12-01 15:15:35,253(1286) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Order SQL inserts for batching: disabled  
[DEBUG] 2015-12-01 15:15:35,253(1286) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Default null ordering: none  
[DEBUG] 2015-12-01 15:15:35,268(1301) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:584) –> [main] Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-12-01 15:15:35,284(1317) org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) –> [main] HHH000397: Using ASTQueryTranslatorFactory  
[DEBUG] 2015-12-01 15:15:35,284(1317) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:263) –> [main] Query language substitutions: {}  
[DEBUG] 2015-12-01 15:15:35,284(1317) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:269) –> [main] JPA-QL strict compliance: disabled  
[DEBUG] 2015-12-01 15:15:35,284(1317) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:277) –> [main] Second-level cache: enabled  
[DEBUG] 2015-12-01 15:15:35,284(1317) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:283) –> [main] Query cache: disabled  
[DEBUG] 2015-12-01 15:15:35,284(1317) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:524) –> [main] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory  
[DEBUG] 2015-12-01 15:15:35,284(1317) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:534) –> [main] org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.  
[DEBUG] 2015-12-01 15:15:35,284(1317) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:306) –> [main] Optimize cache for minimal puts: disabled  
[DEBUG] 2015-12-01 15:15:35,284(1317) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:321) –> [main] Structured second-level cache entries: disabled  
[DEBUG] 2015-12-01 15:15:35,284(1317) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:331) –> [main] Second-level cache direct-reference entries: disabled  
[DEBUG] 2015-12-01 15:15:35,284(1317) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:339) –> [main] Statistics: disabled  
[DEBUG] 2015-12-01 15:15:35,284(1317) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:345) –> [main] Deleted entity synthetic identifier rollback: disabled  
[DEBUG] 2015-12-01 15:15:35,284(1317) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:372) –> [main] Default entity-mode: pojo  
[DEBUG] 2015-12-01 15:15:35,284(1317) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:378) –> [main] Named query checking : enabled  
[DEBUG] 2015-12-01 15:15:35,284(1317) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:384) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): enabled  
[DEBUG] 2015-12-01 15:15:35,284(1317) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:402) –> [main] Allow initialization of lazy state outside session : : disabled  
[DEBUG] 2015-12-01 15:15:35,284(1317) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:412) –> [main] JTA Track by Thread: enabled  
[DEBUG] 2015-12-01 15:15:35,300(1333) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Building session factory  
[DEBUG] 2015-12-01 15:15:35,315(1348) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:280) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-12-01 15:15:35,315(1348) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:281) –> [main] Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=D:\Java\jdk1.8.0_40\jre\bin, java.vm.version=25.40-b25, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\Java\workspace\demo-chained-transactionmanager, java.runtime.version=1.8.0_40-b26, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=thread, java.endorsed.dirs=D:\Java\jdk1.8.0_40\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\奇点之~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8.1, sun.jnu.encoding=GBK, java.library.path=D:\Java\jdk1.8.0_40\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/jdk1.8.0_40/bin/../jre/bin/server;D:/Java/jdk1.8.0_40/bin/../jre/bin;D:/Java/jdk1.8.0_40/bin/../jre/lib/amd64;D:\Java\jdk1.8.0_40/bin;D:\Java\jdk1.8.0_40/lib/dt.jar;D:\Java\jdk1.8.0_40/lib/tools.jar;D:\__ENV__\apache-maven-3.2.1/bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__ENV__\apache-tomcat-7.0.57\bin;D:\__ENV__\apache-tomcat-7.0.57\jre;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\TortoiseSVN\bin;D:\__ENV__\eclipse;;., hibernate.connection.datasource=org.apache.commons.dbcp.BasicDataSource@2320fa6f, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=6.3, user.home=C:\Users\奇点之光08老师, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=奇点之光08老师, java.class.path=D:\Java\workspace\demo-chained-transactionmanager\target\test-classes;D:\Java\workspace\demo-chained-transactionmanager\target\classes;D:\__ENV__\repo\ch\qos\logback\logback-core\0.9.28\logback-core-0.9.28.jar;D:\__ENV__\repo\ch\qos\logback\logback-classic\0.9.28\logback-classic-0.9.28.jar;D:\__ENV__\repo\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;D:\__ENV__\repo\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;D:\__ENV__\repo\org\slf4j\slf4j-api\1.7.7\slf4j-api-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-jdk14\1.7.7\slf4j-jdk14-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-log4j12\1.7.7\slf4j-log4j12-1.7.7.jar;D:\__ENV__\repo\mysql\mysql-connector-java\5.1.26\mysql-connector-java-5.1.26.jar;D:\__ENV__\repo\log4j\log4j\1.2.14\log4j-1.2.14.jar;D:\__ENV__\repo\org\springframework\data\spring-data-commons\1.8.0.RELEASE\spring-data-commons-1.8.0.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\slf4j\jcl-over-slf4j\1.7.7\jcl-over-slf4j-1.7.7.jar;D:\__ENV__\repo\org\springframework\spring-context\3.2.4.RELEASE\spring-context-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-aop\3.2.4.RELEASE\spring-aop-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-expression\3.2.4.RELEASE\spring-expression-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-oxm\3.2.4.RELEASE\spring-oxm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\__ENV__\repo\org\springframework\spring-web\3.2.4.RELEASE\spring-web-3.2.4.RELEASE.jar;D:\__ENV__\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\__ENV__\repo\org\springframework\spring-webmvc\3.2.4.RELEASE\spring-webmvc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-orm\3.2.4.RELEASE\spring-orm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-jdbc\3.2.4.RELEASE\spring-jdbc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-tx\3.2.4.RELEASE\spring-tx-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-test\3.2.4.RELEASE\spring-test-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\__ENV__\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\__ENV__\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\__ENV__\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\__ENV__\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-validator\4.2.0.Final\hibernate-validator-4.2.0.Final.jar;D:\__ENV__\repo\javax\validation\validation-api\1.0.0.GA\validation-api-1.0.0.GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-core\4.2.10.Final\hibernate-core-4.2.10.Final.jar;D:\__ENV__\repo\antlr\antlr\2.7.7\antlr-2.7.7.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.1.Final\jboss-transaction-api_1.1_spec-1.0.1.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpcore\4.3.1\httpcore-4.3.1.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpclient\4.3.1\httpclient-4.3.1.jar;D:\__ENV__\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\__ENV__\repo\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpmime\4.3.1\httpmime-4.3.1.jar;D:\__ENV__\repo\redis\clients\jedis\2.7.2\jedis-2.7.2.jar;D:\__ENV__\repo\org\apache\commons\commons-pool2\2.3\commons-pool2-2.3.jar;D:\__ENV__\repo\javax\persistence\persistence-api\1.0.2\persistence-api-1.0.2.jar;D:\__ENV__\repo\org\ansj\ansj_seg\0.9\ansj_seg-0.9.jar;D:\__ENV__\repo\org\ansj\tree_split\1.0.1\tree_split-1.0.1.jar;D:\__ENV__\repo\org\apache\commons-lang3\commons-lang3\3.1\commons-lang3-3.1.jar;D:\__ENV__\repo\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;D:\__ENV__\repo\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;D:\__ENV__\repo\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;D:\__ENV__\repo\commons-io\commons-io\2.4\commons-io-2.4.jar;D:\__ENV__\repo\commons-fileupload\commons-fileupload\1.2.2\commons-fileupload-1.2.2.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\__ENV__\repo\com\googlecode\xmemcached\xmemcached\1.4.1\xmemcached-1.4.1.jar;D:\__ENV__\repo\net\sf\json-lib\json-lib\2.4\json-lib-2.4-jdk15.jar;D:\__ENV__\repo\commons-beanutils\commons-beanutils\1.8.0\commons-beanutils-1.8.0.jar;D:\__ENV__\repo\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;D:\__ENV__\repo\net\sf\ezmorph\ezmorph\1.0.6\ezmorph-1.0.6.jar;D:\__ENV__\repo\org\mybatis\mybatis\3.1.1\mybatis-3.1.1.jar;D:\__ENV__\repo\org\mybatis\mybatis-spring\1.1.1\mybatis-spring-1.1.1.jar;D:\__ENV__\repo\junit\junit\4.11\junit-4.11.jar;D:\__ENV__\repo\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/358/1/.cp/;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/357/1/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.classLoader.application=sun.misc.Launcher$AppClassLoader@3b07d329, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=D:\Java\jdk1.8.0_40\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 60947 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -test com.it_sucre.service.HibernateServiceTest:test, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_40, java.ext.dirs=D:\Java\jdk1.8.0_40\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=D:\Java\jdk1.8.0_40\jre\lib\resources.jar;D:\Java\jdk1.8.0_40\jre\lib\rt.jar;D:\Java\jdk1.8.0_40\jre\lib\sunrsasign.jar;D:\Java\jdk1.8.0_40\jre\lib\jsse.jar;D:\Java\jdk1.8.0_40\jre\lib\jce.jar;D:\Java\jdk1.8.0_40\jre\lib\charsets.jar;D:\Java\jdk1.8.0_40\jre\lib\jfr.jar;D:\Java\jdk1.8.0_40\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}  
[DEBUG] 2015-12-01 15:15:35,518(1551) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[DEBUG] 2015-12-01 15:15:35,800(1833) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3604) –> [main] Static SQL for entity: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:15:35,800(1833) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3609) –> [main]  Version select: select id from test where id =?  
[DEBUG] 2015-12-01 15:15:35,815(1848) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3612) –> [main]  Snapshot select: select testentity_.id, testentity_.name as name2_0_ from test testentity_ where testentity_.id=?  
[DEBUG] 2015-12-01 15:15:35,815(1848) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3615) –> [main]  Insert 0: insert into test (name, id) values (?, ?)  
[DEBUG] 2015-12-01 15:15:35,815(1848) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3616) –> [main]  Update 0: update test set name=? where id=?  
[DEBUG] 2015-12-01 15:15:35,815(1848) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3617) –> [main]  Delete 0: delete from test where id=?  
[DEBUG] 2015-12-01 15:15:35,878(1911) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [NONE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:15:35,878(1911) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:15:35,878(1911) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:15:35,878(1911) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE_NOWAIT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:15:35,878(1911) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [FORCE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:15:35,878(1911) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? lock in share mode  
[DEBUG] 2015-12-01 15:15:35,878(1911) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_WRITE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:15:35,878(1911) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:15:35,878(1911) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:15:35,878(1911) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:15:35,893(1926) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:15:35,905(1938) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:15:35,984(2017) org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:62) –> [main] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@16423501  
[DEBUG] 2015-12-01 15:15:35,984(2017) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:75) –> [main] Registering SessionFactory: 9e93edb5-1b4c-41bc-9b23-934b03f503b5 (<unnamed>)  
[DEBUG] 2015-12-01 15:15:35,984(2017) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:82) –> [main] Not binding SessionFactory to JNDI, no JNDI name configured  
[DEBUG] 2015-12-01 15:15:35,984(2017) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:492) –> [main] Instantiated session factory  
[INFO ] 2015-12-01 15:15:36,000(2033) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:182) –> [main] HHH000228: Running hbm2ddl schema update  
[INFO ] 2015-12-01 15:15:36,000(2033) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:193) –> [main] HHH000102: Fetching database metadata  
[INFO ] 2015-12-01 15:15:36,000(2033) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:205) –> [main] HHH000396: Updating schema  
[DEBUG] 2015-12-01 15:15:36,000(2033) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:15:36,000(2033) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:15:36,000(2033) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:15:36,016(2049) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:15:36,016(2049) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:15:36,016(2049) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:15:36,016(2049) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:15:36,016(2049) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:15:36,016(2049) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:15:36,016(2049) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[INFO ] 2015-12-01 15:15:36,047(2080) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] HHH000261: Table found: Test.test  
[INFO ] 2015-12-01 15:15:36,047(2080) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:67) –> [main] HHH000037: Columns: [name, id]  
[INFO ] 2015-12-01 15:15:36,047(2080) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] HHH000108: Foreign keys: []  
[INFO ] 2015-12-01 15:15:36,047(2080) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:70) –> [main] HHH000126: Indexes: [primary]  
[DEBUG] 2015-12-01 15:15:36,047(2080) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-12-01 15:15:36,047(2080) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:242) –> [main] HHH000232: Schema update complete  
[DEBUG] 2015-12-01 15:15:36,062(2095) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1073) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-12-01 15:15:36,062(2095) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1096) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-12-01 15:15:36,078(2111) org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:110) –> [main] Statistics initialized [enabled=false]  
[DEBUG] 2015-12-01 15:15:36,187(2220) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@48974e45  
[DEBUG] 2015-12-01 15:15:36,187(2220) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@48974e45  
[DEBUG] 2015-12-01 15:15:36,187(2220) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@48974e45  
[DEBUG] 2015-12-01 15:15:36,187(2220) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@57af006c  
[DEBUG] 2015-12-01 15:15:36,187(2220) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@446293d  
[DEBUG] 2015-12-01 15:15:36,187(2220) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@37654521  
[DEBUG] 2015-12-01 15:15:36,187(2220) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2  
[DEBUG] 2015-12-01 15:15:36,187(2220) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2  
[DEBUG] 2015-12-01 15:15:36,187(2220) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7ea9e1e2  
[DEBUG] 2015-12-01 15:15:36,187(2220) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@2053d869  
[DEBUG] 2015-12-01 15:15:36,187(2220) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@2053d869  
[DEBUG] 2015-12-01 15:15:36,187(2220) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2053d869  
[DEBUG] 2015-12-01 15:15:36,187(2220) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@10d307f1  
[DEBUG] 2015-12-01 15:15:36,203(2236) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@10d307f1  
[DEBUG] 2015-12-01 15:15:36,203(2236) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@10d307f1  
[DEBUG] 2015-12-01 15:15:36,203(2236) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@63a12c68  
[DEBUG] 2015-12-01 15:15:36,203(2236) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@63a12c68  
[DEBUG] 2015-12-01 15:15:36,203(2236) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@63a12c68  
[DEBUG] 2015-12-01 15:15:36,203(2236) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@fba92d3  
[DEBUG] 2015-12-01 15:15:36,203(2236) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@fba92d3  
[DEBUG] 2015-12-01 15:15:36,203(2236) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@fba92d3  
[DEBUG] 2015-12-01 15:15:36,203(2236) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@156b88f5  
[DEBUG] 2015-12-01 15:15:36,203(2236) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@156b88f5  
[DEBUG] 2015-12-01 15:15:36,203(2236) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@156b88f5  
[DEBUG] 2015-12-01 15:15:36,203(2236) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@7133da86  
[DEBUG] 2015-12-01 15:15:36,203(2236) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@7133da86  
[DEBUG] 2015-12-01 15:15:36,219(2252) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7133da86  
[DEBUG] 2015-12-01 15:15:36,219(2252) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2fb3536e  
[DEBUG] 2015-12-01 15:15:36,219(2252) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2fb3536e  
[DEBUG] 2015-12-01 15:15:36,219(2252) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3b6ddd1d  
[DEBUG] 2015-12-01 15:15:36,219(2252) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3b6ddd1d  
[DEBUG] 2015-12-01 15:15:36,219(2252) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration string -> org.hibernate.type.StringType@1a18644  
[DEBUG] 2015-12-01 15:15:36,219(2252) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@1a18644  
[DEBUG] 2015-12-01 15:15:36,219(2252) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1e04fa0a  
[DEBUG] 2015-12-01 15:15:36,219(2252) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@f5acb9d  
[DEBUG] 2015-12-01 15:15:36,219(2252) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration url -> org.hibernate.type.UrlType@7bd4937b  
[DEBUG] 2015-12-01 15:15:36,219(2252) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@7bd4937b  
[DEBUG] 2015-12-01 15:15:36,219(2252) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration date -> org.hibernate.type.DateType@209da20d  
[DEBUG] 2015-12-01 15:15:36,219(2252) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@209da20d  
[DEBUG] 2015-12-01 15:15:36,219(2252) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration time -> org.hibernate.type.TimeType@5d0a1059  
[DEBUG] 2015-12-01 15:15:36,234(2267) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5d0a1059  
[DEBUG] 2015-12-01 15:15:36,234(2267) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@37d4349f  
[DEBUG] 2015-12-01 15:15:36,234(2267) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@37d4349f  
[DEBUG] 2015-12-01 15:15:36,234(2267) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@37d4349f  
[DEBUG] 2015-12-01 15:15:36,234(2267) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3a44431a  
[DEBUG] 2015-12-01 15:15:36,234(2267) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@ffaa6af  
[DEBUG] 2015-12-01 15:15:36,234(2267) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@ffaa6af  
[DEBUG] 2015-12-01 15:15:36,234(2267) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@ffaa6af  
[DEBUG] 2015-12-01 15:15:36,234(2267) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@729d991e  
[DEBUG] 2015-12-01 15:15:36,234(2267) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@66f57048  
[DEBUG] 2015-12-01 15:15:36,234(2267) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@66f57048  
[DEBUG] 2015-12-01 15:15:36,234(2267) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@1e1a0406  
[DEBUG] 2015-12-01 15:15:36,234(2267) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1e1a0406  
[DEBUG] 2015-12-01 15:15:36,234(2267) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@71a8adcf  
[DEBUG] 2015-12-01 15:15:36,250(2283) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@71a8adcf  
[DEBUG] 2015-12-01 15:15:36,250(2283) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration class -> org.hibernate.type.ClassType@61001b64  
[DEBUG] 2015-12-01 15:15:36,250(2283) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@61001b64  
[DEBUG] 2015-12-01 15:15:36,250(2283) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@55634720  
[DEBUG] 2015-12-01 15:15:36,250(2283) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@55634720  
[DEBUG] 2015-12-01 15:15:36,250(2283) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2d710f1a  
[DEBUG] 2015-12-01 15:15:36,250(2283) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@13fd2ccd  
[DEBUG] 2015-12-01 15:15:36,250(2283) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@53aac487  
[DEBUG] 2015-12-01 15:15:36,250(2283) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@53aac487  
[DEBUG] 2015-12-01 15:15:36,250(2283) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@53aac487  
[DEBUG] 2015-12-01 15:15:36,250(2283) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2d52216b  
[DEBUG] 2015-12-01 15:15:36,250(2283) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2d52216b  
[DEBUG] 2015-12-01 15:15:36,250(2283) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2d52216b  
[DEBUG] 2015-12-01 15:15:36,250(2283) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration image -> org.hibernate.type.ImageType@4f80542f  
[DEBUG] 2015-12-01 15:15:36,266(2299) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@5d534f5d  
[DEBUG] 2015-12-01 15:15:36,266(2299) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@5d534f5d  
[DEBUG] 2015-12-01 15:15:36,266(2299) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@5d534f5d  
[DEBUG] 2015-12-01 15:15:36,266(2299) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6221a451  
[DEBUG] 2015-12-01 15:15:36,266(2299) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6221a451  
[DEBUG] 2015-12-01 15:15:36,266(2299) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6221a451  
[DEBUG] 2015-12-01 15:15:36,266(2299) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration text -> org.hibernate.type.TextType@5677323c  
[DEBUG] 2015-12-01 15:15:36,266(2299) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ntext -> org.hibernate.type.NTextType@1e0b4072  
[DEBUG] 2015-12-01 15:15:36,281(2314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@2892d68  
[DEBUG] 2015-12-01 15:15:36,281(2314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2892d68  
[DEBUG] 2015-12-01 15:15:36,281(2314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2e385cce  
[DEBUG] 2015-12-01 15:15:36,281(2314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@7d0b7e3c  
[DEBUG] 2015-12-01 15:15:36,281(2314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7d0b7e3c  
[DEBUG] 2015-12-01 15:15:36,281(2314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nclob -> org.hibernate.type.NClobType@117159c0  
[DEBUG] 2015-12-01 15:15:36,281(2314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@117159c0  
[DEBUG] 2015-12-01 15:15:36,281(2314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@235ecd9f  
[DEBUG] 2015-12-01 15:15:36,281(2314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@75d3a5e0  
[DEBUG] 2015-12-01 15:15:36,281(2314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@19e4653c  
[DEBUG] 2015-12-01 15:15:36,281(2314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@742ff096  
[DEBUG] 2015-12-01 15:15:36,281(2314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@742ff096  
[DEBUG] 2015-12-01 15:15:36,281(2314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4a9419d7  
[DEBUG] 2015-12-01 15:15:36,281(2314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2e8ab815  
[DEBUG] 2015-12-01 15:15:36,281(2314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@d1f74b8  
[DEBUG] 2015-12-01 15:15:36,281(2314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3a0807b7  
[DEBUG] 2015-12-01 15:15:36,297(2330) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5769e7ae  
[DEBUG] 2015-12-01 15:15:36,297(2330) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@26b894bd  
[DEBUG] 2015-12-01 15:15:36,297(2330) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@30b34287  
[DEBUG] 2015-12-01 15:15:36,297(2330) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3676ac27  
[DEBUG] 2015-12-01 15:15:36,297(2330) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-12-01 15:15:36,297(2330) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-12-01 15:15:36,297(2330) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:15:36,297(2330) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:15:36,297(2330) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-12-01 15:15:36,297(2330) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]  
[DEBUG] 2015-12-01 15:15:36,297(2330) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-12-01 15:15:36,297(2330) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-12-01 15:15:36,297(2330) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-12-01 15:15:36,321(2354) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-12-01 15:15:36,322(2355) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-12-01 15:15:36,322(2355) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-12-01 15:15:36,323(2356) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-12-01 15:15:36,324(2357) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-12-01 15:15:36,324(2357) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]  
[DEBUG] 2015-12-01 15:15:36,350(2383) org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) –> [main] Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].  
[DEBUG] 2015-12-01 15:15:36,360(2393) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1781) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-12-01 15:15:36,425(2458) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:121) –> [main] Database ->
       name : MySQL
    version : 5.6.22
      major : 5
      minor : 6  
[DEBUG] 2015-12-01 15:15:36,426(2459) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:127) –> [main] Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[DEBUG] 2015-12-01 15:15:36,427(2460) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:133) –> [main] JDBC version : 4.0  
[INFO ] 2015-12-01 15:15:36,436(2469) org.hibernate.dialect.Dialect.<init>(Dialect.java:130) –> [main] HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-12-01 15:15:36,438(2471) org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:120) –> [main] HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException  
[DEBUG] 2015-12-01 15:15:36,442(2475) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:15:36,443(2476) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:15:36,444(2477) org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:534) –> [main] Binding entity from annotated class: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:15:36,445(2478) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}  
[DEBUG] 2015-12-01 15:15:36,446(2479) org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1118) –> [main] No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED  
[DEBUG] 2015-12-01 15:15:36,447(2480) org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:394) –> [main] Import with entity name TestEntity  
[DEBUG] 2015-12-01 15:15:36,448(2481) org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:564) –> [main] Bind entity com.it_sucre.entity.TestEntity on table test  
[DEBUG] 2015-12-01 15:15:36,450(2483) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=id, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:15:36,451(2484) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property id with lazy=false  
[DEBUG] 2015-12-01 15:15:36,452(2485) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for id  
[DEBUG] 2015-12-01 15:15:36,453(2486) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property id  
[DEBUG] 2015-12-01 15:15:36,454(2487) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=name, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:15:36,455(2488) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property name with lazy=false  
[DEBUG] 2015-12-01 15:15:36,456(2489) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for name  
[DEBUG] 2015-12-01 15:15:36,457(2490) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property name  
[DEBUG] 2015-12-01 15:15:36,458(2491) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for id  
[DEBUG] 2015-12-01 15:15:36,458(2491) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for name  
[DEBUG] 2015-12-01 15:15:36,460(2493) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:15:36,461(2494) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:15:36,462(2495) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:15:36,462(2495) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:15:36,463(2496) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:15:36,463(2496) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:15:36,464(2497) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:15:36,465(2498) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[DEBUG] 2015-12-01 15:15:36,474(2507) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:117) –> [main] Automatic flush during beforeCompletion(): disabled  
[DEBUG] 2015-12-01 15:15:36,476(2509) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:123) –> [main] Automatic session close at end of transaction: disabled  
[DEBUG] 2015-12-01 15:15:36,476(2509) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:134) –> [main] JDBC batch size: 15  
[DEBUG] 2015-12-01 15:15:36,477(2510) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:140) –> [main] JDBC batch updates for versioned data: disabled  
[DEBUG] 2015-12-01 15:15:36,478(2511) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:150) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-12-01 15:15:36,479(2512) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:156) –> [main] Wrap result sets: disabled  
[DEBUG] 2015-12-01 15:15:36,480(2513) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:162) –> [main] JDBC3 getGeneratedKeys(): enabled  
[DEBUG] 2015-12-01 15:15:36,480(2513) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:174) –> [main] multi-tenancy strategy : NONE  
[DEBUG] 2015-12-01 15:15:36,481(2514) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:180) –> [main] Connection release mode: auto  
[INFO ] 2015-12-01 15:15:36,482(2515) org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:68) –> [main] HHH000399: Using default transaction strategy (direct JDBC transactions)  
[DEBUG] 2015-12-01 15:15:36,487(2520) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Using BatchFetchStyle : LEGACY  
[DEBUG] 2015-12-01 15:15:36,489(2522) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:221) –> [main] Maximum outer join fetch depth: 2  
[DEBUG] 2015-12-01 15:15:36,494(2527) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:227) –> [main] Default batch fetch size: 1  
[DEBUG] 2015-12-01 15:15:36,495(2528) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:233) –> [main] Generate SQL with comments: disabled  
[DEBUG] 2015-12-01 15:15:36,495(2528) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:239) –> [main] Order SQL updates by primary key: disabled  
[DEBUG] 2015-12-01 15:15:36,496(2529) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Order SQL inserts for batching: disabled  
[DEBUG] 2015-12-01 15:15:36,496(2529) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Default null ordering: none  
[DEBUG] 2015-12-01 15:15:36,496(2529) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:584) –> [main] Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-12-01 15:15:36,497(2530) org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) –> [main] HHH000397: Using ASTQueryTranslatorFactory  
[DEBUG] 2015-12-01 15:15:36,498(2531) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:263) –> [main] Query language substitutions: {}  
[DEBUG] 2015-12-01 15:15:36,499(2532) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:269) –> [main] JPA-QL strict compliance: disabled  
[DEBUG] 2015-12-01 15:15:36,499(2532) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:277) –> [main] Second-level cache: enabled  
[DEBUG] 2015-12-01 15:15:36,500(2533) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:283) –> [main] Query cache: disabled  
[DEBUG] 2015-12-01 15:15:36,501(2534) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:524) –> [main] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory  
[DEBUG] 2015-12-01 15:15:36,502(2535) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:534) –> [main] org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.  
[DEBUG] 2015-12-01 15:15:36,503(2536) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:306) –> [main] Optimize cache for minimal puts: disabled  
[DEBUG] 2015-12-01 15:15:36,504(2537) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:321) –> [main] Structured second-level cache entries: disabled  
[DEBUG] 2015-12-01 15:15:36,505(2538) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:331) –> [main] Second-level cache direct-reference entries: disabled  
[DEBUG] 2015-12-01 15:15:36,505(2538) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:339) –> [main] Statistics: disabled  
[DEBUG] 2015-12-01 15:15:36,506(2539) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:345) –> [main] Deleted entity synthetic identifier rollback: disabled  
[DEBUG] 2015-12-01 15:15:36,507(2540) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:372) –> [main] Default entity-mode: pojo  
[DEBUG] 2015-12-01 15:15:36,508(2541) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:378) –> [main] Named query checking : enabled  
[DEBUG] 2015-12-01 15:15:36,508(2541) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:384) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): enabled  
[DEBUG] 2015-12-01 15:15:36,511(2544) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:402) –> [main] Allow initialization of lazy state outside session : : disabled  
[DEBUG] 2015-12-01 15:15:36,513(2546) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:412) –> [main] JTA Track by Thread: enabled  
[DEBUG] 2015-12-01 15:15:36,513(2546) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Building session factory  
[DEBUG] 2015-12-01 15:15:36,515(2548) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:280) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-12-01 15:15:36,516(2549) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:281) –> [main] Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=D:\Java\jdk1.8.0_40\jre\bin, java.vm.version=25.40-b25, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\Java\workspace\demo-chained-transactionmanager, java.runtime.version=1.8.0_40-b26, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=thread, java.endorsed.dirs=D:\Java\jdk1.8.0_40\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\奇点之~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8.1, sun.jnu.encoding=GBK, java.library.path=D:\Java\jdk1.8.0_40\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/jdk1.8.0_40/bin/../jre/bin/server;D:/Java/jdk1.8.0_40/bin/../jre/bin;D:/Java/jdk1.8.0_40/bin/../jre/lib/amd64;D:\Java\jdk1.8.0_40/bin;D:\Java\jdk1.8.0_40/lib/dt.jar;D:\Java\jdk1.8.0_40/lib/tools.jar;D:\__ENV__\apache-maven-3.2.1/bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__ENV__\apache-tomcat-7.0.57\bin;D:\__ENV__\apache-tomcat-7.0.57\jre;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\TortoiseSVN\bin;D:\__ENV__\eclipse;;., hibernate.connection.datasource=org.apache.commons.dbcp.BasicDataSource@51a06cbe, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=6.3, user.home=C:\Users\奇点之光08老师, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=奇点之光08老师, java.class.path=D:\Java\workspace\demo-chained-transactionmanager\target\test-classes;D:\Java\workspace\demo-chained-transactionmanager\target\classes;D:\__ENV__\repo\ch\qos\logback\logback-core\0.9.28\logback-core-0.9.28.jar;D:\__ENV__\repo\ch\qos\logback\logback-classic\0.9.28\logback-classic-0.9.28.jar;D:\__ENV__\repo\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;D:\__ENV__\repo\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;D:\__ENV__\repo\org\slf4j\slf4j-api\1.7.7\slf4j-api-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-jdk14\1.7.7\slf4j-jdk14-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-log4j12\1.7.7\slf4j-log4j12-1.7.7.jar;D:\__ENV__\repo\mysql\mysql-connector-java\5.1.26\mysql-connector-java-5.1.26.jar;D:\__ENV__\repo\log4j\log4j\1.2.14\log4j-1.2.14.jar;D:\__ENV__\repo\org\springframework\data\spring-data-commons\1.8.0.RELEASE\spring-data-commons-1.8.0.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\slf4j\jcl-over-slf4j\1.7.7\jcl-over-slf4j-1.7.7.jar;D:\__ENV__\repo\org\springframework\spring-context\3.2.4.RELEASE\spring-context-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-aop\3.2.4.RELEASE\spring-aop-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-expression\3.2.4.RELEASE\spring-expression-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-oxm\3.2.4.RELEASE\spring-oxm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\__ENV__\repo\org\springframework\spring-web\3.2.4.RELEASE\spring-web-3.2.4.RELEASE.jar;D:\__ENV__\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\__ENV__\repo\org\springframework\spring-webmvc\3.2.4.RELEASE\spring-webmvc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-orm\3.2.4.RELEASE\spring-orm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-jdbc\3.2.4.RELEASE\spring-jdbc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-tx\3.2.4.RELEASE\spring-tx-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-test\3.2.4.RELEASE\spring-test-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\__ENV__\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\__ENV__\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\__ENV__\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\__ENV__\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-validator\4.2.0.Final\hibernate-validator-4.2.0.Final.jar;D:\__ENV__\repo\javax\validation\validation-api\1.0.0.GA\validation-api-1.0.0.GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-core\4.2.10.Final\hibernate-core-4.2.10.Final.jar;D:\__ENV__\repo\antlr\antlr\2.7.7\antlr-2.7.7.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.1.Final\jboss-transaction-api_1.1_spec-1.0.1.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpcore\4.3.1\httpcore-4.3.1.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpclient\4.3.1\httpclient-4.3.1.jar;D:\__ENV__\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\__ENV__\repo\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpmime\4.3.1\httpmime-4.3.1.jar;D:\__ENV__\repo\redis\clients\jedis\2.7.2\jedis-2.7.2.jar;D:\__ENV__\repo\org\apache\commons\commons-pool2\2.3\commons-pool2-2.3.jar;D:\__ENV__\repo\javax\persistence\persistence-api\1.0.2\persistence-api-1.0.2.jar;D:\__ENV__\repo\org\ansj\ansj_seg\0.9\ansj_seg-0.9.jar;D:\__ENV__\repo\org\ansj\tree_split\1.0.1\tree_split-1.0.1.jar;D:\__ENV__\repo\org\apache\commons-lang3\commons-lang3\3.1\commons-lang3-3.1.jar;D:\__ENV__\repo\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;D:\__ENV__\repo\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;D:\__ENV__\repo\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;D:\__ENV__\repo\commons-io\commons-io\2.4\commons-io-2.4.jar;D:\__ENV__\repo\commons-fileupload\commons-fileupload\1.2.2\commons-fileupload-1.2.2.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\__ENV__\repo\com\googlecode\xmemcached\xmemcached\1.4.1\xmemcached-1.4.1.jar;D:\__ENV__\repo\net\sf\json-lib\json-lib\2.4\json-lib-2.4-jdk15.jar;D:\__ENV__\repo\commons-beanutils\commons-beanutils\1.8.0\commons-beanutils-1.8.0.jar;D:\__ENV__\repo\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;D:\__ENV__\repo\net\sf\ezmorph\ezmorph\1.0.6\ezmorph-1.0.6.jar;D:\__ENV__\repo\org\mybatis\mybatis\3.1.1\mybatis-3.1.1.jar;D:\__ENV__\repo\org\mybatis\mybatis-spring\1.1.1\mybatis-spring-1.1.1.jar;D:\__ENV__\repo\junit\junit\4.11\junit-4.11.jar;D:\__ENV__\repo\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/358/1/.cp/;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/357/1/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.classLoader.application=sun.misc.Launcher$AppClassLoader@3b07d329, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=D:\Java\jdk1.8.0_40\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 60947 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -test com.it_sucre.service.HibernateServiceTest:test, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_40, java.ext.dirs=D:\Java\jdk1.8.0_40\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=D:\Java\jdk1.8.0_40\jre\lib\resources.jar;D:\Java\jdk1.8.0_40\jre\lib\rt.jar;D:\Java\jdk1.8.0_40\jre\lib\sunrsasign.jar;D:\Java\jdk1.8.0_40\jre\lib\jsse.jar;D:\Java\jdk1.8.0_40\jre\lib\jce.jar;D:\Java\jdk1.8.0_40\jre\lib\charsets.jar;D:\Java\jdk1.8.0_40\jre\lib\jfr.jar;D:\Java\jdk1.8.0_40\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}  
[DEBUG] 2015-12-01 15:15:36,539(2572) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[DEBUG] 2015-12-01 15:15:36,544(2577) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3604) –> [main] Static SQL for entity: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:15:36,545(2578) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3609) –> [main]  Version select: select id from test where id =?  
[DEBUG] 2015-12-01 15:15:36,546(2579) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3612) –> [main]  Snapshot select: select testentity_.id, testentity_.name as name2_0_ from test testentity_ where testentity_.id=?  
[DEBUG] 2015-12-01 15:15:36,547(2580) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3615) –> [main]  Insert 0: insert into test (name, id) values (?, ?)  
[DEBUG] 2015-12-01 15:15:36,547(2580) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3616) –> [main]  Update 0: update test set name=? where id=?  
[DEBUG] 2015-12-01 15:15:36,548(2581) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3617) –> [main]  Delete 0: delete from test where id=?  
[DEBUG] 2015-12-01 15:15:36,549(2582) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [NONE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:15:36,549(2582) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:15:36,550(2583) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:15:36,552(2585) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE_NOWAIT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:15:36,553(2586) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [FORCE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:15:36,554(2587) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? lock in share mode  
[DEBUG] 2015-12-01 15:15:36,554(2587) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_WRITE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:15:36,555(2588) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:15:36,555(2588) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:15:36,556(2589) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:15:36,556(2589) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:15:36,558(2591) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:15:36,558(2591) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:75) –> [main] Registering SessionFactory: 6de21e78-02e2-448f-b7f1-b76ffdfb6c50 (<unnamed>)  
[DEBUG] 2015-12-01 15:15:36,559(2592) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:82) –> [main] Not binding SessionFactory to JNDI, no JNDI name configured  
[DEBUG] 2015-12-01 15:15:36,559(2592) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:492) –> [main] Instantiated session factory  
[INFO ] 2015-12-01 15:15:36,561(2594) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:182) –> [main] HHH000228: Running hbm2ddl schema update  
[INFO ] 2015-12-01 15:15:36,561(2594) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:193) –> [main] HHH000102: Fetching database metadata  
[INFO ] 2015-12-01 15:15:36,562(2595) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:205) –> [main] HHH000396: Updating schema  
[DEBUG] 2015-12-01 15:15:36,563(2596) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:15:36,564(2597) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:15:36,564(2597) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:15:36,565(2598) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:15:36,566(2599) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:15:36,566(2599) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:15:36,567(2600) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:15:36,567(2600) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:15:36,568(2601) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:15:36,568(2601) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[INFO ] 2015-12-01 15:15:36,585(2618) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] HHH000261: Table found: Test.test  
[INFO ] 2015-12-01 15:15:36,586(2619) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:67) –> [main] HHH000037: Columns: [name, id]  
[INFO ] 2015-12-01 15:15:36,586(2619) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] HHH000108: Foreign keys: []  
[INFO ] 2015-12-01 15:15:36,587(2620) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:70) –> [main] HHH000126: Indexes: [primary]  
[DEBUG] 2015-12-01 15:15:36,587(2620) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-12-01 15:15:36,588(2621) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:242) –> [main] HHH000232: Schema update complete  
[DEBUG] 2015-12-01 15:15:36,588(2621) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1073) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-12-01 15:15:36,589(2622) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1096) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-12-01 15:15:36,589(2622) org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:110) –> [main] Statistics initialized [enabled=false]  
[DEBUG] 2015-12-01 15:15:37,089(3122) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:212) –> [main] Obtaining JDBC connection  
[DEBUG] 2015-12-01 15:15:37,090(3123) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:218) –> [main] Obtained JDBC connection  
[DEBUG] 2015-12-01 15:15:37,097(3130) org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) –> [main] begin  
[DEBUG] 2015-12-01 15:15:37,097(3130) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) –> [main] initial autocommit status: true  
[DEBUG] 2015-12-01 15:15:37,097(3130) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) –> [main] disabling autocommit  
[DEBUG] 2015-12-01 15:15:37,222(3255) org.hibernate.engine.transaction.spi.AbstractTransactionImpl.rollback(AbstractTransactionImpl.java:203) –> [main] rolling back  
[DEBUG] 2015-12-01 15:15:37,222(3255) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doRollback(JdbcTransaction.java:164) –> [main] rolled JDBC Connection  
[DEBUG] 2015-12-01 15:15:37,222(3255) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) –> [main] re-enabling autocommit  
[DEBUG] 2015-12-01 15:15:37,238(3271) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:232) –> [main] Releasing JDBC connection  
[DEBUG] 2015-12-01 15:15:37,238(3271) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:250) –> [main] Released JDBC connection  
[DEBUG] 2015-12-01 15:15:37,285(3318) org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1374) –> [Thread-2] HHH000031: Closing  
[DEBUG] 2015-12-01 15:15:37,300(3333) org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1374) –> [Thread-2] HHH000031: Closing  
[DEBUG] 2015-12-01 15:16:01,912(0) org.hibernate.cfg.Configuration.<clinit>(Configuration.java:184) –> [main] Logging Provider: org.jboss.logging.Log4jLoggerProvider  
[DEBUG] 2015-12-01 15:16:01,943(31) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@48974e45  
[DEBUG] 2015-12-01 15:16:01,943(31) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@48974e45  
[DEBUG] 2015-12-01 15:16:01,943(31) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@48974e45  
[DEBUG] 2015-12-01 15:16:01,943(31) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@57af006c  
[DEBUG] 2015-12-01 15:16:01,959(47) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@446293d  
[DEBUG] 2015-12-01 15:16:01,959(47) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@37654521  
[DEBUG] 2015-12-01 15:16:01,959(47) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2  
[DEBUG] 2015-12-01 15:16:01,959(47) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2  
[DEBUG] 2015-12-01 15:16:01,959(47) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7ea9e1e2  
[DEBUG] 2015-12-01 15:16:01,975(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@2053d869  
[DEBUG] 2015-12-01 15:16:01,975(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@2053d869  
[DEBUG] 2015-12-01 15:16:01,975(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2053d869  
[DEBUG] 2015-12-01 15:16:01,975(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@10d307f1  
[DEBUG] 2015-12-01 15:16:01,975(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@10d307f1  
[DEBUG] 2015-12-01 15:16:01,975(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@10d307f1  
[DEBUG] 2015-12-01 15:16:01,975(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@63a12c68  
[DEBUG] 2015-12-01 15:16:01,975(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@63a12c68  
[DEBUG] 2015-12-01 15:16:01,975(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@63a12c68  
[DEBUG] 2015-12-01 15:16:01,990(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@fba92d3  
[DEBUG] 2015-12-01 15:16:01,990(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@fba92d3  
[DEBUG] 2015-12-01 15:16:01,990(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@fba92d3  
[DEBUG] 2015-12-01 15:16:01,990(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@156b88f5  
[DEBUG] 2015-12-01 15:16:01,990(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@156b88f5  
[DEBUG] 2015-12-01 15:16:01,990(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@156b88f5  
[DEBUG] 2015-12-01 15:16:01,990(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@7133da86  
[DEBUG] 2015-12-01 15:16:01,990(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@7133da86  
[DEBUG] 2015-12-01 15:16:01,990(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7133da86  
[DEBUG] 2015-12-01 15:16:01,990(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2fb3536e  
[DEBUG] 2015-12-01 15:16:01,990(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2fb3536e  
[DEBUG] 2015-12-01 15:16:02,006(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3b6ddd1d  
[DEBUG] 2015-12-01 15:16:02,006(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3b6ddd1d  
[DEBUG] 2015-12-01 15:16:02,006(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration string -> org.hibernate.type.StringType@1a18644  
[DEBUG] 2015-12-01 15:16:02,006(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@1a18644  
[DEBUG] 2015-12-01 15:16:02,006(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1e04fa0a  
[DEBUG] 2015-12-01 15:16:02,021(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@f5acb9d  
[DEBUG] 2015-12-01 15:16:02,021(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration url -> org.hibernate.type.UrlType@7bd4937b  
[DEBUG] 2015-12-01 15:16:02,021(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@7bd4937b  
[DEBUG] 2015-12-01 15:16:02,021(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration date -> org.hibernate.type.DateType@209da20d  
[DEBUG] 2015-12-01 15:16:02,021(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@209da20d  
[DEBUG] 2015-12-01 15:16:02,037(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration time -> org.hibernate.type.TimeType@5d0a1059  
[DEBUG] 2015-12-01 15:16:02,037(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5d0a1059  
[DEBUG] 2015-12-01 15:16:02,037(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@37d4349f  
[DEBUG] 2015-12-01 15:16:02,037(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@37d4349f  
[DEBUG] 2015-12-01 15:16:02,037(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@37d4349f  
[DEBUG] 2015-12-01 15:16:02,037(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3a44431a  
[DEBUG] 2015-12-01 15:16:02,053(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@ffaa6af  
[DEBUG] 2015-12-01 15:16:02,053(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@ffaa6af  
[DEBUG] 2015-12-01 15:16:02,053(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@ffaa6af  
[DEBUG] 2015-12-01 15:16:02,053(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@729d991e  
[DEBUG] 2015-12-01 15:16:02,053(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@66f57048  
[DEBUG] 2015-12-01 15:16:02,053(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@66f57048  
[DEBUG] 2015-12-01 15:16:02,053(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@1e1a0406  
[DEBUG] 2015-12-01 15:16:02,053(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1e1a0406  
[DEBUG] 2015-12-01 15:16:02,053(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@71a8adcf  
[DEBUG] 2015-12-01 15:16:02,053(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@71a8adcf  
[DEBUG] 2015-12-01 15:16:02,068(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration class -> org.hibernate.type.ClassType@61001b64  
[DEBUG] 2015-12-01 15:16:02,068(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@61001b64  
[DEBUG] 2015-12-01 15:16:02,068(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@55634720  
[DEBUG] 2015-12-01 15:16:02,068(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@55634720  
[DEBUG] 2015-12-01 15:16:02,068(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2d710f1a  
[DEBUG] 2015-12-01 15:16:02,068(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@13fd2ccd  
[DEBUG] 2015-12-01 15:16:02,068(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@53aac487  
[DEBUG] 2015-12-01 15:16:02,068(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@53aac487  
[DEBUG] 2015-12-01 15:16:02,068(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@53aac487  
[DEBUG] 2015-12-01 15:16:02,084(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2d52216b  
[DEBUG] 2015-12-01 15:16:02,084(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2d52216b  
[DEBUG] 2015-12-01 15:16:02,084(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2d52216b  
[DEBUG] 2015-12-01 15:16:02,084(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration image -> org.hibernate.type.ImageType@4f80542f  
[DEBUG] 2015-12-01 15:16:02,084(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@5d534f5d  
[DEBUG] 2015-12-01 15:16:02,084(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@5d534f5d  
[DEBUG] 2015-12-01 15:16:02,084(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@5d534f5d  
[DEBUG] 2015-12-01 15:16:02,100(188) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6221a451  
[DEBUG] 2015-12-01 15:16:02,100(188) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6221a451  
[DEBUG] 2015-12-01 15:16:02,100(188) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6221a451  
[DEBUG] 2015-12-01 15:16:02,100(188) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration text -> org.hibernate.type.TextType@5677323c  
[DEBUG] 2015-12-01 15:16:02,100(188) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ntext -> org.hibernate.type.NTextType@1e0b4072  
[DEBUG] 2015-12-01 15:16:02,131(219) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@2892d68  
[DEBUG] 2015-12-01 15:16:02,131(219) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2892d68  
[DEBUG] 2015-12-01 15:16:02,131(219) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2e385cce  
[DEBUG] 2015-12-01 15:16:02,131(219) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@7d0b7e3c  
[DEBUG] 2015-12-01 15:16:02,131(219) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7d0b7e3c  
[DEBUG] 2015-12-01 15:16:02,146(234) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nclob -> org.hibernate.type.NClobType@117159c0  
[DEBUG] 2015-12-01 15:16:02,146(234) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@117159c0  
[DEBUG] 2015-12-01 15:16:02,146(234) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@235ecd9f  
[DEBUG] 2015-12-01 15:16:02,146(234) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@75d3a5e0  
[DEBUG] 2015-12-01 15:16:02,146(234) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@19e4653c  
[DEBUG] 2015-12-01 15:16:02,146(234) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@742ff096  
[DEBUG] 2015-12-01 15:16:02,162(250) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@742ff096  
[DEBUG] 2015-12-01 15:16:02,162(250) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@79e4c792  
[DEBUG] 2015-12-01 15:16:02,162(250) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4c60d6e9  
[DEBUG] 2015-12-01 15:16:02,162(250) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4a83a74a  
[DEBUG] 2015-12-01 15:16:02,162(250) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4b29d1d2  
[DEBUG] 2015-12-01 15:16:02,162(250) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@28261e8e  
[DEBUG] 2015-12-01 15:16:02,162(250) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@8519cb4  
[DEBUG] 2015-12-01 15:16:02,162(250) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2d901eb0  
[DEBUG] 2015-12-01 15:16:02,162(250) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3f191845  
[INFO ] 2015-12-01 15:16:02,209(297) org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66) –> [main] HCANN000001: Hibernate Commons Annotations {4.0.4.Final}  
[INFO ] 2015-12-01 15:16:02,225(313) org.hibernate.Version.logVersion(Version.java:41) –> [main] HHH000412: Hibernate Core {4.2.10.Final}  
[INFO ] 2015-12-01 15:16:02,225(313) org.hibernate.cfg.Environment.<clinit>(Environment.java:238) –> [main] HHH000206: hibernate.properties not found  
[INFO ] 2015-12-01 15:16:02,225(313) org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:345) –> [main] HHH000021: Bytecode provider name : javassist  
[DEBUG] 2015-12-01 15:16:02,240(328) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-12-01 15:16:02,240(328) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-12-01 15:16:02,240(328) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:16:02,240(328) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:16:02,240(328) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-12-01 15:16:02,256(344) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]  
[DEBUG] 2015-12-01 15:16:02,256(344) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-12-01 15:16:02,256(344) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-12-01 15:16:02,271(359) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-12-01 15:16:02,271(359) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-12-01 15:16:02,271(359) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-12-01 15:16:02,271(359) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-12-01 15:16:02,271(359) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-12-01 15:16:02,271(359) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-12-01 15:16:02,271(359) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]  
[DEBUG] 2015-12-01 15:16:02,334(422) org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) –> [main] Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].  
[DEBUG] 2015-12-01 15:16:02,365(453) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1781) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-12-01 15:16:02,787(875) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:121) –> [main] Database ->
       name : MySQL
    version : 5.6.22
      major : 5
      minor : 6  
[DEBUG] 2015-12-01 15:16:02,791(879) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:127) –> [main] Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[DEBUG] 2015-12-01 15:16:02,791(879) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:133) –> [main] JDBC version : 4.0  
[INFO ] 2015-12-01 15:16:02,808(896) org.hibernate.dialect.Dialect.<init>(Dialect.java:130) –> [main] HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-12-01 15:16:02,824(912) org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:120) –> [main] HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException  
[DEBUG] 2015-12-01 15:16:02,870(958) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:16:02,870(958) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:16:02,870(958) org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:534) –> [main] Binding entity from annotated class: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:16:02,917(1005) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}  
[DEBUG] 2015-12-01 15:16:02,933(1021) org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1118) –> [main] No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED  
[DEBUG] 2015-12-01 15:16:02,964(1052) org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:394) –> [main] Import with entity name TestEntity  
[DEBUG] 2015-12-01 15:16:02,980(1068) org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:564) –> [main] Bind entity com.it_sucre.entity.TestEntity on table test  
[DEBUG] 2015-12-01 15:16:03,027(1115) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=id, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:16:03,027(1115) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property id with lazy=false  
[DEBUG] 2015-12-01 15:16:03,042(1130) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for id  
[DEBUG] 2015-12-01 15:16:03,042(1130) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property id  
[DEBUG] 2015-12-01 15:16:03,058(1146) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=name, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:16:03,058(1146) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property name with lazy=false  
[DEBUG] 2015-12-01 15:16:03,058(1146) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for name  
[DEBUG] 2015-12-01 15:16:03,058(1146) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property name  
[DEBUG] 2015-12-01 15:16:03,058(1146) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for id  
[DEBUG] 2015-12-01 15:16:03,058(1146) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for name  
[DEBUG] 2015-12-01 15:16:03,074(1162) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:16:03,074(1162) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:16:03,074(1162) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:16:03,074(1162) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:16:03,074(1162) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:16:03,074(1162) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:16:03,074(1162) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:16:03,074(1162) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[DEBUG] 2015-12-01 15:16:03,089(1177) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:117) –> [main] Automatic flush during beforeCompletion(): disabled  
[DEBUG] 2015-12-01 15:16:03,089(1177) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:123) –> [main] Automatic session close at end of transaction: disabled  
[DEBUG] 2015-12-01 15:16:03,089(1177) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:134) –> [main] JDBC batch size: 15  
[DEBUG] 2015-12-01 15:16:03,089(1177) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:140) –> [main] JDBC batch updates for versioned data: disabled  
[DEBUG] 2015-12-01 15:16:03,105(1193) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:150) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-12-01 15:16:03,105(1193) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:156) –> [main] Wrap result sets: disabled  
[DEBUG] 2015-12-01 15:16:03,105(1193) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:162) –> [main] JDBC3 getGeneratedKeys(): enabled  
[DEBUG] 2015-12-01 15:16:03,105(1193) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:174) –> [main] multi-tenancy strategy : NONE  
[DEBUG] 2015-12-01 15:16:03,105(1193) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:180) –> [main] Connection release mode: auto  
[INFO ] 2015-12-01 15:16:03,105(1193) org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:68) –> [main] HHH000399: Using default transaction strategy (direct JDBC transactions)  
[DEBUG] 2015-12-01 15:16:03,120(1208) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Using BatchFetchStyle : LEGACY  
[DEBUG] 2015-12-01 15:16:03,120(1208) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:221) –> [main] Maximum outer join fetch depth: 2  
[DEBUG] 2015-12-01 15:16:03,120(1208) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:227) –> [main] Default batch fetch size: 1  
[DEBUG] 2015-12-01 15:16:03,120(1208) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:233) –> [main] Generate SQL with comments: disabled  
[DEBUG] 2015-12-01 15:16:03,120(1208) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:239) –> [main] Order SQL updates by primary key: disabled  
[DEBUG] 2015-12-01 15:16:03,120(1208) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Order SQL inserts for batching: disabled  
[DEBUG] 2015-12-01 15:16:03,120(1208) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Default null ordering: none  
[DEBUG] 2015-12-01 15:16:03,120(1208) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:584) –> [main] Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-12-01 15:16:03,136(1224) org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) –> [main] HHH000397: Using ASTQueryTranslatorFactory  
[DEBUG] 2015-12-01 15:16:03,136(1224) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:263) –> [main] Query language substitutions: {}  
[DEBUG] 2015-12-01 15:16:03,136(1224) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:269) –> [main] JPA-QL strict compliance: disabled  
[DEBUG] 2015-12-01 15:16:03,136(1224) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:277) –> [main] Second-level cache: enabled  
[DEBUG] 2015-12-01 15:16:03,136(1224) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:283) –> [main] Query cache: disabled  
[DEBUG] 2015-12-01 15:16:03,136(1224) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:524) –> [main] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory  
[DEBUG] 2015-12-01 15:16:03,152(1240) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:534) –> [main] org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.  
[DEBUG] 2015-12-01 15:16:03,152(1240) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:306) –> [main] Optimize cache for minimal puts: disabled  
[DEBUG] 2015-12-01 15:16:03,152(1240) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:321) –> [main] Structured second-level cache entries: disabled  
[DEBUG] 2015-12-01 15:16:03,152(1240) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:331) –> [main] Second-level cache direct-reference entries: disabled  
[DEBUG] 2015-12-01 15:16:03,152(1240) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:339) –> [main] Statistics: disabled  
[DEBUG] 2015-12-01 15:16:03,152(1240) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:345) –> [main] Deleted entity synthetic identifier rollback: disabled  
[DEBUG] 2015-12-01 15:16:03,152(1240) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:372) –> [main] Default entity-mode: pojo  
[DEBUG] 2015-12-01 15:16:03,152(1240) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:378) –> [main] Named query checking : enabled  
[DEBUG] 2015-12-01 15:16:03,152(1240) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:384) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): enabled  
[DEBUG] 2015-12-01 15:16:03,152(1240) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:402) –> [main] Allow initialization of lazy state outside session : : disabled  
[DEBUG] 2015-12-01 15:16:03,152(1240) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:412) –> [main] JTA Track by Thread: enabled  
[DEBUG] 2015-12-01 15:16:03,167(1255) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Building session factory  
[DEBUG] 2015-12-01 15:16:03,183(1271) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:280) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-12-01 15:16:03,183(1271) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:281) –> [main] Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=D:\Java\jdk1.8.0_40\jre\bin, java.vm.version=25.40-b25, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\Java\workspace\demo-chained-transactionmanager, java.runtime.version=1.8.0_40-b26, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=thread, java.endorsed.dirs=D:\Java\jdk1.8.0_40\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\奇点之~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8.1, sun.jnu.encoding=GBK, java.library.path=D:\Java\jdk1.8.0_40\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/jdk1.8.0_40/bin/../jre/bin/server;D:/Java/jdk1.8.0_40/bin/../jre/bin;D:/Java/jdk1.8.0_40/bin/../jre/lib/amd64;D:\Java\jdk1.8.0_40/bin;D:\Java\jdk1.8.0_40/lib/dt.jar;D:\Java\jdk1.8.0_40/lib/tools.jar;D:\__ENV__\apache-maven-3.2.1/bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__ENV__\apache-tomcat-7.0.57\bin;D:\__ENV__\apache-tomcat-7.0.57\jre;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\TortoiseSVN\bin;D:\__ENV__\eclipse;;., hibernate.connection.datasource=org.apache.commons.dbcp.BasicDataSource@2320fa6f, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=6.3, user.home=C:\Users\奇点之光08老师, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=奇点之光08老师, java.class.path=D:\Java\workspace\demo-chained-transactionmanager\target\test-classes;D:\Java\workspace\demo-chained-transactionmanager\target\classes;D:\__ENV__\repo\ch\qos\logback\logback-core\0.9.28\logback-core-0.9.28.jar;D:\__ENV__\repo\ch\qos\logback\logback-classic\0.9.28\logback-classic-0.9.28.jar;D:\__ENV__\repo\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;D:\__ENV__\repo\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;D:\__ENV__\repo\org\slf4j\slf4j-api\1.7.7\slf4j-api-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-jdk14\1.7.7\slf4j-jdk14-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-log4j12\1.7.7\slf4j-log4j12-1.7.7.jar;D:\__ENV__\repo\mysql\mysql-connector-java\5.1.26\mysql-connector-java-5.1.26.jar;D:\__ENV__\repo\log4j\log4j\1.2.14\log4j-1.2.14.jar;D:\__ENV__\repo\org\springframework\data\spring-data-commons\1.8.0.RELEASE\spring-data-commons-1.8.0.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\slf4j\jcl-over-slf4j\1.7.7\jcl-over-slf4j-1.7.7.jar;D:\__ENV__\repo\org\springframework\spring-context\3.2.4.RELEASE\spring-context-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-aop\3.2.4.RELEASE\spring-aop-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-expression\3.2.4.RELEASE\spring-expression-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-oxm\3.2.4.RELEASE\spring-oxm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\__ENV__\repo\org\springframework\spring-web\3.2.4.RELEASE\spring-web-3.2.4.RELEASE.jar;D:\__ENV__\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\__ENV__\repo\org\springframework\spring-webmvc\3.2.4.RELEASE\spring-webmvc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-orm\3.2.4.RELEASE\spring-orm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-jdbc\3.2.4.RELEASE\spring-jdbc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-tx\3.2.4.RELEASE\spring-tx-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-test\3.2.4.RELEASE\spring-test-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\__ENV__\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\__ENV__\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\__ENV__\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\__ENV__\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-validator\4.2.0.Final\hibernate-validator-4.2.0.Final.jar;D:\__ENV__\repo\javax\validation\validation-api\1.0.0.GA\validation-api-1.0.0.GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-core\4.2.10.Final\hibernate-core-4.2.10.Final.jar;D:\__ENV__\repo\antlr\antlr\2.7.7\antlr-2.7.7.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.1.Final\jboss-transaction-api_1.1_spec-1.0.1.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpcore\4.3.1\httpcore-4.3.1.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpclient\4.3.1\httpclient-4.3.1.jar;D:\__ENV__\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\__ENV__\repo\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpmime\4.3.1\httpmime-4.3.1.jar;D:\__ENV__\repo\redis\clients\jedis\2.7.2\jedis-2.7.2.jar;D:\__ENV__\repo\org\apache\commons\commons-pool2\2.3\commons-pool2-2.3.jar;D:\__ENV__\repo\javax\persistence\persistence-api\1.0.2\persistence-api-1.0.2.jar;D:\__ENV__\repo\org\ansj\ansj_seg\0.9\ansj_seg-0.9.jar;D:\__ENV__\repo\org\ansj\tree_split\1.0.1\tree_split-1.0.1.jar;D:\__ENV__\repo\org\apache\commons-lang3\commons-lang3\3.1\commons-lang3-3.1.jar;D:\__ENV__\repo\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;D:\__ENV__\repo\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;D:\__ENV__\repo\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;D:\__ENV__\repo\commons-io\commons-io\2.4\commons-io-2.4.jar;D:\__ENV__\repo\commons-fileupload\commons-fileupload\1.2.2\commons-fileupload-1.2.2.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\__ENV__\repo\com\googlecode\xmemcached\xmemcached\1.4.1\xmemcached-1.4.1.jar;D:\__ENV__\repo\net\sf\json-lib\json-lib\2.4\json-lib-2.4-jdk15.jar;D:\__ENV__\repo\commons-beanutils\commons-beanutils\1.8.0\commons-beanutils-1.8.0.jar;D:\__ENV__\repo\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;D:\__ENV__\repo\net\sf\ezmorph\ezmorph\1.0.6\ezmorph-1.0.6.jar;D:\__ENV__\repo\org\mybatis\mybatis\3.1.1\mybatis-3.1.1.jar;D:\__ENV__\repo\org\mybatis\mybatis-spring\1.1.1\mybatis-spring-1.1.1.jar;D:\__ENV__\repo\junit\junit\4.11\junit-4.11.jar;D:\__ENV__\repo\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/358/1/.cp/;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/357/1/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.classLoader.application=sun.misc.Launcher$AppClassLoader@3b07d329, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=D:\Java\jdk1.8.0_40\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 60954 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -test com.it_sucre.service.HibernateServiceTest:test, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_40, java.ext.dirs=D:\Java\jdk1.8.0_40\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=D:\Java\jdk1.8.0_40\jre\lib\resources.jar;D:\Java\jdk1.8.0_40\jre\lib\rt.jar;D:\Java\jdk1.8.0_40\jre\lib\sunrsasign.jar;D:\Java\jdk1.8.0_40\jre\lib\jsse.jar;D:\Java\jdk1.8.0_40\jre\lib\jce.jar;D:\Java\jdk1.8.0_40\jre\lib\charsets.jar;D:\Java\jdk1.8.0_40\jre\lib\jfr.jar;D:\Java\jdk1.8.0_40\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}  
[DEBUG] 2015-12-01 15:16:03,386(1474) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[DEBUG] 2015-12-01 15:16:03,667(1755) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3604) –> [main] Static SQL for entity: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:16:03,667(1755) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3609) –> [main]  Version select: select id from test where id =?  
[DEBUG] 2015-12-01 15:16:03,683(1771) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3612) –> [main]  Snapshot select: select testentity_.id, testentity_.name as name2_0_ from test testentity_ where testentity_.id=?  
[DEBUG] 2015-12-01 15:16:03,683(1771) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3615) –> [main]  Insert 0: insert into test (name, id) values (?, ?)  
[DEBUG] 2015-12-01 15:16:03,683(1771) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3616) –> [main]  Update 0: update test set name=? where id=?  
[DEBUG] 2015-12-01 15:16:03,683(1771) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3617) –> [main]  Delete 0: delete from test where id=?  
[DEBUG] 2015-12-01 15:16:03,745(1833) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [NONE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:16:03,745(1833) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:16:03,761(1849) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:16:03,761(1849) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE_NOWAIT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:16:03,761(1849) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [FORCE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:16:03,761(1849) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? lock in share mode  
[DEBUG] 2015-12-01 15:16:03,761(1849) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_WRITE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:16:03,761(1849) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:16:03,761(1849) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:16:03,761(1849) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:16:03,777(1865) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:16:03,777(1865) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:16:03,870(1958) org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:62) –> [main] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@16423501  
[DEBUG] 2015-12-01 15:16:03,882(1970) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:75) –> [main] Registering SessionFactory: 3e2d2c94-ec78-437f-b856-c89a569747e5 (<unnamed>)  
[DEBUG] 2015-12-01 15:16:03,883(1971) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:82) –> [main] Not binding SessionFactory to JNDI, no JNDI name configured  
[DEBUG] 2015-12-01 15:16:03,883(1971) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:492) –> [main] Instantiated session factory  
[INFO ] 2015-12-01 15:16:03,883(1971) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:182) –> [main] HHH000228: Running hbm2ddl schema update  
[INFO ] 2015-12-01 15:16:03,883(1971) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:193) –> [main] HHH000102: Fetching database metadata  
[INFO ] 2015-12-01 15:16:03,883(1971) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:205) –> [main] HHH000396: Updating schema  
[DEBUG] 2015-12-01 15:16:03,883(1971) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:16:03,883(1971) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:16:03,883(1971) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:16:03,883(1971) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:16:03,899(1987) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:16:03,899(1987) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:16:03,899(1987) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:16:03,899(1987) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:16:03,899(1987) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:16:03,899(1987) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[INFO ] 2015-12-01 15:16:03,930(2018) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] HHH000261: Table found: Test.test  
[INFO ] 2015-12-01 15:16:03,930(2018) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:67) –> [main] HHH000037: Columns: [name, id]  
[INFO ] 2015-12-01 15:16:03,930(2018) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] HHH000108: Foreign keys: []  
[INFO ] 2015-12-01 15:16:03,930(2018) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:70) –> [main] HHH000126: Indexes: [primary]  
[DEBUG] 2015-12-01 15:16:03,930(2018) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-12-01 15:16:03,930(2018) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:242) –> [main] HHH000232: Schema update complete  
[DEBUG] 2015-12-01 15:16:03,946(2034) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1073) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-12-01 15:16:03,946(2034) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1096) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-12-01 15:16:03,961(2049) org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:110) –> [main] Statistics initialized [enabled=false]  
[DEBUG] 2015-12-01 15:16:04,008(2096) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@48974e45  
[DEBUG] 2015-12-01 15:16:04,008(2096) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@48974e45  
[DEBUG] 2015-12-01 15:16:04,008(2096) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@48974e45  
[DEBUG] 2015-12-01 15:16:04,008(2096) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@57af006c  
[DEBUG] 2015-12-01 15:16:04,008(2096) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@446293d  
[DEBUG] 2015-12-01 15:16:04,024(2112) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@37654521  
[DEBUG] 2015-12-01 15:16:04,024(2112) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2  
[DEBUG] 2015-12-01 15:16:04,024(2112) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2  
[DEBUG] 2015-12-01 15:16:04,024(2112) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7ea9e1e2  
[DEBUG] 2015-12-01 15:16:04,024(2112) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@2053d869  
[DEBUG] 2015-12-01 15:16:04,024(2112) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@2053d869  
[DEBUG] 2015-12-01 15:16:04,024(2112) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2053d869  
[DEBUG] 2015-12-01 15:16:04,024(2112) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@10d307f1  
[DEBUG] 2015-12-01 15:16:04,024(2112) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@10d307f1  
[DEBUG] 2015-12-01 15:16:04,040(2128) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@10d307f1  
[DEBUG] 2015-12-01 15:16:04,040(2128) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@63a12c68  
[DEBUG] 2015-12-01 15:16:04,040(2128) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@63a12c68  
[DEBUG] 2015-12-01 15:16:04,040(2128) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@63a12c68  
[DEBUG] 2015-12-01 15:16:04,040(2128) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@fba92d3  
[DEBUG] 2015-12-01 15:16:04,040(2128) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@fba92d3  
[DEBUG] 2015-12-01 15:16:04,040(2128) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@fba92d3  
[DEBUG] 2015-12-01 15:16:04,040(2128) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@156b88f5  
[DEBUG] 2015-12-01 15:16:04,040(2128) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@156b88f5  
[DEBUG] 2015-12-01 15:16:04,040(2128) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@156b88f5  
[DEBUG] 2015-12-01 15:16:04,040(2128) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@7133da86  
[DEBUG] 2015-12-01 15:16:04,040(2128) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@7133da86  
[DEBUG] 2015-12-01 15:16:04,040(2128) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7133da86  
[DEBUG] 2015-12-01 15:16:04,040(2128) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2fb3536e  
[DEBUG] 2015-12-01 15:16:04,040(2128) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2fb3536e  
[DEBUG] 2015-12-01 15:16:04,040(2128) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3b6ddd1d  
[DEBUG] 2015-12-01 15:16:04,040(2128) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3b6ddd1d  
[DEBUG] 2015-12-01 15:16:04,040(2128) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration string -> org.hibernate.type.StringType@1a18644  
[DEBUG] 2015-12-01 15:16:04,055(2143) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@1a18644  
[DEBUG] 2015-12-01 15:16:04,055(2143) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1e04fa0a  
[DEBUG] 2015-12-01 15:16:04,055(2143) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@f5acb9d  
[DEBUG] 2015-12-01 15:16:04,055(2143) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration url -> org.hibernate.type.UrlType@7bd4937b  
[DEBUG] 2015-12-01 15:16:04,055(2143) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@7bd4937b  
[DEBUG] 2015-12-01 15:16:04,055(2143) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration date -> org.hibernate.type.DateType@209da20d  
[DEBUG] 2015-12-01 15:16:04,055(2143) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@209da20d  
[DEBUG] 2015-12-01 15:16:04,055(2143) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration time -> org.hibernate.type.TimeType@5d0a1059  
[DEBUG] 2015-12-01 15:16:04,055(2143) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5d0a1059  
[DEBUG] 2015-12-01 15:16:04,055(2143) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@37d4349f  
[DEBUG] 2015-12-01 15:16:04,055(2143) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@37d4349f  
[DEBUG] 2015-12-01 15:16:04,055(2143) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@37d4349f  
[DEBUG] 2015-12-01 15:16:04,055(2143) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3a44431a  
[DEBUG] 2015-12-01 15:16:04,055(2143) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@ffaa6af  
[DEBUG] 2015-12-01 15:16:04,055(2143) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@ffaa6af  
[DEBUG] 2015-12-01 15:16:04,055(2143) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@ffaa6af  
[DEBUG] 2015-12-01 15:16:04,055(2143) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@729d991e  
[DEBUG] 2015-12-01 15:16:04,055(2143) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@66f57048  
[DEBUG] 2015-12-01 15:16:04,055(2143) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@66f57048  
[DEBUG] 2015-12-01 15:16:04,071(2159) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@1e1a0406  
[DEBUG] 2015-12-01 15:16:04,071(2159) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1e1a0406  
[DEBUG] 2015-12-01 15:16:04,071(2159) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@71a8adcf  
[DEBUG] 2015-12-01 15:16:04,071(2159) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@71a8adcf  
[DEBUG] 2015-12-01 15:16:04,071(2159) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration class -> org.hibernate.type.ClassType@61001b64  
[DEBUG] 2015-12-01 15:16:04,071(2159) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@61001b64  
[DEBUG] 2015-12-01 15:16:04,071(2159) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@55634720  
[DEBUG] 2015-12-01 15:16:04,071(2159) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@55634720  
[DEBUG] 2015-12-01 15:16:04,071(2159) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2d710f1a  
[DEBUG] 2015-12-01 15:16:04,071(2159) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@13fd2ccd  
[DEBUG] 2015-12-01 15:16:04,071(2159) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@53aac487  
[DEBUG] 2015-12-01 15:16:04,071(2159) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@53aac487  
[DEBUG] 2015-12-01 15:16:04,071(2159) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@53aac487  
[DEBUG] 2015-12-01 15:16:04,071(2159) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2d52216b  
[DEBUG] 2015-12-01 15:16:04,071(2159) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2d52216b  
[DEBUG] 2015-12-01 15:16:04,071(2159) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2d52216b  
[DEBUG] 2015-12-01 15:16:04,071(2159) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration image -> org.hibernate.type.ImageType@4f80542f  
[DEBUG] 2015-12-01 15:16:04,086(2174) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@5d534f5d  
[DEBUG] 2015-12-01 15:16:04,086(2174) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@5d534f5d  
[DEBUG] 2015-12-01 15:16:04,086(2174) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@5d534f5d  
[DEBUG] 2015-12-01 15:16:04,086(2174) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6221a451  
[DEBUG] 2015-12-01 15:16:04,086(2174) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6221a451  
[DEBUG] 2015-12-01 15:16:04,086(2174) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6221a451  
[DEBUG] 2015-12-01 15:16:04,086(2174) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration text -> org.hibernate.type.TextType@5677323c  
[DEBUG] 2015-12-01 15:16:04,086(2174) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ntext -> org.hibernate.type.NTextType@1e0b4072  
[DEBUG] 2015-12-01 15:16:04,086(2174) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@2892d68  
[DEBUG] 2015-12-01 15:16:04,086(2174) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2892d68  
[DEBUG] 2015-12-01 15:16:04,086(2174) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2e385cce  
[DEBUG] 2015-12-01 15:16:04,102(2190) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@7d0b7e3c  
[DEBUG] 2015-12-01 15:16:04,102(2190) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7d0b7e3c  
[DEBUG] 2015-12-01 15:16:04,102(2190) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nclob -> org.hibernate.type.NClobType@117159c0  
[DEBUG] 2015-12-01 15:16:04,102(2190) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@117159c0  
[DEBUG] 2015-12-01 15:16:04,102(2190) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@235ecd9f  
[DEBUG] 2015-12-01 15:16:04,102(2190) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@75d3a5e0  
[DEBUG] 2015-12-01 15:16:04,102(2190) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@19e4653c  
[DEBUG] 2015-12-01 15:16:04,102(2190) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@742ff096  
[DEBUG] 2015-12-01 15:16:04,102(2190) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@742ff096  
[DEBUG] 2015-12-01 15:16:04,102(2190) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4a9419d7  
[DEBUG] 2015-12-01 15:16:04,102(2190) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2e8ab815  
[DEBUG] 2015-12-01 15:16:04,102(2190) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@d1f74b8  
[DEBUG] 2015-12-01 15:16:04,102(2190) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3a0807b7  
[DEBUG] 2015-12-01 15:16:04,102(2190) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5769e7ae  
[DEBUG] 2015-12-01 15:16:04,102(2190) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@26b894bd  
[DEBUG] 2015-12-01 15:16:04,102(2190) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@30b34287  
[DEBUG] 2015-12-01 15:16:04,102(2190) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3676ac27  
[DEBUG] 2015-12-01 15:16:04,102(2190) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-12-01 15:16:04,102(2190) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-12-01 15:16:04,102(2190) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:16:04,102(2190) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:16:04,102(2190) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-12-01 15:16:04,102(2190) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]  
[DEBUG] 2015-12-01 15:16:04,102(2190) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-12-01 15:16:04,118(2206) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-12-01 15:16:04,118(2206) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-12-01 15:16:04,118(2206) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-12-01 15:16:04,118(2206) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-12-01 15:16:04,118(2206) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-12-01 15:16:04,118(2206) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-12-01 15:16:04,118(2206) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-12-01 15:16:04,118(2206) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]  
[DEBUG] 2015-12-01 15:16:04,149(2237) org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) –> [main] Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].  
[DEBUG] 2015-12-01 15:16:04,165(2253) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1781) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-12-01 15:16:04,211(2299) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:121) –> [main] Database ->
       name : MySQL
    version : 5.6.22
      major : 5
      minor : 6  
[DEBUG] 2015-12-01 15:16:04,211(2299) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:127) –> [main] Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[DEBUG] 2015-12-01 15:16:04,211(2299) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:133) –> [main] JDBC version : 4.0  
[INFO ] 2015-12-01 15:16:04,211(2299) org.hibernate.dialect.Dialect.<init>(Dialect.java:130) –> [main] HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-12-01 15:16:04,211(2299) org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:120) –> [main] HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException  
[DEBUG] 2015-12-01 15:16:04,211(2299) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:16:04,227(2315) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:16:04,228(2316) org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:534) –> [main] Binding entity from annotated class: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:16:04,228(2316) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}  
[DEBUG] 2015-12-01 15:16:04,229(2317) org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1118) –> [main] No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED  
[DEBUG] 2015-12-01 15:16:04,229(2317) org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:394) –> [main] Import with entity name TestEntity  
[DEBUG] 2015-12-01 15:16:04,230(2318) org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:564) –> [main] Bind entity com.it_sucre.entity.TestEntity on table test  
[DEBUG] 2015-12-01 15:16:04,231(2319) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=id, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:16:04,232(2320) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property id with lazy=false  
[DEBUG] 2015-12-01 15:16:04,233(2321) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for id  
[DEBUG] 2015-12-01 15:16:04,233(2321) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property id  
[DEBUG] 2015-12-01 15:16:04,234(2322) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=name, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:16:04,235(2323) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property name with lazy=false  
[DEBUG] 2015-12-01 15:16:04,235(2323) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for name  
[DEBUG] 2015-12-01 15:16:04,238(2326) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property name  
[DEBUG] 2015-12-01 15:16:04,238(2326) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for id  
[DEBUG] 2015-12-01 15:16:04,239(2327) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for name  
[DEBUG] 2015-12-01 15:16:04,239(2327) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:16:04,240(2328) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:16:04,240(2328) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:16:04,243(2331) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:16:04,243(2331) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:16:04,244(2332) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:16:04,245(2333) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:16:04,245(2333) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[DEBUG] 2015-12-01 15:16:04,247(2335) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:117) –> [main] Automatic flush during beforeCompletion(): disabled  
[DEBUG] 2015-12-01 15:16:04,248(2336) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:123) –> [main] Automatic session close at end of transaction: disabled  
[DEBUG] 2015-12-01 15:16:04,248(2336) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:134) –> [main] JDBC batch size: 15  
[DEBUG] 2015-12-01 15:16:04,249(2337) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:140) –> [main] JDBC batch updates for versioned data: disabled  
[DEBUG] 2015-12-01 15:16:04,250(2338) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:150) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-12-01 15:16:04,251(2339) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:156) –> [main] Wrap result sets: disabled  
[DEBUG] 2015-12-01 15:16:04,253(2341) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:162) –> [main] JDBC3 getGeneratedKeys(): enabled  
[DEBUG] 2015-12-01 15:16:04,253(2341) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:174) –> [main] multi-tenancy strategy : NONE  
[DEBUG] 2015-12-01 15:16:04,254(2342) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:180) –> [main] Connection release mode: auto  
[INFO ] 2015-12-01 15:16:04,256(2344) org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:68) –> [main] HHH000399: Using default transaction strategy (direct JDBC transactions)  
[DEBUG] 2015-12-01 15:16:04,261(2349) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Using BatchFetchStyle : LEGACY  
[DEBUG] 2015-12-01 15:16:04,264(2352) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:221) –> [main] Maximum outer join fetch depth: 2  
[DEBUG] 2015-12-01 15:16:04,266(2354) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:227) –> [main] Default batch fetch size: 1  
[DEBUG] 2015-12-01 15:16:04,266(2354) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:233) –> [main] Generate SQL with comments: disabled  
[DEBUG] 2015-12-01 15:16:04,267(2355) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:239) –> [main] Order SQL updates by primary key: disabled  
[DEBUG] 2015-12-01 15:16:04,267(2355) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Order SQL inserts for batching: disabled  
[DEBUG] 2015-12-01 15:16:04,268(2356) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Default null ordering: none  
[DEBUG] 2015-12-01 15:16:04,269(2357) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:584) –> [main] Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-12-01 15:16:04,270(2358) org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) –> [main] HHH000397: Using ASTQueryTranslatorFactory  
[DEBUG] 2015-12-01 15:16:04,271(2359) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:263) –> [main] Query language substitutions: {}  
[DEBUG] 2015-12-01 15:16:04,272(2360) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:269) –> [main] JPA-QL strict compliance: disabled  
[DEBUG] 2015-12-01 15:16:04,273(2361) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:277) –> [main] Second-level cache: enabled  
[DEBUG] 2015-12-01 15:16:04,273(2361) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:283) –> [main] Query cache: disabled  
[DEBUG] 2015-12-01 15:16:04,274(2362) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:524) –> [main] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory  
[DEBUG] 2015-12-01 15:16:04,275(2363) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:534) –> [main] org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.  
[DEBUG] 2015-12-01 15:16:04,275(2363) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:306) –> [main] Optimize cache for minimal puts: disabled  
[DEBUG] 2015-12-01 15:16:04,276(2364) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:321) –> [main] Structured second-level cache entries: disabled  
[DEBUG] 2015-12-01 15:16:04,277(2365) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:331) –> [main] Second-level cache direct-reference entries: disabled  
[DEBUG] 2015-12-01 15:16:04,278(2366) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:339) –> [main] Statistics: disabled  
[DEBUG] 2015-12-01 15:16:04,279(2367) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:345) –> [main] Deleted entity synthetic identifier rollback: disabled  
[DEBUG] 2015-12-01 15:16:04,279(2367) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:372) –> [main] Default entity-mode: pojo  
[DEBUG] 2015-12-01 15:16:04,280(2368) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:378) –> [main] Named query checking : enabled  
[DEBUG] 2015-12-01 15:16:04,281(2369) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:384) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): enabled  
[DEBUG] 2015-12-01 15:16:04,282(2370) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:402) –> [main] Allow initialization of lazy state outside session : : disabled  
[DEBUG] 2015-12-01 15:16:04,282(2370) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:412) –> [main] JTA Track by Thread: enabled  
[DEBUG] 2015-12-01 15:16:04,283(2371) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Building session factory  
[DEBUG] 2015-12-01 15:16:04,286(2374) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:280) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-12-01 15:16:04,289(2377) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:281) –> [main] Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=D:\Java\jdk1.8.0_40\jre\bin, java.vm.version=25.40-b25, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\Java\workspace\demo-chained-transactionmanager, java.runtime.version=1.8.0_40-b26, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=thread, java.endorsed.dirs=D:\Java\jdk1.8.0_40\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\奇点之~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8.1, sun.jnu.encoding=GBK, java.library.path=D:\Java\jdk1.8.0_40\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/jdk1.8.0_40/bin/../jre/bin/server;D:/Java/jdk1.8.0_40/bin/../jre/bin;D:/Java/jdk1.8.0_40/bin/../jre/lib/amd64;D:\Java\jdk1.8.0_40/bin;D:\Java\jdk1.8.0_40/lib/dt.jar;D:\Java\jdk1.8.0_40/lib/tools.jar;D:\__ENV__\apache-maven-3.2.1/bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__ENV__\apache-tomcat-7.0.57\bin;D:\__ENV__\apache-tomcat-7.0.57\jre;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\TortoiseSVN\bin;D:\__ENV__\eclipse;;., hibernate.connection.datasource=org.apache.commons.dbcp.BasicDataSource@51a06cbe, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=6.3, user.home=C:\Users\奇点之光08老师, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=奇点之光08老师, java.class.path=D:\Java\workspace\demo-chained-transactionmanager\target\test-classes;D:\Java\workspace\demo-chained-transactionmanager\target\classes;D:\__ENV__\repo\ch\qos\logback\logback-core\0.9.28\logback-core-0.9.28.jar;D:\__ENV__\repo\ch\qos\logback\logback-classic\0.9.28\logback-classic-0.9.28.jar;D:\__ENV__\repo\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;D:\__ENV__\repo\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;D:\__ENV__\repo\org\slf4j\slf4j-api\1.7.7\slf4j-api-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-jdk14\1.7.7\slf4j-jdk14-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-log4j12\1.7.7\slf4j-log4j12-1.7.7.jar;D:\__ENV__\repo\mysql\mysql-connector-java\5.1.26\mysql-connector-java-5.1.26.jar;D:\__ENV__\repo\log4j\log4j\1.2.14\log4j-1.2.14.jar;D:\__ENV__\repo\org\springframework\data\spring-data-commons\1.8.0.RELEASE\spring-data-commons-1.8.0.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\slf4j\jcl-over-slf4j\1.7.7\jcl-over-slf4j-1.7.7.jar;D:\__ENV__\repo\org\springframework\spring-context\3.2.4.RELEASE\spring-context-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-aop\3.2.4.RELEASE\spring-aop-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-expression\3.2.4.RELEASE\spring-expression-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-oxm\3.2.4.RELEASE\spring-oxm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\__ENV__\repo\org\springframework\spring-web\3.2.4.RELEASE\spring-web-3.2.4.RELEASE.jar;D:\__ENV__\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\__ENV__\repo\org\springframework\spring-webmvc\3.2.4.RELEASE\spring-webmvc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-orm\3.2.4.RELEASE\spring-orm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-jdbc\3.2.4.RELEASE\spring-jdbc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-tx\3.2.4.RELEASE\spring-tx-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-test\3.2.4.RELEASE\spring-test-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\__ENV__\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\__ENV__\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\__ENV__\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\__ENV__\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-validator\4.2.0.Final\hibernate-validator-4.2.0.Final.jar;D:\__ENV__\repo\javax\validation\validation-api\1.0.0.GA\validation-api-1.0.0.GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-core\4.2.10.Final\hibernate-core-4.2.10.Final.jar;D:\__ENV__\repo\antlr\antlr\2.7.7\antlr-2.7.7.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.1.Final\jboss-transaction-api_1.1_spec-1.0.1.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpcore\4.3.1\httpcore-4.3.1.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpclient\4.3.1\httpclient-4.3.1.jar;D:\__ENV__\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\__ENV__\repo\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpmime\4.3.1\httpmime-4.3.1.jar;D:\__ENV__\repo\redis\clients\jedis\2.7.2\jedis-2.7.2.jar;D:\__ENV__\repo\org\apache\commons\commons-pool2\2.3\commons-pool2-2.3.jar;D:\__ENV__\repo\javax\persistence\persistence-api\1.0.2\persistence-api-1.0.2.jar;D:\__ENV__\repo\org\ansj\ansj_seg\0.9\ansj_seg-0.9.jar;D:\__ENV__\repo\org\ansj\tree_split\1.0.1\tree_split-1.0.1.jar;D:\__ENV__\repo\org\apache\commons-lang3\commons-lang3\3.1\commons-lang3-3.1.jar;D:\__ENV__\repo\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;D:\__ENV__\repo\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;D:\__ENV__\repo\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;D:\__ENV__\repo\commons-io\commons-io\2.4\commons-io-2.4.jar;D:\__ENV__\repo\commons-fileupload\commons-fileupload\1.2.2\commons-fileupload-1.2.2.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\__ENV__\repo\com\googlecode\xmemcached\xmemcached\1.4.1\xmemcached-1.4.1.jar;D:\__ENV__\repo\net\sf\json-lib\json-lib\2.4\json-lib-2.4-jdk15.jar;D:\__ENV__\repo\commons-beanutils\commons-beanutils\1.8.0\commons-beanutils-1.8.0.jar;D:\__ENV__\repo\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;D:\__ENV__\repo\net\sf\ezmorph\ezmorph\1.0.6\ezmorph-1.0.6.jar;D:\__ENV__\repo\org\mybatis\mybatis\3.1.1\mybatis-3.1.1.jar;D:\__ENV__\repo\org\mybatis\mybatis-spring\1.1.1\mybatis-spring-1.1.1.jar;D:\__ENV__\repo\junit\junit\4.11\junit-4.11.jar;D:\__ENV__\repo\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/358/1/.cp/;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/357/1/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.classLoader.application=sun.misc.Launcher$AppClassLoader@3b07d329, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=D:\Java\jdk1.8.0_40\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 60954 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -test com.it_sucre.service.HibernateServiceTest:test, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_40, java.ext.dirs=D:\Java\jdk1.8.0_40\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=D:\Java\jdk1.8.0_40\jre\lib\resources.jar;D:\Java\jdk1.8.0_40\jre\lib\rt.jar;D:\Java\jdk1.8.0_40\jre\lib\sunrsasign.jar;D:\Java\jdk1.8.0_40\jre\lib\jsse.jar;D:\Java\jdk1.8.0_40\jre\lib\jce.jar;D:\Java\jdk1.8.0_40\jre\lib\charsets.jar;D:\Java\jdk1.8.0_40\jre\lib\jfr.jar;D:\Java\jdk1.8.0_40\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}  
[DEBUG] 2015-12-01 15:16:04,310(2398) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[DEBUG] 2015-12-01 15:16:04,324(2412) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3604) –> [main] Static SQL for entity: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:16:04,325(2413) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3609) –> [main]  Version select: select id from test where id =?  
[DEBUG] 2015-12-01 15:16:04,326(2414) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3612) –> [main]  Snapshot select: select testentity_.id, testentity_.name as name2_0_ from test testentity_ where testentity_.id=?  
[DEBUG] 2015-12-01 15:16:04,328(2416) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3615) –> [main]  Insert 0: insert into test (name, id) values (?, ?)  
[DEBUG] 2015-12-01 15:16:04,330(2418) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3616) –> [main]  Update 0: update test set name=? where id=?  
[DEBUG] 2015-12-01 15:16:04,331(2419) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3617) –> [main]  Delete 0: delete from test where id=?  
[DEBUG] 2015-12-01 15:16:04,333(2421) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [NONE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:16:04,334(2422) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:16:04,337(2425) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:16:04,339(2427) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE_NOWAIT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:16:04,340(2428) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [FORCE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:16:04,341(2429) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? lock in share mode  
[DEBUG] 2015-12-01 15:16:04,343(2431) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_WRITE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:16:04,344(2432) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:16:04,345(2433) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:16:04,346(2434) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:16:04,346(2434) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:16:04,348(2436) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:16:04,349(2437) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:75) –> [main] Registering SessionFactory: e83e6a6b-9c28-4877-9f64-73eff295e6a8 (<unnamed>)  
[DEBUG] 2015-12-01 15:16:04,349(2437) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:82) –> [main] Not binding SessionFactory to JNDI, no JNDI name configured  
[DEBUG] 2015-12-01 15:16:04,350(2438) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:492) –> [main] Instantiated session factory  
[INFO ] 2015-12-01 15:16:04,350(2438) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:182) –> [main] HHH000228: Running hbm2ddl schema update  
[INFO ] 2015-12-01 15:16:04,351(2439) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:193) –> [main] HHH000102: Fetching database metadata  
[INFO ] 2015-12-01 15:16:04,351(2439) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:205) –> [main] HHH000396: Updating schema  
[DEBUG] 2015-12-01 15:16:04,352(2440) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:16:04,352(2440) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:16:04,353(2441) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:16:04,354(2442) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:16:04,354(2442) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:16:04,355(2443) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:16:04,355(2443) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:16:04,356(2444) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:16:04,356(2444) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:16:04,357(2445) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[INFO ] 2015-12-01 15:16:04,377(2465) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] HHH000261: Table found: Test.test  
[INFO ] 2015-12-01 15:16:04,378(2466) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:67) –> [main] HHH000037: Columns: [name, id]  
[INFO ] 2015-12-01 15:16:04,379(2467) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] HHH000108: Foreign keys: []  
[INFO ] 2015-12-01 15:16:04,379(2467) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:70) –> [main] HHH000126: Indexes: [primary]  
[DEBUG] 2015-12-01 15:16:04,380(2468) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-12-01 15:16:04,381(2469) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:242) –> [main] HHH000232: Schema update complete  
[DEBUG] 2015-12-01 15:16:04,382(2470) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1073) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-12-01 15:16:04,382(2470) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1096) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-12-01 15:16:04,383(2471) org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:110) –> [main] Statistics initialized [enabled=false]  
[DEBUG] 2015-12-01 15:16:04,908(2996) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:212) –> [main] Obtaining JDBC connection  
[DEBUG] 2015-12-01 15:16:04,908(2996) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:218) –> [main] Obtained JDBC connection  
[DEBUG] 2015-12-01 15:16:04,920(3008) org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) –> [main] begin  
[DEBUG] 2015-12-01 15:16:04,921(3009) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) –> [main] initial autocommit status: true  
[DEBUG] 2015-12-01 15:16:04,922(3010) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) –> [main] disabling autocommit  
[DEBUG] 2015-12-01 15:16:05,132(3220) org.hibernate.engine.transaction.spi.AbstractTransactionImpl.rollback(AbstractTransactionImpl.java:203) –> [main] rolling back  
[DEBUG] 2015-12-01 15:16:05,133(3221) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doRollback(JdbcTransaction.java:164) –> [main] rolled JDBC Connection  
[DEBUG] 2015-12-01 15:16:05,134(3222) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) –> [main] re-enabling autocommit  
[DEBUG] 2015-12-01 15:16:05,139(3227) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:232) –> [main] Releasing JDBC connection  
[DEBUG] 2015-12-01 15:16:05,141(3229) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:250) –> [main] Released JDBC connection  
[DEBUG] 2015-12-01 15:16:05,187(3275) org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1374) –> [Thread-2] HHH000031: Closing  
[DEBUG] 2015-12-01 15:16:05,193(3281) org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1374) –> [Thread-2] HHH000031: Closing  
[DEBUG] 2015-12-01 15:23:12,280(0) org.hibernate.cfg.Configuration.<clinit>(Configuration.java:184) –> [main] Logging Provider: org.jboss.logging.Log4jLoggerProvider  
[DEBUG] 2015-12-01 15:23:12,311(31) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@10163d6  
[DEBUG] 2015-12-01 15:23:12,327(47) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@10163d6  
[DEBUG] 2015-12-01 15:23:12,327(47) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@10163d6  
[DEBUG] 2015-12-01 15:23:12,327(47) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6c130c45  
[DEBUG] 2015-12-01 15:23:12,327(47) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@932bc4a  
[DEBUG] 2015-12-01 15:23:12,327(47) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@3514a4c0  
[DEBUG] 2015-12-01 15:23:12,343(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@33990a0c  
[DEBUG] 2015-12-01 15:23:12,343(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@33990a0c  
[DEBUG] 2015-12-01 15:23:12,343(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@33990a0c  
[DEBUG] 2015-12-01 15:23:12,343(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@10feca44  
[DEBUG] 2015-12-01 15:23:12,343(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@10feca44  
[DEBUG] 2015-12-01 15:23:12,343(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@10feca44  
[DEBUG] 2015-12-01 15:23:12,343(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@759d26fb  
[DEBUG] 2015-12-01 15:23:12,343(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@759d26fb  
[DEBUG] 2015-12-01 15:23:12,343(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@759d26fb  
[DEBUG] 2015-12-01 15:23:12,343(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@3e84448c  
[DEBUG] 2015-12-01 15:23:12,358(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@3e84448c  
[DEBUG] 2015-12-01 15:23:12,358(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3e84448c  
[DEBUG] 2015-12-01 15:23:12,358(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@581ac8a8  
[DEBUG] 2015-12-01 15:23:12,358(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@581ac8a8  
[DEBUG] 2015-12-01 15:23:12,358(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@581ac8a8  
[DEBUG] 2015-12-01 15:23:12,358(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@3d6f0054  
[DEBUG] 2015-12-01 15:23:12,358(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@3d6f0054  
[DEBUG] 2015-12-01 15:23:12,358(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3d6f0054  
[DEBUG] 2015-12-01 15:23:12,358(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@383bfa16  
[DEBUG] 2015-12-01 15:23:12,358(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@383bfa16  
[DEBUG] 2015-12-01 15:23:12,374(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@383bfa16  
[DEBUG] 2015-12-01 15:23:12,374(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6da21078  
[DEBUG] 2015-12-01 15:23:12,374(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6da21078  
[DEBUG] 2015-12-01 15:23:12,374(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@169e6180  
[DEBUG] 2015-12-01 15:23:12,374(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@169e6180  
[DEBUG] 2015-12-01 15:23:12,374(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration string -> org.hibernate.type.StringType@3f6b0be5  
[DEBUG] 2015-12-01 15:23:12,390(110) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@3f6b0be5  
[DEBUG] 2015-12-01 15:23:12,390(110) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5acf93bb  
[DEBUG] 2015-12-01 15:23:12,390(110) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1e04fa0a  
[DEBUG] 2015-12-01 15:23:12,390(110) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration url -> org.hibernate.type.UrlType@f5acb9d  
[DEBUG] 2015-12-01 15:23:12,390(110) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@f5acb9d  
[DEBUG] 2015-12-01 15:23:12,405(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration date -> org.hibernate.type.DateType@741a8937  
[DEBUG] 2015-12-01 15:23:12,405(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@741a8937  
[DEBUG] 2015-12-01 15:23:12,405(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration time -> org.hibernate.type.TimeType@6392827e  
[DEBUG] 2015-12-01 15:23:12,405(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6392827e  
[DEBUG] 2015-12-01 15:23:12,405(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@54bff557  
[DEBUG] 2015-12-01 15:23:12,405(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@54bff557  
[DEBUG] 2015-12-01 15:23:12,405(125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@54bff557  
[DEBUG] 2015-12-01 15:23:12,421(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@37d4349f  
[DEBUG] 2015-12-01 15:23:12,421(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@3a44431a  
[DEBUG] 2015-12-01 15:23:12,421(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3a44431a  
[DEBUG] 2015-12-01 15:23:12,421(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3a44431a  
[DEBUG] 2015-12-01 15:23:12,421(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@ffaa6af  
[DEBUG] 2015-12-01 15:23:12,421(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@729d991e  
[DEBUG] 2015-12-01 15:23:12,421(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@729d991e  
[DEBUG] 2015-12-01 15:23:12,421(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@550dbc7a  
[DEBUG] 2015-12-01 15:23:12,421(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@550dbc7a  
[DEBUG] 2015-12-01 15:23:12,436(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@3cebbb30  
[DEBUG] 2015-12-01 15:23:12,436(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3cebbb30  
[DEBUG] 2015-12-01 15:23:12,436(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration class -> org.hibernate.type.ClassType@27462a88  
[DEBUG] 2015-12-01 15:23:12,436(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@27462a88  
[DEBUG] 2015-12-01 15:23:12,436(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4b8ee4de  
[DEBUG] 2015-12-01 15:23:12,436(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4b8ee4de  
[DEBUG] 2015-12-01 15:23:12,436(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4659191b  
[DEBUG] 2015-12-01 15:23:12,436(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@2d710f1a  
[DEBUG] 2015-12-01 15:23:12,452(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@13fd2ccd  
[DEBUG] 2015-12-01 15:23:12,452(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@13fd2ccd  
[DEBUG] 2015-12-01 15:23:12,452(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@13fd2ccd  
[DEBUG] 2015-12-01 15:23:12,452(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@273e7444  
[DEBUG] 2015-12-01 15:23:12,452(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@273e7444  
[DEBUG] 2015-12-01 15:23:12,452(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@273e7444  
[DEBUG] 2015-12-01 15:23:12,452(172) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration image -> org.hibernate.type.ImageType@3f6f6701  
[DEBUG] 2015-12-01 15:23:12,468(188) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@4f80542f  
[DEBUG] 2015-12-01 15:23:12,468(188) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@4f80542f  
[DEBUG] 2015-12-01 15:23:12,468(188) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@4f80542f  
[DEBUG] 2015-12-01 15:23:12,468(188) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@70e9c95d  
[DEBUG] 2015-12-01 15:23:12,468(188) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@70e9c95d  
[DEBUG] 2015-12-01 15:23:12,468(188) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@70e9c95d  
[DEBUG] 2015-12-01 15:23:12,468(188) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration text -> org.hibernate.type.TextType@3012646b  
[DEBUG] 2015-12-01 15:23:12,483(203) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ntext -> org.hibernate.type.NTextType@5677323c  
[DEBUG] 2015-12-01 15:23:12,499(219) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@71ba6d4e  
[DEBUG] 2015-12-01 15:23:12,499(219) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@71ba6d4e  
[DEBUG] 2015-12-01 15:23:12,499(219) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@d86a6f  
[DEBUG] 2015-12-01 15:23:12,515(235) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@53fe15ff  
[DEBUG] 2015-12-01 15:23:12,515(235) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@53fe15ff  
[DEBUG] 2015-12-01 15:23:12,530(250) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nclob -> org.hibernate.type.NClobType@5d0bf09b  
[DEBUG] 2015-12-01 15:23:12,530(250) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5d0bf09b  
[DEBUG] 2015-12-01 15:23:12,530(250) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@54422e18  
[DEBUG] 2015-12-01 15:23:12,530(250) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3b0fe47a  
[DEBUG] 2015-12-01 15:23:12,530(250) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@75d3a5e0  
[DEBUG] 2015-12-01 15:23:12,546(266) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@4b013c76  
[DEBUG] 2015-12-01 15:23:12,546(266) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4b013c76  
[DEBUG] 2015-12-01 15:23:12,546(266) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7bba5817  
[DEBUG] 2015-12-01 15:23:12,546(266) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@75437611  
[DEBUG] 2015-12-01 15:23:12,546(266) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1c5920df  
[DEBUG] 2015-12-01 15:23:12,546(266) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@79e4c792  
[DEBUG] 2015-12-01 15:23:12,546(266) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4c60d6e9  
[DEBUG] 2015-12-01 15:23:12,546(266) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4a83a74a  
[DEBUG] 2015-12-01 15:23:12,546(266) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4b29d1d2  
[DEBUG] 2015-12-01 15:23:12,546(266) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@28261e8e  
[INFO ] 2015-12-01 15:23:12,577(297) org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66) –> [main] HCANN000001: Hibernate Commons Annotations {4.0.4.Final}  
[INFO ] 2015-12-01 15:23:12,593(313) org.hibernate.Version.logVersion(Version.java:41) –> [main] HHH000412: Hibernate Core {4.2.10.Final}  
[INFO ] 2015-12-01 15:23:12,593(313) org.hibernate.cfg.Environment.<clinit>(Environment.java:238) –> [main] HHH000206: hibernate.properties not found  
[INFO ] 2015-12-01 15:23:12,593(313) org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:345) –> [main] HHH000021: Bytecode provider name : javassist  
[DEBUG] 2015-12-01 15:23:12,608(328) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-12-01 15:23:12,624(344) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-12-01 15:23:12,624(344) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:23:12,624(344) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:23:12,624(344) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-12-01 15:23:12,624(344) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]  
[DEBUG] 2015-12-01 15:23:12,624(344) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-12-01 15:23:12,624(344) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-12-01 15:23:12,624(344) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-12-01 15:23:12,640(360) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-12-01 15:23:12,640(360) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-12-01 15:23:12,640(360) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-12-01 15:23:12,640(360) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-12-01 15:23:12,640(360) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-12-01 15:23:12,640(360) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]  
[DEBUG] 2015-12-01 15:23:12,686(406) org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) –> [main] Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].  
[DEBUG] 2015-12-01 15:23:12,718(438) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1781) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-12-01 15:23:13,124(844) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:121) –> [main] Database ->
       name : MySQL
    version : 5.6.22
      major : 5
      minor : 6  
[DEBUG] 2015-12-01 15:23:13,128(848) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:127) –> [main] Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[DEBUG] 2015-12-01 15:23:13,128(848) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:133) –> [main] JDBC version : 4.0  
[INFO ] 2015-12-01 15:23:13,160(880) org.hibernate.dialect.Dialect.<init>(Dialect.java:130) –> [main] HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-12-01 15:23:13,176(896) org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:120) –> [main] HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException  
[DEBUG] 2015-12-01 15:23:13,223(943) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:23:13,223(943) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:23:13,223(943) org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:534) –> [main] Binding entity from annotated class: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:23:13,317(1037) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}  
[DEBUG] 2015-12-01 15:23:13,317(1037) org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1118) –> [main] No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED  
[DEBUG] 2015-12-01 15:23:13,348(1068) org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:394) –> [main] Import with entity name TestEntity  
[DEBUG] 2015-12-01 15:23:13,364(1084) org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:564) –> [main] Bind entity com.it_sucre.entity.TestEntity on table test  
[DEBUG] 2015-12-01 15:23:13,426(1146) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=id, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:23:13,426(1146) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property id with lazy=false  
[DEBUG] 2015-12-01 15:23:13,442(1162) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for id  
[DEBUG] 2015-12-01 15:23:13,442(1162) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property id  
[DEBUG] 2015-12-01 15:23:13,442(1162) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=name, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:23:13,442(1162) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property name with lazy=false  
[DEBUG] 2015-12-01 15:23:13,442(1162) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for name  
[DEBUG] 2015-12-01 15:23:13,442(1162) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property name  
[DEBUG] 2015-12-01 15:23:13,457(1177) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for id  
[DEBUG] 2015-12-01 15:23:13,457(1177) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for name  
[DEBUG] 2015-12-01 15:23:13,457(1177) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:23:13,457(1177) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:23:13,457(1177) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:23:13,457(1177) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:23:13,457(1177) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:23:13,457(1177) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:23:13,457(1177) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:23:13,457(1177) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[DEBUG] 2015-12-01 15:23:13,473(1193) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:117) –> [main] Automatic flush during beforeCompletion(): disabled  
[DEBUG] 2015-12-01 15:23:13,473(1193) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:123) –> [main] Automatic session close at end of transaction: disabled  
[DEBUG] 2015-12-01 15:23:13,473(1193) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:134) –> [main] JDBC batch size: 15  
[DEBUG] 2015-12-01 15:23:13,473(1193) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:140) –> [main] JDBC batch updates for versioned data: disabled  
[DEBUG] 2015-12-01 15:23:13,473(1193) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:150) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-12-01 15:23:13,473(1193) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:156) –> [main] Wrap result sets: disabled  
[DEBUG] 2015-12-01 15:23:13,489(1209) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:162) –> [main] JDBC3 getGeneratedKeys(): enabled  
[DEBUG] 2015-12-01 15:23:13,489(1209) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:174) –> [main] multi-tenancy strategy : NONE  
[DEBUG] 2015-12-01 15:23:13,489(1209) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:180) –> [main] Connection release mode: auto  
[INFO ] 2015-12-01 15:23:13,489(1209) org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:68) –> [main] HHH000399: Using default transaction strategy (direct JDBC transactions)  
[DEBUG] 2015-12-01 15:23:13,489(1209) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Using BatchFetchStyle : LEGACY  
[DEBUG] 2015-12-01 15:23:13,489(1209) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:221) –> [main] Maximum outer join fetch depth: 2  
[DEBUG] 2015-12-01 15:23:13,489(1209) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:227) –> [main] Default batch fetch size: 1  
[DEBUG] 2015-12-01 15:23:13,489(1209) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:233) –> [main] Generate SQL with comments: disabled  
[DEBUG] 2015-12-01 15:23:13,489(1209) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:239) –> [main] Order SQL updates by primary key: disabled  
[DEBUG] 2015-12-01 15:23:13,489(1209) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Order SQL inserts for batching: disabled  
[DEBUG] 2015-12-01 15:23:13,489(1209) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Default null ordering: none  
[DEBUG] 2015-12-01 15:23:13,489(1209) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:584) –> [main] Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-12-01 15:23:13,520(1240) org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) –> [main] HHH000397: Using ASTQueryTranslatorFactory  
[DEBUG] 2015-12-01 15:23:13,520(1240) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:263) –> [main] Query language substitutions: {}  
[DEBUG] 2015-12-01 15:23:13,520(1240) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:269) –> [main] JPA-QL strict compliance: disabled  
[DEBUG] 2015-12-01 15:23:13,520(1240) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:277) –> [main] Second-level cache: enabled  
[DEBUG] 2015-12-01 15:23:13,520(1240) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:283) –> [main] Query cache: disabled  
[DEBUG] 2015-12-01 15:23:13,520(1240) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:524) –> [main] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory  
[DEBUG] 2015-12-01 15:23:13,520(1240) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:534) –> [main] org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.  
[DEBUG] 2015-12-01 15:23:13,520(1240) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:306) –> [main] Optimize cache for minimal puts: disabled  
[DEBUG] 2015-12-01 15:23:13,536(1256) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:321) –> [main] Structured second-level cache entries: disabled  
[DEBUG] 2015-12-01 15:23:13,536(1256) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:331) –> [main] Second-level cache direct-reference entries: disabled  
[DEBUG] 2015-12-01 15:23:13,536(1256) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:339) –> [main] Statistics: disabled  
[DEBUG] 2015-12-01 15:23:13,536(1256) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:345) –> [main] Deleted entity synthetic identifier rollback: disabled  
[DEBUG] 2015-12-01 15:23:13,536(1256) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:372) –> [main] Default entity-mode: pojo  
[DEBUG] 2015-12-01 15:23:13,536(1256) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:378) –> [main] Named query checking : enabled  
[DEBUG] 2015-12-01 15:23:13,536(1256) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:384) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): enabled  
[DEBUG] 2015-12-01 15:23:13,536(1256) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:402) –> [main] Allow initialization of lazy state outside session : : disabled  
[DEBUG] 2015-12-01 15:23:13,536(1256) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:412) –> [main] JTA Track by Thread: enabled  
[DEBUG] 2015-12-01 15:23:13,551(1271) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Building session factory  
[DEBUG] 2015-12-01 15:23:13,567(1287) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:280) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-12-01 15:23:13,567(1287) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:281) –> [main] Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=D:\Java\jdk1.8.0_40\jre\bin, java.vm.version=25.40-b25, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\Java\workspace\demo-chained-transactionmanager, java.runtime.version=1.8.0_40-b26, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=thread, java.endorsed.dirs=D:\Java\jdk1.8.0_40\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\奇点之~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8.1, sun.jnu.encoding=GBK, java.library.path=D:\Java\jdk1.8.0_40\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/jdk1.8.0_40/bin/../jre/bin/server;D:/Java/jdk1.8.0_40/bin/../jre/bin;D:/Java/jdk1.8.0_40/bin/../jre/lib/amd64;D:\Java\jdk1.8.0_40/bin;D:\Java\jdk1.8.0_40/lib/dt.jar;D:\Java\jdk1.8.0_40/lib/tools.jar;D:\__ENV__\apache-maven-3.2.1/bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__ENV__\apache-tomcat-7.0.57\bin;D:\__ENV__\apache-tomcat-7.0.57\jre;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\TortoiseSVN\bin;D:\__ENV__\eclipse;;., hibernate.connection.datasource=org.apache.commons.dbcp.BasicDataSource@6b53bcc2, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=6.3, user.home=C:\Users\奇点之光08老师, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=奇点之光08老师, java.class.path=D:\Java\workspace\demo-chained-transactionmanager\target\test-classes;D:\Java\workspace\demo-chained-transactionmanager\target\classes;D:\__ENV__\repo\ch\qos\logback\logback-core\0.9.28\logback-core-0.9.28.jar;D:\__ENV__\repo\ch\qos\logback\logback-classic\0.9.28\logback-classic-0.9.28.jar;D:\__ENV__\repo\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;D:\__ENV__\repo\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;D:\__ENV__\repo\org\slf4j\slf4j-api\1.7.7\slf4j-api-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-jdk14\1.7.7\slf4j-jdk14-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-log4j12\1.7.7\slf4j-log4j12-1.7.7.jar;D:\__ENV__\repo\mysql\mysql-connector-java\5.1.26\mysql-connector-java-5.1.26.jar;D:\__ENV__\repo\log4j\log4j\1.2.14\log4j-1.2.14.jar;D:\__ENV__\repo\org\springframework\data\spring-data-commons\1.8.0.RELEASE\spring-data-commons-1.8.0.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\slf4j\jcl-over-slf4j\1.7.7\jcl-over-slf4j-1.7.7.jar;D:\__ENV__\repo\org\springframework\spring-context\3.2.4.RELEASE\spring-context-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-aop\3.2.4.RELEASE\spring-aop-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-expression\3.2.4.RELEASE\spring-expression-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-oxm\3.2.4.RELEASE\spring-oxm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\__ENV__\repo\org\springframework\spring-web\3.2.4.RELEASE\spring-web-3.2.4.RELEASE.jar;D:\__ENV__\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\__ENV__\repo\org\springframework\spring-webmvc\3.2.4.RELEASE\spring-webmvc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-orm\3.2.4.RELEASE\spring-orm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-jdbc\3.2.4.RELEASE\spring-jdbc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-tx\3.2.4.RELEASE\spring-tx-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-test\3.2.4.RELEASE\spring-test-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\__ENV__\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\__ENV__\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\__ENV__\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\__ENV__\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-validator\4.2.0.Final\hibernate-validator-4.2.0.Final.jar;D:\__ENV__\repo\javax\validation\validation-api\1.0.0.GA\validation-api-1.0.0.GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-core\4.2.10.Final\hibernate-core-4.2.10.Final.jar;D:\__ENV__\repo\antlr\antlr\2.7.7\antlr-2.7.7.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.1.Final\jboss-transaction-api_1.1_spec-1.0.1.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpcore\4.3.1\httpcore-4.3.1.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpclient\4.3.1\httpclient-4.3.1.jar;D:\__ENV__\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\__ENV__\repo\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpmime\4.3.1\httpmime-4.3.1.jar;D:\__ENV__\repo\redis\clients\jedis\2.7.2\jedis-2.7.2.jar;D:\__ENV__\repo\org\apache\commons\commons-pool2\2.3\commons-pool2-2.3.jar;D:\__ENV__\repo\javax\persistence\persistence-api\1.0.2\persistence-api-1.0.2.jar;D:\__ENV__\repo\org\ansj\ansj_seg\0.9\ansj_seg-0.9.jar;D:\__ENV__\repo\org\ansj\tree_split\1.0.1\tree_split-1.0.1.jar;D:\__ENV__\repo\org\apache\commons-lang3\commons-lang3\3.1\commons-lang3-3.1.jar;D:\__ENV__\repo\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;D:\__ENV__\repo\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;D:\__ENV__\repo\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;D:\__ENV__\repo\commons-io\commons-io\2.4\commons-io-2.4.jar;D:\__ENV__\repo\commons-fileupload\commons-fileupload\1.2.2\commons-fileupload-1.2.2.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\__ENV__\repo\com\googlecode\xmemcached\xmemcached\1.4.1\xmemcached-1.4.1.jar;D:\__ENV__\repo\net\sf\json-lib\json-lib\2.4\json-lib-2.4-jdk15.jar;D:\__ENV__\repo\commons-beanutils\commons-beanutils\1.8.0\commons-beanutils-1.8.0.jar;D:\__ENV__\repo\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;D:\__ENV__\repo\net\sf\ezmorph\ezmorph\1.0.6\ezmorph-1.0.6.jar;D:\__ENV__\repo\org\mybatis\mybatis\3.1.1\mybatis-3.1.1.jar;D:\__ENV__\repo\org\mybatis\mybatis-spring\1.1.1\mybatis-spring-1.1.1.jar;D:\__ENV__\repo\junit\junit\4.11\junit-4.11.jar;D:\__ENV__\repo\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/358/1/.cp/;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/357/1/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.classLoader.application=sun.misc.Launcher$AppClassLoader@3b07d329, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=D:\Java\jdk1.8.0_40\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 61034 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -test com.it_sucre.service.HibernateServiceTest:test, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_40, java.ext.dirs=D:\Java\jdk1.8.0_40\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=D:\Java\jdk1.8.0_40\jre\lib\resources.jar;D:\Java\jdk1.8.0_40\jre\lib\rt.jar;D:\Java\jdk1.8.0_40\jre\lib\sunrsasign.jar;D:\Java\jdk1.8.0_40\jre\lib\jsse.jar;D:\Java\jdk1.8.0_40\jre\lib\jce.jar;D:\Java\jdk1.8.0_40\jre\lib\charsets.jar;D:\Java\jdk1.8.0_40\jre\lib\jfr.jar;D:\Java\jdk1.8.0_40\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}  
[DEBUG] 2015-12-01 15:23:13,801(1521) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[DEBUG] 2015-12-01 15:23:14,098(1818) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3604) –> [main] Static SQL for entity: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:23:14,098(1818) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3609) –> [main]  Version select: select id from test where id =?  
[DEBUG] 2015-12-01 15:23:14,098(1818) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3612) –> [main]  Snapshot select: select testentity_.id, testentity_.name as name2_0_ from test testentity_ where testentity_.id=?  
[DEBUG] 2015-12-01 15:23:14,098(1818) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3615) –> [main]  Insert 0: insert into test (name, id) values (?, ?)  
[DEBUG] 2015-12-01 15:23:14,098(1818) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3616) –> [main]  Update 0: update test set name=? where id=?  
[DEBUG] 2015-12-01 15:23:14,114(1834) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3617) –> [main]  Delete 0: delete from test where id=?  
[DEBUG] 2015-12-01 15:23:14,176(1896) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [NONE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:23:14,184(1904) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:23:14,184(1904) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:23:14,184(1904) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE_NOWAIT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:23:14,184(1904) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [FORCE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:23:14,184(1904) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? lock in share mode  
[DEBUG] 2015-12-01 15:23:14,184(1904) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_WRITE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:23:14,184(1904) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:23:14,184(1904) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:23:14,184(1904) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:23:14,199(1919) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:23:14,199(1919) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:23:14,293(2013) org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:62) –> [main] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5e77f0f4  
[DEBUG] 2015-12-01 15:23:14,293(2013) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:75) –> [main] Registering SessionFactory: 1412074e-5870-4a11-b264-1fc46ec51d5d (<unnamed>)  
[DEBUG] 2015-12-01 15:23:14,293(2013) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:82) –> [main] Not binding SessionFactory to JNDI, no JNDI name configured  
[DEBUG] 2015-12-01 15:23:14,293(2013) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:492) –> [main] Instantiated session factory  
[INFO ] 2015-12-01 15:23:14,309(2029) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:182) –> [main] HHH000228: Running hbm2ddl schema update  
[INFO ] 2015-12-01 15:23:14,309(2029) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:193) –> [main] HHH000102: Fetching database metadata  
[INFO ] 2015-12-01 15:23:14,324(2044) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:205) –> [main] HHH000396: Updating schema  
[DEBUG] 2015-12-01 15:23:14,324(2044) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:23:14,324(2044) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:23:14,324(2044) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:23:14,324(2044) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:23:14,324(2044) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:23:14,324(2044) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:23:14,324(2044) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:23:14,324(2044) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:23:14,324(2044) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:23:14,324(2044) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[INFO ] 2015-12-01 15:23:14,371(2091) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] HHH000261: Table found: Test.test  
[INFO ] 2015-12-01 15:23:14,371(2091) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:67) –> [main] HHH000037: Columns: [name, id]  
[INFO ] 2015-12-01 15:23:14,371(2091) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] HHH000108: Foreign keys: []  
[INFO ] 2015-12-01 15:23:14,371(2091) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:70) –> [main] HHH000126: Indexes: [primary]  
[DEBUG] 2015-12-01 15:23:14,371(2091) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-12-01 15:23:14,371(2091) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:242) –> [main] HHH000232: Schema update complete  
[DEBUG] 2015-12-01 15:23:14,371(2091) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1073) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-12-01 15:23:14,371(2091) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1096) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-12-01 15:23:14,387(2107) org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:110) –> [main] Statistics initialized [enabled=false]  
[DEBUG] 2015-12-01 15:23:14,465(2185) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@10163d6  
[DEBUG] 2015-12-01 15:23:14,465(2185) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@10163d6  
[DEBUG] 2015-12-01 15:23:14,465(2185) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@10163d6  
[DEBUG] 2015-12-01 15:23:14,465(2185) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6c130c45  
[DEBUG] 2015-12-01 15:23:14,481(2201) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@932bc4a  
[DEBUG] 2015-12-01 15:23:14,481(2201) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@3514a4c0  
[DEBUG] 2015-12-01 15:23:14,481(2201) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@33990a0c  
[DEBUG] 2015-12-01 15:23:14,481(2201) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@33990a0c  
[DEBUG] 2015-12-01 15:23:14,481(2201) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@33990a0c  
[DEBUG] 2015-12-01 15:23:14,481(2201) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@10feca44  
[DEBUG] 2015-12-01 15:23:14,496(2216) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@10feca44  
[DEBUG] 2015-12-01 15:23:14,496(2216) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@10feca44  
[DEBUG] 2015-12-01 15:23:14,496(2216) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@759d26fb  
[DEBUG] 2015-12-01 15:23:14,496(2216) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@759d26fb  
[DEBUG] 2015-12-01 15:23:14,496(2216) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@759d26fb  
[DEBUG] 2015-12-01 15:23:14,496(2216) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@3e84448c  
[DEBUG] 2015-12-01 15:23:14,496(2216) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@3e84448c  
[DEBUG] 2015-12-01 15:23:14,496(2216) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3e84448c  
[DEBUG] 2015-12-01 15:23:14,496(2216) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@581ac8a8  
[DEBUG] 2015-12-01 15:23:14,512(2232) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@581ac8a8  
[DEBUG] 2015-12-01 15:23:14,512(2232) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@581ac8a8  
[DEBUG] 2015-12-01 15:23:14,512(2232) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@3d6f0054  
[DEBUG] 2015-12-01 15:23:14,512(2232) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@3d6f0054  
[DEBUG] 2015-12-01 15:23:14,512(2232) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3d6f0054  
[DEBUG] 2015-12-01 15:23:14,512(2232) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@383bfa16  
[DEBUG] 2015-12-01 15:23:14,512(2232) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@383bfa16  
[DEBUG] 2015-12-01 15:23:14,512(2232) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@383bfa16  
[DEBUG] 2015-12-01 15:23:14,512(2232) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6da21078  
[DEBUG] 2015-12-01 15:23:14,512(2232) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6da21078  
[DEBUG] 2015-12-01 15:23:14,512(2232) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@169e6180  
[DEBUG] 2015-12-01 15:23:14,512(2232) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@169e6180  
[DEBUG] 2015-12-01 15:23:14,512(2232) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration string -> org.hibernate.type.StringType@3f6b0be5  
[DEBUG] 2015-12-01 15:23:14,512(2232) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@3f6b0be5  
[DEBUG] 2015-12-01 15:23:14,512(2232) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5acf93bb  
[DEBUG] 2015-12-01 15:23:14,512(2232) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1e04fa0a  
[DEBUG] 2015-12-01 15:23:14,527(2247) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration url -> org.hibernate.type.UrlType@f5acb9d  
[DEBUG] 2015-12-01 15:23:14,527(2247) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@f5acb9d  
[DEBUG] 2015-12-01 15:23:14,527(2247) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration date -> org.hibernate.type.DateType@741a8937  
[DEBUG] 2015-12-01 15:23:14,527(2247) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@741a8937  
[DEBUG] 2015-12-01 15:23:14,527(2247) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration time -> org.hibernate.type.TimeType@6392827e  
[DEBUG] 2015-12-01 15:23:14,527(2247) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6392827e  
[DEBUG] 2015-12-01 15:23:14,527(2247) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@54bff557  
[DEBUG] 2015-12-01 15:23:14,527(2247) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@54bff557  
[DEBUG] 2015-12-01 15:23:14,527(2247) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@54bff557  
[DEBUG] 2015-12-01 15:23:14,527(2247) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@37d4349f  
[DEBUG] 2015-12-01 15:23:14,527(2247) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@3a44431a  
[DEBUG] 2015-12-01 15:23:14,527(2247) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3a44431a  
[DEBUG] 2015-12-01 15:23:14,527(2247) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3a44431a  
[DEBUG] 2015-12-01 15:23:14,543(2263) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@ffaa6af  
[DEBUG] 2015-12-01 15:23:14,543(2263) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@729d991e  
[DEBUG] 2015-12-01 15:23:14,543(2263) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@729d991e  
[DEBUG] 2015-12-01 15:23:14,543(2263) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@550dbc7a  
[DEBUG] 2015-12-01 15:23:14,543(2263) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@550dbc7a  
[DEBUG] 2015-12-01 15:23:14,543(2263) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@3cebbb30  
[DEBUG] 2015-12-01 15:23:14,543(2263) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3cebbb30  
[DEBUG] 2015-12-01 15:23:14,543(2263) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration class -> org.hibernate.type.ClassType@27462a88  
[DEBUG] 2015-12-01 15:23:14,543(2263) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@27462a88  
[DEBUG] 2015-12-01 15:23:14,543(2263) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4b8ee4de  
[DEBUG] 2015-12-01 15:23:14,543(2263) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4b8ee4de  
[DEBUG] 2015-12-01 15:23:14,543(2263) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4659191b  
[DEBUG] 2015-12-01 15:23:14,543(2263) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@2d710f1a  
[DEBUG] 2015-12-01 15:23:14,543(2263) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@13fd2ccd  
[DEBUG] 2015-12-01 15:23:14,543(2263) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@13fd2ccd  
[DEBUG] 2015-12-01 15:23:14,543(2263) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@13fd2ccd  
[DEBUG] 2015-12-01 15:23:14,543(2263) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@273e7444  
[DEBUG] 2015-12-01 15:23:14,543(2263) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@273e7444  
[DEBUG] 2015-12-01 15:23:14,543(2263) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@273e7444  
[DEBUG] 2015-12-01 15:23:14,559(2279) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration image -> org.hibernate.type.ImageType@3f6f6701  
[DEBUG] 2015-12-01 15:23:14,574(2294) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@4f80542f  
[DEBUG] 2015-12-01 15:23:14,574(2294) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@4f80542f  
[DEBUG] 2015-12-01 15:23:14,574(2294) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@4f80542f  
[DEBUG] 2015-12-01 15:23:14,574(2294) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@70e9c95d  
[DEBUG] 2015-12-01 15:23:14,574(2294) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@70e9c95d  
[DEBUG] 2015-12-01 15:23:14,574(2294) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@70e9c95d  
[DEBUG] 2015-12-01 15:23:14,574(2294) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration text -> org.hibernate.type.TextType@3012646b  
[DEBUG] 2015-12-01 15:23:14,574(2294) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ntext -> org.hibernate.type.NTextType@5677323c  
[DEBUG] 2015-12-01 15:23:14,574(2294) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@71ba6d4e  
[DEBUG] 2015-12-01 15:23:14,574(2294) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@71ba6d4e  
[DEBUG] 2015-12-01 15:23:14,574(2294) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@d86a6f  
[DEBUG] 2015-12-01 15:23:14,574(2294) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@53fe15ff  
[DEBUG] 2015-12-01 15:23:14,574(2294) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@53fe15ff  
[DEBUG] 2015-12-01 15:23:14,574(2294) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nclob -> org.hibernate.type.NClobType@5d0bf09b  
[DEBUG] 2015-12-01 15:23:14,574(2294) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5d0bf09b  
[DEBUG] 2015-12-01 15:23:14,574(2294) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@54422e18  
[DEBUG] 2015-12-01 15:23:14,574(2294) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3b0fe47a  
[DEBUG] 2015-12-01 15:23:14,574(2294) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@75d3a5e0  
[DEBUG] 2015-12-01 15:23:14,574(2294) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@4b013c76  
[DEBUG] 2015-12-01 15:23:14,574(2294) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4b013c76  
[DEBUG] 2015-12-01 15:23:14,574(2294) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@54afd745  
[DEBUG] 2015-12-01 15:23:14,574(2294) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@fff25f1  
[DEBUG] 2015-12-01 15:23:14,590(2310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@263f04ca  
[DEBUG] 2015-12-01 15:23:14,590(2310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5a021cb9  
[DEBUG] 2015-12-01 15:23:14,590(2310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@f31c0c6  
[DEBUG] 2015-12-01 15:23:14,590(2310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4a9419d7  
[DEBUG] 2015-12-01 15:23:14,590(2310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2e8ab815  
[DEBUG] 2015-12-01 15:23:14,590(2310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@d1f74b8  
[DEBUG] 2015-12-01 15:23:14,590(2310) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-12-01 15:23:14,590(2310) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-12-01 15:23:14,590(2310) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:23:14,590(2310) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:23:14,590(2310) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-12-01 15:23:14,590(2310) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]  
[DEBUG] 2015-12-01 15:23:14,590(2310) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-12-01 15:23:14,590(2310) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-12-01 15:23:14,590(2310) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-12-01 15:23:14,590(2310) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-12-01 15:23:14,606(2326) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-12-01 15:23:14,606(2326) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-12-01 15:23:14,606(2326) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-12-01 15:23:14,606(2326) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-12-01 15:23:14,606(2326) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]  
[DEBUG] 2015-12-01 15:23:14,657(2377) org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) –> [main] Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].  
[DEBUG] 2015-12-01 15:23:14,661(2381) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1781) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-12-01 15:23:14,726(2446) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:121) –> [main] Database ->
       name : MySQL
    version : 5.6.22
      major : 5
      minor : 6  
[DEBUG] 2015-12-01 15:23:14,727(2447) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:127) –> [main] Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[DEBUG] 2015-12-01 15:23:14,728(2448) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:133) –> [main] JDBC version : 4.0  
[INFO ] 2015-12-01 15:23:14,735(2455) org.hibernate.dialect.Dialect.<init>(Dialect.java:130) –> [main] HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-12-01 15:23:14,748(2468) org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:120) –> [main] HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException  
[DEBUG] 2015-12-01 15:23:14,750(2470) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:23:14,751(2471) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:23:14,752(2472) org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:534) –> [main] Binding entity from annotated class: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:23:14,753(2473) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}  
[DEBUG] 2015-12-01 15:23:14,753(2473) org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1118) –> [main] No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED  
[DEBUG] 2015-12-01 15:23:14,754(2474) org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:394) –> [main] Import with entity name TestEntity  
[DEBUG] 2015-12-01 15:23:14,755(2475) org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:564) –> [main] Bind entity com.it_sucre.entity.TestEntity on table test  
[DEBUG] 2015-12-01 15:23:14,757(2477) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=id, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:23:14,758(2478) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property id with lazy=false  
[DEBUG] 2015-12-01 15:23:14,759(2479) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for id  
[DEBUG] 2015-12-01 15:23:14,760(2480) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property id  
[DEBUG] 2015-12-01 15:23:14,760(2480) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=name, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:23:14,761(2481) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property name with lazy=false  
[DEBUG] 2015-12-01 15:23:14,762(2482) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for name  
[DEBUG] 2015-12-01 15:23:14,763(2483) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property name  
[DEBUG] 2015-12-01 15:23:14,763(2483) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for id  
[DEBUG] 2015-12-01 15:23:14,764(2484) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for name  
[DEBUG] 2015-12-01 15:23:14,765(2485) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:23:14,765(2485) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:23:14,766(2486) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:23:14,767(2487) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:23:14,767(2487) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:23:14,768(2488) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:23:14,769(2489) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:23:14,769(2489) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[DEBUG] 2015-12-01 15:23:14,771(2491) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:117) –> [main] Automatic flush during beforeCompletion(): disabled  
[DEBUG] 2015-12-01 15:23:14,771(2491) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:123) –> [main] Automatic session close at end of transaction: disabled  
[DEBUG] 2015-12-01 15:23:14,772(2492) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:134) –> [main] JDBC batch size: 15  
[DEBUG] 2015-12-01 15:23:14,773(2493) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:140) –> [main] JDBC batch updates for versioned data: disabled  
[DEBUG] 2015-12-01 15:23:14,774(2494) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:150) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-12-01 15:23:14,774(2494) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:156) –> [main] Wrap result sets: disabled  
[DEBUG] 2015-12-01 15:23:14,775(2495) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:162) –> [main] JDBC3 getGeneratedKeys(): enabled  
[DEBUG] 2015-12-01 15:23:14,776(2496) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:174) –> [main] multi-tenancy strategy : NONE  
[DEBUG] 2015-12-01 15:23:14,777(2497) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:180) –> [main] Connection release mode: auto  
[INFO ] 2015-12-01 15:23:14,777(2497) org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:68) –> [main] HHH000399: Using default transaction strategy (direct JDBC transactions)  
[DEBUG] 2015-12-01 15:23:14,785(2505) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Using BatchFetchStyle : LEGACY  
[DEBUG] 2015-12-01 15:23:14,786(2506) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:221) –> [main] Maximum outer join fetch depth: 2  
[DEBUG] 2015-12-01 15:23:14,787(2507) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:227) –> [main] Default batch fetch size: 1  
[DEBUG] 2015-12-01 15:23:14,787(2507) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:233) –> [main] Generate SQL with comments: disabled  
[DEBUG] 2015-12-01 15:23:14,788(2508) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:239) –> [main] Order SQL updates by primary key: disabled  
[DEBUG] 2015-12-01 15:23:14,788(2508) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Order SQL inserts for batching: disabled  
[DEBUG] 2015-12-01 15:23:14,789(2509) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Default null ordering: none  
[DEBUG] 2015-12-01 15:23:14,790(2510) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:584) –> [main] Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-12-01 15:23:14,790(2510) org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) –> [main] HHH000397: Using ASTQueryTranslatorFactory  
[DEBUG] 2015-12-01 15:23:14,793(2513) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:263) –> [main] Query language substitutions: {}  
[DEBUG] 2015-12-01 15:23:14,797(2517) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:269) –> [main] JPA-QL strict compliance: disabled  
[DEBUG] 2015-12-01 15:23:14,798(2518) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:277) –> [main] Second-level cache: enabled  
[DEBUG] 2015-12-01 15:23:14,799(2519) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:283) –> [main] Query cache: disabled  
[DEBUG] 2015-12-01 15:23:14,800(2520) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:524) –> [main] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory  
[DEBUG] 2015-12-01 15:23:14,801(2521) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:534) –> [main] org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.  
[DEBUG] 2015-12-01 15:23:14,802(2522) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:306) –> [main] Optimize cache for minimal puts: disabled  
[DEBUG] 2015-12-01 15:23:14,803(2523) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:321) –> [main] Structured second-level cache entries: disabled  
[DEBUG] 2015-12-01 15:23:14,813(2533) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:331) –> [main] Second-level cache direct-reference entries: disabled  
[DEBUG] 2015-12-01 15:23:14,822(2542) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:339) –> [main] Statistics: disabled  
[DEBUG] 2015-12-01 15:23:14,823(2543) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:345) –> [main] Deleted entity synthetic identifier rollback: disabled  
[DEBUG] 2015-12-01 15:23:14,824(2544) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:372) –> [main] Default entity-mode: pojo  
[DEBUG] 2015-12-01 15:23:14,825(2545) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:378) –> [main] Named query checking : enabled  
[DEBUG] 2015-12-01 15:23:14,826(2546) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:384) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): enabled  
[DEBUG] 2015-12-01 15:23:14,827(2547) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:402) –> [main] Allow initialization of lazy state outside session : : disabled  
[DEBUG] 2015-12-01 15:23:14,827(2547) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:412) –> [main] JTA Track by Thread: enabled  
[DEBUG] 2015-12-01 15:23:14,828(2548) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Building session factory  
[DEBUG] 2015-12-01 15:23:14,830(2550) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:280) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-12-01 15:23:14,831(2551) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:281) –> [main] Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=D:\Java\jdk1.8.0_40\jre\bin, java.vm.version=25.40-b25, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\Java\workspace\demo-chained-transactionmanager, java.runtime.version=1.8.0_40-b26, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=thread, java.endorsed.dirs=D:\Java\jdk1.8.0_40\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\奇点之~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8.1, sun.jnu.encoding=GBK, java.library.path=D:\Java\jdk1.8.0_40\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/jdk1.8.0_40/bin/../jre/bin/server;D:/Java/jdk1.8.0_40/bin/../jre/bin;D:/Java/jdk1.8.0_40/bin/../jre/lib/amd64;D:\Java\jdk1.8.0_40/bin;D:\Java\jdk1.8.0_40/lib/dt.jar;D:\Java\jdk1.8.0_40/lib/tools.jar;D:\__ENV__\apache-maven-3.2.1/bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__ENV__\apache-tomcat-7.0.57\bin;D:\__ENV__\apache-tomcat-7.0.57\jre;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\TortoiseSVN\bin;D:\__ENV__\eclipse;;., hibernate.connection.datasource=org.apache.commons.dbcp.BasicDataSource@1a6f5124, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=6.3, user.home=C:\Users\奇点之光08老师, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=奇点之光08老师, java.class.path=D:\Java\workspace\demo-chained-transactionmanager\target\test-classes;D:\Java\workspace\demo-chained-transactionmanager\target\classes;D:\__ENV__\repo\ch\qos\logback\logback-core\0.9.28\logback-core-0.9.28.jar;D:\__ENV__\repo\ch\qos\logback\logback-classic\0.9.28\logback-classic-0.9.28.jar;D:\__ENV__\repo\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;D:\__ENV__\repo\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;D:\__ENV__\repo\org\slf4j\slf4j-api\1.7.7\slf4j-api-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-jdk14\1.7.7\slf4j-jdk14-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-log4j12\1.7.7\slf4j-log4j12-1.7.7.jar;D:\__ENV__\repo\mysql\mysql-connector-java\5.1.26\mysql-connector-java-5.1.26.jar;D:\__ENV__\repo\log4j\log4j\1.2.14\log4j-1.2.14.jar;D:\__ENV__\repo\org\springframework\data\spring-data-commons\1.8.0.RELEASE\spring-data-commons-1.8.0.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\slf4j\jcl-over-slf4j\1.7.7\jcl-over-slf4j-1.7.7.jar;D:\__ENV__\repo\org\springframework\spring-context\3.2.4.RELEASE\spring-context-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-aop\3.2.4.RELEASE\spring-aop-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-expression\3.2.4.RELEASE\spring-expression-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-oxm\3.2.4.RELEASE\spring-oxm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\__ENV__\repo\org\springframework\spring-web\3.2.4.RELEASE\spring-web-3.2.4.RELEASE.jar;D:\__ENV__\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\__ENV__\repo\org\springframework\spring-webmvc\3.2.4.RELEASE\spring-webmvc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-orm\3.2.4.RELEASE\spring-orm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-jdbc\3.2.4.RELEASE\spring-jdbc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-tx\3.2.4.RELEASE\spring-tx-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-test\3.2.4.RELEASE\spring-test-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\__ENV__\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\__ENV__\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\__ENV__\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\__ENV__\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-validator\4.2.0.Final\hibernate-validator-4.2.0.Final.jar;D:\__ENV__\repo\javax\validation\validation-api\1.0.0.GA\validation-api-1.0.0.GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-core\4.2.10.Final\hibernate-core-4.2.10.Final.jar;D:\__ENV__\repo\antlr\antlr\2.7.7\antlr-2.7.7.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.1.Final\jboss-transaction-api_1.1_spec-1.0.1.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpcore\4.3.1\httpcore-4.3.1.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpclient\4.3.1\httpclient-4.3.1.jar;D:\__ENV__\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\__ENV__\repo\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpmime\4.3.1\httpmime-4.3.1.jar;D:\__ENV__\repo\redis\clients\jedis\2.7.2\jedis-2.7.2.jar;D:\__ENV__\repo\org\apache\commons\commons-pool2\2.3\commons-pool2-2.3.jar;D:\__ENV__\repo\javax\persistence\persistence-api\1.0.2\persistence-api-1.0.2.jar;D:\__ENV__\repo\org\ansj\ansj_seg\0.9\ansj_seg-0.9.jar;D:\__ENV__\repo\org\ansj\tree_split\1.0.1\tree_split-1.0.1.jar;D:\__ENV__\repo\org\apache\commons-lang3\commons-lang3\3.1\commons-lang3-3.1.jar;D:\__ENV__\repo\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;D:\__ENV__\repo\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;D:\__ENV__\repo\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;D:\__ENV__\repo\commons-io\commons-io\2.4\commons-io-2.4.jar;D:\__ENV__\repo\commons-fileupload\commons-fileupload\1.2.2\commons-fileupload-1.2.2.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\__ENV__\repo\com\googlecode\xmemcached\xmemcached\1.4.1\xmemcached-1.4.1.jar;D:\__ENV__\repo\net\sf\json-lib\json-lib\2.4\json-lib-2.4-jdk15.jar;D:\__ENV__\repo\commons-beanutils\commons-beanutils\1.8.0\commons-beanutils-1.8.0.jar;D:\__ENV__\repo\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;D:\__ENV__\repo\net\sf\ezmorph\ezmorph\1.0.6\ezmorph-1.0.6.jar;D:\__ENV__\repo\org\mybatis\mybatis\3.1.1\mybatis-3.1.1.jar;D:\__ENV__\repo\org\mybatis\mybatis-spring\1.1.1\mybatis-spring-1.1.1.jar;D:\__ENV__\repo\junit\junit\4.11\junit-4.11.jar;D:\__ENV__\repo\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/358/1/.cp/;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/357/1/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.classLoader.application=sun.misc.Launcher$AppClassLoader@3b07d329, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=D:\Java\jdk1.8.0_40\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 61034 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -test com.it_sucre.service.HibernateServiceTest:test, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_40, java.ext.dirs=D:\Java\jdk1.8.0_40\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=D:\Java\jdk1.8.0_40\jre\lib\resources.jar;D:\Java\jdk1.8.0_40\jre\lib\rt.jar;D:\Java\jdk1.8.0_40\jre\lib\sunrsasign.jar;D:\Java\jdk1.8.0_40\jre\lib\jsse.jar;D:\Java\jdk1.8.0_40\jre\lib\jce.jar;D:\Java\jdk1.8.0_40\jre\lib\charsets.jar;D:\Java\jdk1.8.0_40\jre\lib\jfr.jar;D:\Java\jdk1.8.0_40\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}  
[DEBUG] 2015-12-01 15:23:14,847(2567) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[DEBUG] 2015-12-01 15:23:14,849(2569) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3604) –> [main] Static SQL for entity: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:23:14,850(2570) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3609) –> [main]  Version select: select id from test where id =?  
[DEBUG] 2015-12-01 15:23:14,851(2571) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3612) –> [main]  Snapshot select: select testentity_.id, testentity_.name as name2_0_ from test testentity_ where testentity_.id=?  
[DEBUG] 2015-12-01 15:23:14,851(2571) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3615) –> [main]  Insert 0: insert into test (name, id) values (?, ?)  
[DEBUG] 2015-12-01 15:23:14,852(2572) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3616) –> [main]  Update 0: update test set name=? where id=?  
[DEBUG] 2015-12-01 15:23:14,852(2572) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3617) –> [main]  Delete 0: delete from test where id=?  
[DEBUG] 2015-12-01 15:23:14,853(2573) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [NONE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:23:14,860(2580) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:23:14,861(2581) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:23:14,862(2582) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE_NOWAIT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:23:14,863(2583) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [FORCE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:23:14,863(2583) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? lock in share mode  
[DEBUG] 2015-12-01 15:23:14,864(2584) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_WRITE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:23:14,865(2585) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:23:14,866(2586) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:23:14,867(2587) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:23:14,869(2589) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:23:14,871(2591) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:23:14,872(2592) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:75) –> [main] Registering SessionFactory: e11f4dc7-2a8b-42cd-8210-b3aad8aa1f9e (<unnamed>)  
[DEBUG] 2015-12-01 15:23:14,873(2593) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:82) –> [main] Not binding SessionFactory to JNDI, no JNDI name configured  
[DEBUG] 2015-12-01 15:23:14,875(2595) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:492) –> [main] Instantiated session factory  
[INFO ] 2015-12-01 15:23:14,876(2596) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:182) –> [main] HHH000228: Running hbm2ddl schema update  
[INFO ] 2015-12-01 15:23:14,878(2598) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:193) –> [main] HHH000102: Fetching database metadata  
[INFO ] 2015-12-01 15:23:14,879(2599) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:205) –> [main] HHH000396: Updating schema  
[DEBUG] 2015-12-01 15:23:14,880(2600) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:23:14,881(2601) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:23:14,881(2601) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:23:14,882(2602) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:23:14,883(2603) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:23:14,883(2603) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:23:14,884(2604) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:23:14,885(2605) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:23:14,885(2605) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:23:14,886(2606) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[INFO ] 2015-12-01 15:23:14,903(2623) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] HHH000261: Table found: Test.test  
[INFO ] 2015-12-01 15:23:14,904(2624) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:67) –> [main] HHH000037: Columns: [name, id]  
[INFO ] 2015-12-01 15:23:14,905(2625) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] HHH000108: Foreign keys: []  
[INFO ] 2015-12-01 15:23:14,905(2625) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:70) –> [main] HHH000126: Indexes: [primary]  
[DEBUG] 2015-12-01 15:23:14,906(2626) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-12-01 15:23:14,906(2626) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:242) –> [main] HHH000232: Schema update complete  
[DEBUG] 2015-12-01 15:23:14,908(2628) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1073) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-12-01 15:23:14,909(2629) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1096) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-12-01 15:23:14,909(2629) org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:110) –> [main] Statistics initialized [enabled=false]  
[DEBUG] 2015-12-01 15:23:15,394(3114) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:212) –> [main] Obtaining JDBC connection  
[DEBUG] 2015-12-01 15:23:15,395(3115) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:218) –> [main] Obtained JDBC connection  
[DEBUG] 2015-12-01 15:23:15,416(3136) org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) –> [main] begin  
[DEBUG] 2015-12-01 15:23:15,417(3137) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) –> [main] initial autocommit status: true  
[DEBUG] 2015-12-01 15:23:15,418(3138) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) –> [main] disabling autocommit  
[DEBUG] 2015-12-01 15:23:15,552(3272) org.hibernate.engine.transaction.spi.AbstractTransactionImpl.rollback(AbstractTransactionImpl.java:203) –> [main] rolling back  
[DEBUG] 2015-12-01 15:23:15,553(3273) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doRollback(JdbcTransaction.java:164) –> [main] rolled JDBC Connection  
[DEBUG] 2015-12-01 15:23:15,562(3282) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) –> [main] re-enabling autocommit  
[DEBUG] 2015-12-01 15:23:15,571(3291) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:232) –> [main] Releasing JDBC connection  
[DEBUG] 2015-12-01 15:23:15,573(3293) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:250) –> [main] Released JDBC connection  
[DEBUG] 2015-12-01 15:23:15,642(3362) org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1374) –> [Thread-2] HHH000031: Closing  
[DEBUG] 2015-12-01 15:23:15,647(3367) org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1374) –> [Thread-2] HHH000031: Closing  
[DEBUG] 2015-12-01 15:23:44,363(0) org.hibernate.cfg.Configuration.<clinit>(Configuration.java:184) –> [main] Logging Provider: org.jboss.logging.Log4jLoggerProvider  
[DEBUG] 2015-12-01 15:23:44,401(38) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@22e357dc  
[DEBUG] 2015-12-01 15:23:44,403(40) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@22e357dc  
[DEBUG] 2015-12-01 15:23:44,404(41) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@22e357dc  
[DEBUG] 2015-12-01 15:23:44,406(43) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@48974e45  
[DEBUG] 2015-12-01 15:23:44,412(49) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@57af006c  
[DEBUG] 2015-12-01 15:23:44,412(49) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@2fd1433e  
[DEBUG] 2015-12-01 15:23:44,412(49) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@37654521  
[DEBUG] 2015-12-01 15:23:44,412(49) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@37654521  
[DEBUG] 2015-12-01 15:23:44,412(49) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@37654521  
[DEBUG] 2015-12-01 15:23:44,427(64) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@7ea9e1e2  
[DEBUG] 2015-12-01 15:23:44,427(64) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@7ea9e1e2  
[DEBUG] 2015-12-01 15:23:44,427(64) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7ea9e1e2  
[DEBUG] 2015-12-01 15:23:44,427(64) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@14555e0a  
[DEBUG] 2015-12-01 15:23:44,427(64) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@14555e0a  
[DEBUG] 2015-12-01 15:23:44,427(64) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@14555e0a  
[DEBUG] 2015-12-01 15:23:44,427(64) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@10d307f1  
[DEBUG] 2015-12-01 15:23:44,427(64) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@10d307f1  
[DEBUG] 2015-12-01 15:23:44,427(64) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@10d307f1  
[DEBUG] 2015-12-01 15:23:44,443(80) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@1b1426f4  
[DEBUG] 2015-12-01 15:23:44,443(80) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@1b1426f4  
[DEBUG] 2015-12-01 15:23:44,443(80) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@1b1426f4  
[DEBUG] 2015-12-01 15:23:44,443(80) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@2a54a73f  
[DEBUG] 2015-12-01 15:23:44,443(80) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@2a54a73f  
[DEBUG] 2015-12-01 15:23:44,443(80) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2a54a73f  
[DEBUG] 2015-12-01 15:23:44,443(80) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@16610890  
[DEBUG] 2015-12-01 15:23:44,443(80) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@16610890  
[DEBUG] 2015-12-01 15:23:44,443(80) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@16610890  
[DEBUG] 2015-12-01 15:23:44,459(96) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@28f2a10f  
[DEBUG] 2015-12-01 15:23:44,459(96) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@28f2a10f  
[DEBUG] 2015-12-01 15:23:44,459(96) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@20ccf40b  
[DEBUG] 2015-12-01 15:23:44,459(96) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@20ccf40b  
[DEBUG] 2015-12-01 15:23:44,459(96) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration string -> org.hibernate.type.StringType@6283d8b8  
[DEBUG] 2015-12-01 15:23:44,459(96) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@6283d8b8  
[DEBUG] 2015-12-01 15:23:44,474(111) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@a530d0a  
[DEBUG] 2015-12-01 15:23:44,474(111) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4738a206  
[DEBUG] 2015-12-01 15:23:44,474(111) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration url -> org.hibernate.type.UrlType@58695725  
[DEBUG] 2015-12-01 15:23:44,474(111) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@58695725  
[DEBUG] 2015-12-01 15:23:44,474(111) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration date -> org.hibernate.type.DateType@58d75e99  
[DEBUG] 2015-12-01 15:23:44,474(111) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@58d75e99  
[DEBUG] 2015-12-01 15:23:44,474(111) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration time -> org.hibernate.type.TimeType@e15b7e8  
[DEBUG] 2015-12-01 15:23:44,490(127) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@e15b7e8  
[DEBUG] 2015-12-01 15:23:44,490(127) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@485966cc  
[DEBUG] 2015-12-01 15:23:44,490(127) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@485966cc  
[DEBUG] 2015-12-01 15:23:44,490(127) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@485966cc  
[DEBUG] 2015-12-01 15:23:44,490(127) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@57cf54e1  
[DEBUG] 2015-12-01 15:23:44,490(127) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@3ee37e5a  
[DEBUG] 2015-12-01 15:23:44,490(127) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3ee37e5a  
[DEBUG] 2015-12-01 15:23:44,490(127) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3ee37e5a  
[DEBUG] 2015-12-01 15:23:44,505(142) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@f0da945  
[DEBUG] 2015-12-01 15:23:44,505(142) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@3e11f9e9  
[DEBUG] 2015-12-01 15:23:44,505(142) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3e11f9e9  
[DEBUG] 2015-12-01 15:23:44,505(142) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@4dbb42b7  
[DEBUG] 2015-12-01 15:23:44,505(142) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4dbb42b7  
[DEBUG] 2015-12-01 15:23:44,505(142) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@23c30a20  
[DEBUG] 2015-12-01 15:23:44,505(142) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@23c30a20  
[DEBUG] 2015-12-01 15:23:44,505(142) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration class -> org.hibernate.type.ClassType@49049a04  
[DEBUG] 2015-12-01 15:23:44,505(142) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@49049a04  
[DEBUG] 2015-12-01 15:23:44,521(158) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@26e356f0  
[DEBUG] 2015-12-01 15:23:44,521(158) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@26e356f0  
[DEBUG] 2015-12-01 15:23:44,521(158) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1151e434  
[DEBUG] 2015-12-01 15:23:44,521(158) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@428640fa  
[DEBUG] 2015-12-01 15:23:44,521(158) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@6bd61f98  
[DEBUG] 2015-12-01 15:23:44,521(158) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@6bd61f98  
[DEBUG] 2015-12-01 15:23:44,521(158) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@6bd61f98  
[DEBUG] 2015-12-01 15:23:44,537(174) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@53aac487  
[DEBUG] 2015-12-01 15:23:44,537(174) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@53aac487  
[DEBUG] 2015-12-01 15:23:44,537(174) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@53aac487  
[DEBUG] 2015-12-01 15:23:44,537(174) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration image -> org.hibernate.type.ImageType@2d52216b  
[DEBUG] 2015-12-01 15:23:44,552(189) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@5a45133e  
[DEBUG] 2015-12-01 15:23:44,552(189) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@5a45133e  
[DEBUG] 2015-12-01 15:23:44,552(189) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@5a45133e  
[DEBUG] 2015-12-01 15:23:44,584(221) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5d534f5d  
[DEBUG] 2015-12-01 15:23:44,584(221) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5d534f5d  
[DEBUG] 2015-12-01 15:23:44,584(221) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5d534f5d  
[DEBUG] 2015-12-01 15:23:44,584(221) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration text -> org.hibernate.type.TextType@6221a451  
[DEBUG] 2015-12-01 15:23:44,584(221) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ntext -> org.hibernate.type.NTextType@5824a83d  
[DEBUG] 2015-12-01 15:23:44,599(236) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@1a942c18  
[DEBUG] 2015-12-01 15:23:44,615(252) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1a942c18  
[DEBUG] 2015-12-01 15:23:44,615(252) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@63376bed  
[DEBUG] 2015-12-01 15:23:44,630(267) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@76a4ebf2  
[DEBUG] 2015-12-01 15:23:44,630(267) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@76a4ebf2  
[DEBUG] 2015-12-01 15:23:44,630(267) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nclob -> org.hibernate.type.NClobType@2af004b  
[DEBUG] 2015-12-01 15:23:44,630(267) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2af004b  
[DEBUG] 2015-12-01 15:23:44,630(267) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@563f38c4  
[DEBUG] 2015-12-01 15:23:44,646(283) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3e27ba32  
[DEBUG] 2015-12-01 15:23:44,646(283) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@58cbafc2  
[DEBUG] 2015-12-01 15:23:44,646(283) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@4be29ed9  
[DEBUG] 2015-12-01 15:23:44,646(283) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4be29ed9  
[DEBUG] 2015-12-01 15:23:44,646(283) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@33065d67  
[DEBUG] 2015-12-01 15:23:44,646(283) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7bba5817  
[DEBUG] 2015-12-01 15:23:44,646(283) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@75437611  
[DEBUG] 2015-12-01 15:23:44,646(283) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1c5920df  
[DEBUG] 2015-12-01 15:23:44,646(283) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@79e4c792  
[DEBUG] 2015-12-01 15:23:44,646(283) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4c60d6e9  
[DEBUG] 2015-12-01 15:23:44,662(299) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4a83a74a  
[DEBUG] 2015-12-01 15:23:44,662(299) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4b29d1d2  
[INFO ] 2015-12-01 15:23:44,693(330) org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66) –> [main] HCANN000001: Hibernate Commons Annotations {4.0.4.Final}  
[INFO ] 2015-12-01 15:23:44,709(346) org.hibernate.Version.logVersion(Version.java:41) –> [main] HHH000412: Hibernate Core {4.2.10.Final}  
[INFO ] 2015-12-01 15:23:44,709(346) org.hibernate.cfg.Environment.<clinit>(Environment.java:238) –> [main] HHH000206: hibernate.properties not found  
[INFO ] 2015-12-01 15:23:44,709(346) org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:345) –> [main] HHH000021: Bytecode provider name : javassist  
[DEBUG] 2015-12-01 15:23:44,724(361) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-12-01 15:23:44,724(361) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-12-01 15:23:44,724(361) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:23:44,740(377) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:23:44,740(377) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-12-01 15:23:44,740(377) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]  
[DEBUG] 2015-12-01 15:23:44,740(377) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-12-01 15:23:44,740(377) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-12-01 15:23:44,740(377) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-12-01 15:23:44,755(392) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-12-01 15:23:44,755(392) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-12-01 15:23:44,755(392) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-12-01 15:23:44,755(392) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-12-01 15:23:44,755(392) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-12-01 15:23:44,755(392) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]  
[DEBUG] 2015-12-01 15:23:44,818(455) org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) –> [main] Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].  
[DEBUG] 2015-12-01 15:23:44,849(486) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1781) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-12-01 15:23:45,302(939) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:121) –> [main] Database ->
       name : MySQL
    version : 5.6.22
      major : 5
      minor : 6  
[DEBUG] 2015-12-01 15:23:45,302(939) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:127) –> [main] Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[DEBUG] 2015-12-01 15:23:45,302(939) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:133) –> [main] JDBC version : 4.0  
[INFO ] 2015-12-01 15:23:45,331(968) org.hibernate.dialect.Dialect.<init>(Dialect.java:130) –> [main] HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-12-01 15:23:45,347(984) org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:120) –> [main] HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException  
[DEBUG] 2015-12-01 15:23:45,394(1031) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:23:45,394(1031) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:23:45,410(1047) org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:534) –> [main] Binding entity from annotated class: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:23:45,472(1109) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}  
[DEBUG] 2015-12-01 15:23:45,472(1109) org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1118) –> [main] No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED  
[DEBUG] 2015-12-01 15:23:45,519(1156) org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:394) –> [main] Import with entity name TestEntity  
[DEBUG] 2015-12-01 15:23:45,535(1172) org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:564) –> [main] Bind entity com.it_sucre.entity.TestEntity on table test  
[DEBUG] 2015-12-01 15:23:45,581(1218) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=id, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:23:45,581(1218) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property id with lazy=false  
[DEBUG] 2015-12-01 15:23:45,581(1218) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for id  
[DEBUG] 2015-12-01 15:23:45,597(1234) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property id  
[DEBUG] 2015-12-01 15:23:45,613(1250) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=name, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:23:45,613(1250) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property name with lazy=false  
[DEBUG] 2015-12-01 15:23:45,613(1250) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for name  
[DEBUG] 2015-12-01 15:23:45,613(1250) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property name  
[DEBUG] 2015-12-01 15:23:45,613(1250) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for id  
[DEBUG] 2015-12-01 15:23:45,613(1250) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for name  
[DEBUG] 2015-12-01 15:23:45,613(1250) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:23:45,613(1250) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:23:45,613(1250) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:23:45,628(1265) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:23:45,628(1265) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:23:45,628(1265) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:23:45,628(1265) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:23:45,628(1265) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[DEBUG] 2015-12-01 15:23:45,644(1281) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:117) –> [main] Automatic flush during beforeCompletion(): disabled  
[DEBUG] 2015-12-01 15:23:45,644(1281) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:123) –> [main] Automatic session close at end of transaction: disabled  
[DEBUG] 2015-12-01 15:23:45,644(1281) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:134) –> [main] JDBC batch size: 15  
[DEBUG] 2015-12-01 15:23:45,644(1281) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:140) –> [main] JDBC batch updates for versioned data: disabled  
[DEBUG] 2015-12-01 15:23:45,644(1281) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:150) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-12-01 15:23:45,644(1281) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:156) –> [main] Wrap result sets: disabled  
[DEBUG] 2015-12-01 15:23:45,644(1281) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:162) –> [main] JDBC3 getGeneratedKeys(): enabled  
[DEBUG] 2015-12-01 15:23:45,644(1281) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:174) –> [main] multi-tenancy strategy : NONE  
[DEBUG] 2015-12-01 15:23:45,644(1281) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:180) –> [main] Connection release mode: auto  
[INFO ] 2015-12-01 15:23:45,644(1281) org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:68) –> [main] HHH000399: Using default transaction strategy (direct JDBC transactions)  
[DEBUG] 2015-12-01 15:23:45,660(1297) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Using BatchFetchStyle : LEGACY  
[DEBUG] 2015-12-01 15:23:45,660(1297) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:221) –> [main] Maximum outer join fetch depth: 2  
[DEBUG] 2015-12-01 15:23:45,660(1297) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:227) –> [main] Default batch fetch size: 1  
[DEBUG] 2015-12-01 15:23:45,660(1297) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:233) –> [main] Generate SQL with comments: disabled  
[DEBUG] 2015-12-01 15:23:45,660(1297) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:239) –> [main] Order SQL updates by primary key: disabled  
[DEBUG] 2015-12-01 15:23:45,660(1297) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Order SQL inserts for batching: disabled  
[DEBUG] 2015-12-01 15:23:45,660(1297) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Default null ordering: none  
[DEBUG] 2015-12-01 15:23:45,660(1297) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:584) –> [main] Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-12-01 15:23:45,675(1312) org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) –> [main] HHH000397: Using ASTQueryTranslatorFactory  
[DEBUG] 2015-12-01 15:23:45,691(1328) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:263) –> [main] Query language substitutions: {}  
[DEBUG] 2015-12-01 15:23:45,691(1328) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:269) –> [main] JPA-QL strict compliance: disabled  
[DEBUG] 2015-12-01 15:23:45,691(1328) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:277) –> [main] Second-level cache: enabled  
[DEBUG] 2015-12-01 15:23:45,691(1328) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:283) –> [main] Query cache: disabled  
[DEBUG] 2015-12-01 15:23:45,691(1328) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:524) –> [main] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory  
[DEBUG] 2015-12-01 15:23:45,691(1328) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:534) –> [main] org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.  
[DEBUG] 2015-12-01 15:23:45,691(1328) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:306) –> [main] Optimize cache for minimal puts: disabled  
[DEBUG] 2015-12-01 15:23:45,691(1328) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:321) –> [main] Structured second-level cache entries: disabled  
[DEBUG] 2015-12-01 15:23:45,691(1328) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:331) –> [main] Second-level cache direct-reference entries: disabled  
[DEBUG] 2015-12-01 15:23:45,691(1328) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:339) –> [main] Statistics: disabled  
[DEBUG] 2015-12-01 15:23:45,691(1328) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:345) –> [main] Deleted entity synthetic identifier rollback: disabled  
[DEBUG] 2015-12-01 15:23:45,706(1343) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:372) –> [main] Default entity-mode: pojo  
[DEBUG] 2015-12-01 15:23:45,706(1343) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:378) –> [main] Named query checking : enabled  
[DEBUG] 2015-12-01 15:23:45,706(1343) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:384) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): enabled  
[DEBUG] 2015-12-01 15:23:45,706(1343) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:402) –> [main] Allow initialization of lazy state outside session : : disabled  
[DEBUG] 2015-12-01 15:23:45,706(1343) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:412) –> [main] JTA Track by Thread: enabled  
[DEBUG] 2015-12-01 15:23:45,722(1359) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Building session factory  
[DEBUG] 2015-12-01 15:23:45,738(1375) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:280) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-12-01 15:23:45,738(1375) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:281) –> [main] Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=D:\Java\jdk1.8.0_40\jre\bin, java.vm.version=25.40-b25, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\Java\workspace\demo-chained-transactionmanager, java.runtime.version=1.8.0_40-b26, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=thread, java.endorsed.dirs=D:\Java\jdk1.8.0_40\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\奇点之~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8.1, sun.jnu.encoding=GBK, java.library.path=D:\Java\jdk1.8.0_40\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/jdk1.8.0_40/bin/../jre/bin/server;D:/Java/jdk1.8.0_40/bin/../jre/bin;D:/Java/jdk1.8.0_40/bin/../jre/lib/amd64;D:\Java\jdk1.8.0_40/bin;D:\Java\jdk1.8.0_40/lib/dt.jar;D:\Java\jdk1.8.0_40/lib/tools.jar;D:\__ENV__\apache-maven-3.2.1/bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__ENV__\apache-tomcat-7.0.57\bin;D:\__ENV__\apache-tomcat-7.0.57\jre;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\TortoiseSVN\bin;D:\__ENV__\eclipse;;., hibernate.connection.datasource=org.apache.commons.dbcp.BasicDataSource@3724af13, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=6.3, user.home=C:\Users\奇点之光08老师, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=奇点之光08老师, java.class.path=D:\Java\workspace\demo-chained-transactionmanager\target\test-classes;D:\Java\workspace\demo-chained-transactionmanager\target\classes;D:\__ENV__\repo\ch\qos\logback\logback-core\0.9.28\logback-core-0.9.28.jar;D:\__ENV__\repo\ch\qos\logback\logback-classic\0.9.28\logback-classic-0.9.28.jar;D:\__ENV__\repo\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;D:\__ENV__\repo\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;D:\__ENV__\repo\org\slf4j\slf4j-api\1.7.7\slf4j-api-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-jdk14\1.7.7\slf4j-jdk14-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-log4j12\1.7.7\slf4j-log4j12-1.7.7.jar;D:\__ENV__\repo\mysql\mysql-connector-java\5.1.26\mysql-connector-java-5.1.26.jar;D:\__ENV__\repo\log4j\log4j\1.2.14\log4j-1.2.14.jar;D:\__ENV__\repo\org\springframework\data\spring-data-commons\1.8.0.RELEASE\spring-data-commons-1.8.0.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\slf4j\jcl-over-slf4j\1.7.7\jcl-over-slf4j-1.7.7.jar;D:\__ENV__\repo\org\springframework\spring-context\3.2.4.RELEASE\spring-context-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-aop\3.2.4.RELEASE\spring-aop-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-expression\3.2.4.RELEASE\spring-expression-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-oxm\3.2.4.RELEASE\spring-oxm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\__ENV__\repo\org\springframework\spring-web\3.2.4.RELEASE\spring-web-3.2.4.RELEASE.jar;D:\__ENV__\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\__ENV__\repo\org\springframework\spring-webmvc\3.2.4.RELEASE\spring-webmvc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-orm\3.2.4.RELEASE\spring-orm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-jdbc\3.2.4.RELEASE\spring-jdbc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-tx\3.2.4.RELEASE\spring-tx-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-test\3.2.4.RELEASE\spring-test-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\__ENV__\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\__ENV__\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\__ENV__\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\__ENV__\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-validator\4.2.0.Final\hibernate-validator-4.2.0.Final.jar;D:\__ENV__\repo\javax\validation\validation-api\1.0.0.GA\validation-api-1.0.0.GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-core\4.2.10.Final\hibernate-core-4.2.10.Final.jar;D:\__ENV__\repo\antlr\antlr\2.7.7\antlr-2.7.7.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.1.Final\jboss-transaction-api_1.1_spec-1.0.1.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpcore\4.3.1\httpcore-4.3.1.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpclient\4.3.1\httpclient-4.3.1.jar;D:\__ENV__\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\__ENV__\repo\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpmime\4.3.1\httpmime-4.3.1.jar;D:\__ENV__\repo\redis\clients\jedis\2.7.2\jedis-2.7.2.jar;D:\__ENV__\repo\org\apache\commons\commons-pool2\2.3\commons-pool2-2.3.jar;D:\__ENV__\repo\javax\persistence\persistence-api\1.0.2\persistence-api-1.0.2.jar;D:\__ENV__\repo\org\ansj\ansj_seg\0.9\ansj_seg-0.9.jar;D:\__ENV__\repo\org\ansj\tree_split\1.0.1\tree_split-1.0.1.jar;D:\__ENV__\repo\org\apache\commons-lang3\commons-lang3\3.1\commons-lang3-3.1.jar;D:\__ENV__\repo\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;D:\__ENV__\repo\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;D:\__ENV__\repo\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;D:\__ENV__\repo\commons-io\commons-io\2.4\commons-io-2.4.jar;D:\__ENV__\repo\commons-fileupload\commons-fileupload\1.2.2\commons-fileupload-1.2.2.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\__ENV__\repo\com\googlecode\xmemcached\xmemcached\1.4.1\xmemcached-1.4.1.jar;D:\__ENV__\repo\net\sf\json-lib\json-lib\2.4\json-lib-2.4-jdk15.jar;D:\__ENV__\repo\commons-beanutils\commons-beanutils\1.8.0\commons-beanutils-1.8.0.jar;D:\__ENV__\repo\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;D:\__ENV__\repo\net\sf\ezmorph\ezmorph\1.0.6\ezmorph-1.0.6.jar;D:\__ENV__\repo\org\mybatis\mybatis\3.1.1\mybatis-3.1.1.jar;D:\__ENV__\repo\org\mybatis\mybatis-spring\1.1.1\mybatis-spring-1.1.1.jar;D:\__ENV__\repo\junit\junit\4.11\junit-4.11.jar;D:\__ENV__\repo\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/358/1/.cp/;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/357/1/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.classLoader.application=sun.misc.Launcher$AppClassLoader@3b07d329, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=D:\Java\jdk1.8.0_40\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 61043 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -test com.it_sucre.service.HibernateServiceTest:test, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_40, java.ext.dirs=D:\Java\jdk1.8.0_40\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=D:\Java\jdk1.8.0_40\jre\lib\resources.jar;D:\Java\jdk1.8.0_40\jre\lib\rt.jar;D:\Java\jdk1.8.0_40\jre\lib\sunrsasign.jar;D:\Java\jdk1.8.0_40\jre\lib\jsse.jar;D:\Java\jdk1.8.0_40\jre\lib\jce.jar;D:\Java\jdk1.8.0_40\jre\lib\charsets.jar;D:\Java\jdk1.8.0_40\jre\lib\jfr.jar;D:\Java\jdk1.8.0_40\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}  
[DEBUG] 2015-12-01 15:23:45,972(1609) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[DEBUG] 2015-12-01 15:23:46,269(1906) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3604) –> [main] Static SQL for entity: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:23:46,285(1922) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3609) –> [main]  Version select: select id from test where id =?  
[DEBUG] 2015-12-01 15:23:46,285(1922) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3612) –> [main]  Snapshot select: select testentity_.id, testentity_.name as name2_0_ from test testentity_ where testentity_.id=?  
[DEBUG] 2015-12-01 15:23:46,285(1922) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3615) –> [main]  Insert 0: insert into test (name, id) values (?, ?)  
[DEBUG] 2015-12-01 15:23:46,285(1922) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3616) –> [main]  Update 0: update test set name=? where id=?  
[DEBUG] 2015-12-01 15:23:46,285(1922) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3617) –> [main]  Delete 0: delete from test where id=?  
[DEBUG] 2015-12-01 15:23:46,332(1969) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [NONE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:23:46,338(1975) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:23:46,339(1976) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:23:46,339(1976) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE_NOWAIT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:23:46,339(1976) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [FORCE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:23:46,339(1976) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? lock in share mode  
[DEBUG] 2015-12-01 15:23:46,339(1976) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_WRITE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:23:46,339(1976) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:23:46,355(1992) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:23:46,355(1992) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:23:46,370(2007) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:23:46,370(2007) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:23:46,464(2101) org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:62) –> [main] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1b28f282  
[DEBUG] 2015-12-01 15:23:46,480(2117) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:75) –> [main] Registering SessionFactory: 503e21ed-8356-41de-be59-213992451a2c (<unnamed>)  
[DEBUG] 2015-12-01 15:23:46,480(2117) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:82) –> [main] Not binding SessionFactory to JNDI, no JNDI name configured  
[DEBUG] 2015-12-01 15:23:46,480(2117) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:492) –> [main] Instantiated session factory  
[INFO ] 2015-12-01 15:23:46,480(2117) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:182) –> [main] HHH000228: Running hbm2ddl schema update  
[INFO ] 2015-12-01 15:23:46,495(2132) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:193) –> [main] HHH000102: Fetching database metadata  
[INFO ] 2015-12-01 15:23:46,495(2132) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:205) –> [main] HHH000396: Updating schema  
[DEBUG] 2015-12-01 15:23:46,495(2132) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:23:46,495(2132) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:23:46,495(2132) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:23:46,495(2132) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:23:46,495(2132) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:23:46,495(2132) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:23:46,495(2132) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:23:46,495(2132) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:23:46,495(2132) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:23:46,495(2132) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[INFO ] 2015-12-01 15:23:46,542(2179) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] HHH000261: Table found: Test.test  
[INFO ] 2015-12-01 15:23:46,542(2179) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:67) –> [main] HHH000037: Columns: [name, id]  
[INFO ] 2015-12-01 15:23:46,542(2179) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] HHH000108: Foreign keys: []  
[INFO ] 2015-12-01 15:23:46,542(2179) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:70) –> [main] HHH000126: Indexes: [primary]  
[DEBUG] 2015-12-01 15:23:46,542(2179) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-12-01 15:23:46,542(2179) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:242) –> [main] HHH000232: Schema update complete  
[DEBUG] 2015-12-01 15:23:46,558(2195) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1073) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-12-01 15:23:46,558(2195) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1096) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-12-01 15:23:46,573(2210) org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:110) –> [main] Statistics initialized [enabled=false]  
[DEBUG] 2015-12-01 15:23:46,636(2273) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@22e357dc  
[DEBUG] 2015-12-01 15:23:46,636(2273) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@22e357dc  
[DEBUG] 2015-12-01 15:23:46,636(2273) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@22e357dc  
[DEBUG] 2015-12-01 15:23:46,636(2273) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@48974e45  
[DEBUG] 2015-12-01 15:23:46,651(2288) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@57af006c  
[DEBUG] 2015-12-01 15:23:46,651(2288) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@2fd1433e  
[DEBUG] 2015-12-01 15:23:46,651(2288) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@37654521  
[DEBUG] 2015-12-01 15:23:46,651(2288) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@37654521  
[DEBUG] 2015-12-01 15:23:46,651(2288) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@37654521  
[DEBUG] 2015-12-01 15:23:46,651(2288) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@7ea9e1e2  
[DEBUG] 2015-12-01 15:23:46,651(2288) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@7ea9e1e2  
[DEBUG] 2015-12-01 15:23:46,651(2288) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7ea9e1e2  
[DEBUG] 2015-12-01 15:23:46,651(2288) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@14555e0a  
[DEBUG] 2015-12-01 15:23:46,651(2288) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@14555e0a  
[DEBUG] 2015-12-01 15:23:46,667(2304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@14555e0a  
[DEBUG] 2015-12-01 15:23:46,667(2304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@10d307f1  
[DEBUG] 2015-12-01 15:23:46,667(2304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@10d307f1  
[DEBUG] 2015-12-01 15:23:46,667(2304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@10d307f1  
[DEBUG] 2015-12-01 15:23:46,667(2304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@1b1426f4  
[DEBUG] 2015-12-01 15:23:46,667(2304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@1b1426f4  
[DEBUG] 2015-12-01 15:23:46,667(2304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@1b1426f4  
[DEBUG] 2015-12-01 15:23:46,667(2304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@2a54a73f  
[DEBUG] 2015-12-01 15:23:46,667(2304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@2a54a73f  
[DEBUG] 2015-12-01 15:23:46,667(2304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2a54a73f  
[DEBUG] 2015-12-01 15:23:46,667(2304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@16610890  
[DEBUG] 2015-12-01 15:23:46,667(2304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@16610890  
[DEBUG] 2015-12-01 15:23:46,667(2304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@16610890  
[DEBUG] 2015-12-01 15:23:46,667(2304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@28f2a10f  
[DEBUG] 2015-12-01 15:23:46,667(2304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@28f2a10f  
[DEBUG] 2015-12-01 15:23:46,667(2304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@20ccf40b  
[DEBUG] 2015-12-01 15:23:46,667(2304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@20ccf40b  
[DEBUG] 2015-12-01 15:23:46,667(2304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration string -> org.hibernate.type.StringType@6283d8b8  
[DEBUG] 2015-12-01 15:23:46,667(2304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@6283d8b8  
[DEBUG] 2015-12-01 15:23:46,667(2304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@a530d0a  
[DEBUG] 2015-12-01 15:23:46,667(2304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4738a206  
[DEBUG] 2015-12-01 15:23:46,683(2320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration url -> org.hibernate.type.UrlType@58695725  
[DEBUG] 2015-12-01 15:23:46,683(2320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@58695725  
[DEBUG] 2015-12-01 15:23:46,683(2320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration date -> org.hibernate.type.DateType@58d75e99  
[DEBUG] 2015-12-01 15:23:46,683(2320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@58d75e99  
[DEBUG] 2015-12-01 15:23:46,683(2320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration time -> org.hibernate.type.TimeType@e15b7e8  
[DEBUG] 2015-12-01 15:23:46,683(2320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@e15b7e8  
[DEBUG] 2015-12-01 15:23:46,683(2320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@485966cc  
[DEBUG] 2015-12-01 15:23:46,683(2320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@485966cc  
[DEBUG] 2015-12-01 15:23:46,683(2320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@485966cc  
[DEBUG] 2015-12-01 15:23:46,683(2320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@57cf54e1  
[DEBUG] 2015-12-01 15:23:46,683(2320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@3ee37e5a  
[DEBUG] 2015-12-01 15:23:46,683(2320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3ee37e5a  
[DEBUG] 2015-12-01 15:23:46,683(2320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3ee37e5a  
[DEBUG] 2015-12-01 15:23:46,698(2335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@f0da945  
[DEBUG] 2015-12-01 15:23:46,698(2335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@3e11f9e9  
[DEBUG] 2015-12-01 15:23:46,698(2335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3e11f9e9  
[DEBUG] 2015-12-01 15:23:46,698(2335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@4dbb42b7  
[DEBUG] 2015-12-01 15:23:46,698(2335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4dbb42b7  
[DEBUG] 2015-12-01 15:23:46,698(2335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@23c30a20  
[DEBUG] 2015-12-01 15:23:46,698(2335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@23c30a20  
[DEBUG] 2015-12-01 15:23:46,698(2335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration class -> org.hibernate.type.ClassType@49049a04  
[DEBUG] 2015-12-01 15:23:46,698(2335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@49049a04  
[DEBUG] 2015-12-01 15:23:46,698(2335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@26e356f0  
[DEBUG] 2015-12-01 15:23:46,714(2351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@26e356f0  
[DEBUG] 2015-12-01 15:23:46,714(2351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1151e434  
[DEBUG] 2015-12-01 15:23:46,714(2351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@428640fa  
[DEBUG] 2015-12-01 15:23:46,714(2351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@6bd61f98  
[DEBUG] 2015-12-01 15:23:46,714(2351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@6bd61f98  
[DEBUG] 2015-12-01 15:23:46,714(2351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@6bd61f98  
[DEBUG] 2015-12-01 15:23:46,714(2351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@53aac487  
[DEBUG] 2015-12-01 15:23:46,714(2351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@53aac487  
[DEBUG] 2015-12-01 15:23:46,714(2351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@53aac487  
[DEBUG] 2015-12-01 15:23:46,730(2367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration image -> org.hibernate.type.ImageType@2d52216b  
[DEBUG] 2015-12-01 15:23:46,730(2367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@5a45133e  
[DEBUG] 2015-12-01 15:23:46,730(2367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@5a45133e  
[DEBUG] 2015-12-01 15:23:46,730(2367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@5a45133e  
[DEBUG] 2015-12-01 15:23:46,730(2367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5d534f5d  
[DEBUG] 2015-12-01 15:23:46,730(2367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5d534f5d  
[DEBUG] 2015-12-01 15:23:46,730(2367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5d534f5d  
[DEBUG] 2015-12-01 15:23:46,730(2367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration text -> org.hibernate.type.TextType@6221a451  
[DEBUG] 2015-12-01 15:23:46,730(2367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ntext -> org.hibernate.type.NTextType@5824a83d  
[DEBUG] 2015-12-01 15:23:46,730(2367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@1a942c18  
[DEBUG] 2015-12-01 15:23:46,730(2367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1a942c18  
[DEBUG] 2015-12-01 15:23:46,730(2367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@63376bed  
[DEBUG] 2015-12-01 15:23:46,730(2367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@76a4ebf2  
[DEBUG] 2015-12-01 15:23:46,730(2367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@76a4ebf2  
[DEBUG] 2015-12-01 15:23:46,730(2367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nclob -> org.hibernate.type.NClobType@2af004b  
[DEBUG] 2015-12-01 15:23:46,730(2367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2af004b  
[DEBUG] 2015-12-01 15:23:46,745(2382) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@563f38c4  
[DEBUG] 2015-12-01 15:23:46,745(2382) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3e27ba32  
[DEBUG] 2015-12-01 15:23:46,745(2382) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@58cbafc2  
[DEBUG] 2015-12-01 15:23:46,745(2382) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@4be29ed9  
[DEBUG] 2015-12-01 15:23:46,745(2382) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4be29ed9  
[DEBUG] 2015-12-01 15:23:46,745(2382) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5dda6f9  
[DEBUG] 2015-12-01 15:23:46,745(2382) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@54afd745  
[DEBUG] 2015-12-01 15:23:46,745(2382) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@fff25f1  
[DEBUG] 2015-12-01 15:23:46,745(2382) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@263f04ca  
[DEBUG] 2015-12-01 15:23:46,745(2382) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5a021cb9  
[DEBUG] 2015-12-01 15:23:46,745(2382) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@f31c0c6  
[DEBUG] 2015-12-01 15:23:46,745(2382) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4a9419d7  
[DEBUG] 2015-12-01 15:23:46,745(2382) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2e8ab815  
[DEBUG] 2015-12-01 15:23:46,745(2382) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-12-01 15:23:46,761(2398) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-12-01 15:23:46,761(2398) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:23:46,776(2413) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-12-01 15:23:46,776(2413) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-12-01 15:23:46,776(2413) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]  
[DEBUG] 2015-12-01 15:23:46,776(2413) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-12-01 15:23:46,776(2413) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-12-01 15:23:46,776(2413) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-12-01 15:23:46,776(2413) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-12-01 15:23:46,776(2413) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-12-01 15:23:46,776(2413) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-12-01 15:23:46,776(2413) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-12-01 15:23:46,776(2413) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-12-01 15:23:46,776(2413) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]  
[DEBUG] 2015-12-01 15:23:46,809(2446) org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) –> [main] Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].  
[DEBUG] 2015-12-01 15:23:46,820(2457) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1781) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-12-01 15:23:46,876(2513) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:121) –> [main] Database ->
       name : MySQL
    version : 5.6.22
      major : 5
      minor : 6  
[DEBUG] 2015-12-01 15:23:46,876(2513) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:127) –> [main] Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[DEBUG] 2015-12-01 15:23:46,877(2514) org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:133) –> [main] JDBC version : 4.0  
[INFO ] 2015-12-01 15:23:46,909(2546) org.hibernate.dialect.Dialect.<init>(Dialect.java:130) –> [main] HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-12-01 15:23:46,911(2548) org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:120) –> [main] HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException  
[DEBUG] 2015-12-01 15:23:46,914(2551) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:23:46,915(2552) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:23:46,917(2554) org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:534) –> [main] Binding entity from annotated class: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:23:46,917(2554) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}  
[DEBUG] 2015-12-01 15:23:46,919(2556) org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1118) –> [main] No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED  
[DEBUG] 2015-12-01 15:23:46,923(2560) org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:394) –> [main] Import with entity name TestEntity  
[DEBUG] 2015-12-01 15:23:46,924(2561) org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:564) –> [main] Bind entity com.it_sucre.entity.TestEntity on table test  
[DEBUG] 2015-12-01 15:23:46,925(2562) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=id, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:23:46,927(2564) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property id with lazy=false  
[DEBUG] 2015-12-01 15:23:46,928(2565) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for id  
[DEBUG] 2015-12-01 15:23:46,929(2566) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property id  
[DEBUG] 2015-12-01 15:23:46,930(2567) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=name, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-12-01 15:23:46,934(2571) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:179) –> [main] MetadataSourceProcessor property name with lazy=false  
[DEBUG] 2015-12-01 15:23:46,935(2572) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:330) –> [main] building SimpleValue for name  
[DEBUG] 2015-12-01 15:23:46,936(2573) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260) –> [main] Building property name  
[DEBUG] 2015-12-01 15:23:46,936(2573) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for id  
[DEBUG] 2015-12-01 15:23:46,938(2575) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:368) –> [main] Setting SimpleValue typeName for name  
[DEBUG] 2015-12-01 15:23:46,938(2575) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:23:46,939(2576) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:23:46,946(2583) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:23:46,949(2586) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:23:46,950(2587) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:23:46,954(2591) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:23:46,955(2592) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:23:46,955(2592) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[DEBUG] 2015-12-01 15:23:46,958(2595) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:117) –> [main] Automatic flush during beforeCompletion(): disabled  
[DEBUG] 2015-12-01 15:23:46,959(2596) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:123) –> [main] Automatic session close at end of transaction: disabled  
[DEBUG] 2015-12-01 15:23:46,959(2596) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:134) –> [main] JDBC batch size: 15  
[DEBUG] 2015-12-01 15:23:46,960(2597) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:140) –> [main] JDBC batch updates for versioned data: disabled  
[DEBUG] 2015-12-01 15:23:46,961(2598) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:150) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-12-01 15:23:46,961(2598) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:156) –> [main] Wrap result sets: disabled  
[DEBUG] 2015-12-01 15:23:46,965(2602) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:162) –> [main] JDBC3 getGeneratedKeys(): enabled  
[DEBUG] 2015-12-01 15:23:46,967(2604) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:174) –> [main] multi-tenancy strategy : NONE  
[DEBUG] 2015-12-01 15:23:46,968(2605) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:180) –> [main] Connection release mode: auto  
[INFO ] 2015-12-01 15:23:46,970(2607) org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:68) –> [main] HHH000399: Using default transaction strategy (direct JDBC transactions)  
[DEBUG] 2015-12-01 15:23:46,975(2612) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Using BatchFetchStyle : LEGACY  
[DEBUG] 2015-12-01 15:23:46,980(2617) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:221) –> [main] Maximum outer join fetch depth: 2  
[DEBUG] 2015-12-01 15:23:46,986(2623) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:227) –> [main] Default batch fetch size: 1  
[DEBUG] 2015-12-01 15:23:46,988(2625) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:233) –> [main] Generate SQL with comments: disabled  
[DEBUG] 2015-12-01 15:23:46,990(2627) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:239) –> [main] Order SQL updates by primary key: disabled  
[DEBUG] 2015-12-01 15:23:46,991(2628) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Order SQL inserts for batching: disabled  
[DEBUG] 2015-12-01 15:23:46,993(2630) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Default null ordering: none  
[DEBUG] 2015-12-01 15:23:46,994(2631) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:584) –> [main] Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-12-01 15:23:46,995(2632) org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) –> [main] HHH000397: Using ASTQueryTranslatorFactory  
[DEBUG] 2015-12-01 15:23:46,996(2633) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:263) –> [main] Query language substitutions: {}  
[DEBUG] 2015-12-01 15:23:47,000(2637) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:269) –> [main] JPA-QL strict compliance: disabled  
[DEBUG] 2015-12-01 15:23:47,001(2638) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:277) –> [main] Second-level cache: enabled  
[DEBUG] 2015-12-01 15:23:47,002(2639) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:283) –> [main] Query cache: disabled  
[DEBUG] 2015-12-01 15:23:47,002(2639) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:524) –> [main] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory  
[DEBUG] 2015-12-01 15:23:47,003(2640) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:534) –> [main] org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.  
[DEBUG] 2015-12-01 15:23:47,004(2641) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:306) –> [main] Optimize cache for minimal puts: disabled  
[DEBUG] 2015-12-01 15:23:47,005(2642) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:321) –> [main] Structured second-level cache entries: disabled  
[DEBUG] 2015-12-01 15:23:47,016(2653) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:331) –> [main] Second-level cache direct-reference entries: disabled  
[DEBUG] 2015-12-01 15:23:47,018(2655) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:339) –> [main] Statistics: disabled  
[DEBUG] 2015-12-01 15:23:47,018(2655) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:345) –> [main] Deleted entity synthetic identifier rollback: disabled  
[DEBUG] 2015-12-01 15:23:47,019(2656) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:372) –> [main] Default entity-mode: pojo  
[DEBUG] 2015-12-01 15:23:47,020(2657) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:378) –> [main] Named query checking : enabled  
[DEBUG] 2015-12-01 15:23:47,021(2658) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:384) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): enabled  
[DEBUG] 2015-12-01 15:23:47,022(2659) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:402) –> [main] Allow initialization of lazy state outside session : : disabled  
[DEBUG] 2015-12-01 15:23:47,023(2660) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:412) –> [main] JTA Track by Thread: enabled  
[DEBUG] 2015-12-01 15:23:47,024(2661) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Building session factory  
[DEBUG] 2015-12-01 15:23:47,027(2664) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:280) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-12-01 15:23:47,030(2667) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:281) –> [main] Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=D:\Java\jdk1.8.0_40\jre\bin, java.vm.version=25.40-b25, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\Java\workspace\demo-chained-transactionmanager, java.runtime.version=1.8.0_40-b26, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=thread, java.endorsed.dirs=D:\Java\jdk1.8.0_40\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\奇点之~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8.1, sun.jnu.encoding=GBK, java.library.path=D:\Java\jdk1.8.0_40\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/jdk1.8.0_40/bin/../jre/bin/server;D:/Java/jdk1.8.0_40/bin/../jre/bin;D:/Java/jdk1.8.0_40/bin/../jre/lib/amd64;D:\Java\jdk1.8.0_40/bin;D:\Java\jdk1.8.0_40/lib/dt.jar;D:\Java\jdk1.8.0_40/lib/tools.jar;D:\__ENV__\apache-maven-3.2.1/bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__ENV__\apache-tomcat-7.0.57\bin;D:\__ENV__\apache-tomcat-7.0.57\jre;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\TortoiseSVN\bin;D:\__ENV__\eclipse;;., hibernate.connection.datasource=org.apache.commons.dbcp.BasicDataSource@5528a42c, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=6.3, user.home=C:\Users\奇点之光08老师, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=奇点之光08老师, java.class.path=D:\Java\workspace\demo-chained-transactionmanager\target\test-classes;D:\Java\workspace\demo-chained-transactionmanager\target\classes;D:\__ENV__\repo\ch\qos\logback\logback-core\0.9.28\logback-core-0.9.28.jar;D:\__ENV__\repo\ch\qos\logback\logback-classic\0.9.28\logback-classic-0.9.28.jar;D:\__ENV__\repo\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;D:\__ENV__\repo\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;D:\__ENV__\repo\org\slf4j\slf4j-api\1.7.7\slf4j-api-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-jdk14\1.7.7\slf4j-jdk14-1.7.7.jar;D:\__ENV__\repo\org\slf4j\slf4j-log4j12\1.7.7\slf4j-log4j12-1.7.7.jar;D:\__ENV__\repo\mysql\mysql-connector-java\5.1.26\mysql-connector-java-5.1.26.jar;D:\__ENV__\repo\log4j\log4j\1.2.14\log4j-1.2.14.jar;D:\__ENV__\repo\org\springframework\data\spring-data-commons\1.8.0.RELEASE\spring-data-commons-1.8.0.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\__ENV__\repo\org\slf4j\jcl-over-slf4j\1.7.7\jcl-over-slf4j-1.7.7.jar;D:\__ENV__\repo\org\springframework\spring-context\3.2.4.RELEASE\spring-context-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-aop\3.2.4.RELEASE\spring-aop-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-expression\3.2.4.RELEASE\spring-expression-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-oxm\3.2.4.RELEASE\spring-oxm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\__ENV__\repo\org\springframework\spring-web\3.2.4.RELEASE\spring-web-3.2.4.RELEASE.jar;D:\__ENV__\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\__ENV__\repo\org\springframework\spring-webmvc\3.2.4.RELEASE\spring-webmvc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-orm\3.2.4.RELEASE\spring-orm-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-jdbc\3.2.4.RELEASE\spring-jdbc-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-tx\3.2.4.RELEASE\spring-tx-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\springframework\spring-test\3.2.4.RELEASE\spring-test-3.2.4.RELEASE.jar;D:\__ENV__\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\__ENV__\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\__ENV__\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\__ENV__\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\__ENV__\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\__ENV__\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-validator\4.2.0.Final\hibernate-validator-4.2.0.Final.jar;D:\__ENV__\repo\javax\validation\validation-api\1.0.0.GA\validation-api-1.0.0.GA.jar;D:\__ENV__\repo\org\hibernate\hibernate-core\4.2.10.Final\hibernate-core-4.2.10.Final.jar;D:\__ENV__\repo\antlr\antlr\2.7.7\antlr-2.7.7.jar;D:\__ENV__\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.1.Final\jboss-transaction-api_1.1_spec-1.0.1.Final.jar;D:\__ENV__\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpcore\4.3.1\httpcore-4.3.1.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpclient\4.3.1\httpclient-4.3.1.jar;D:\__ENV__\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\__ENV__\repo\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;D:\__ENV__\repo\org\apache\httpcomponents\httpmime\4.3.1\httpmime-4.3.1.jar;D:\__ENV__\repo\redis\clients\jedis\2.7.2\jedis-2.7.2.jar;D:\__ENV__\repo\org\apache\commons\commons-pool2\2.3\commons-pool2-2.3.jar;D:\__ENV__\repo\javax\persistence\persistence-api\1.0.2\persistence-api-1.0.2.jar;D:\__ENV__\repo\org\ansj\ansj_seg\0.9\ansj_seg-0.9.jar;D:\__ENV__\repo\org\ansj\tree_split\1.0.1\tree_split-1.0.1.jar;D:\__ENV__\repo\org\apache\commons-lang3\commons-lang3\3.1\commons-lang3-3.1.jar;D:\__ENV__\repo\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;D:\__ENV__\repo\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;D:\__ENV__\repo\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;D:\__ENV__\repo\commons-io\commons-io\2.4\commons-io-2.4.jar;D:\__ENV__\repo\commons-fileupload\commons-fileupload\1.2.2\commons-fileupload-1.2.2.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\__ENV__\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\__ENV__\repo\com\googlecode\xmemcached\xmemcached\1.4.1\xmemcached-1.4.1.jar;D:\__ENV__\repo\net\sf\json-lib\json-lib\2.4\json-lib-2.4-jdk15.jar;D:\__ENV__\repo\commons-beanutils\commons-beanutils\1.8.0\commons-beanutils-1.8.0.jar;D:\__ENV__\repo\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;D:\__ENV__\repo\net\sf\ezmorph\ezmorph\1.0.6\ezmorph-1.0.6.jar;D:\__ENV__\repo\org\mybatis\mybatis\3.1.1\mybatis-3.1.1.jar;D:\__ENV__\repo\org\mybatis\mybatis-spring\1.1.1\mybatis-spring-1.1.1.jar;D:\__ENV__\repo\junit\junit\4.11\junit-4.11.jar;D:\__ENV__\repo\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/358/1/.cp/;/D:/__ENV__/eclipse/configuration/org.eclipse.osgi/bundles/357/1/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.classLoader.application=sun.misc.Launcher$AppClassLoader@3b07d329, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=D:\Java\jdk1.8.0_40\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 61043 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -test com.it_sucre.service.HibernateServiceTest:test, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_40, java.ext.dirs=D:\Java\jdk1.8.0_40\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=D:\Java\jdk1.8.0_40\jre\lib\resources.jar;D:\Java\jdk1.8.0_40\jre\lib\rt.jar;D:\Java\jdk1.8.0_40\jre\lib\sunrsasign.jar;D:\Java\jdk1.8.0_40\jre\lib\jsse.jar;D:\Java\jdk1.8.0_40\jre\lib\jce.jar;D:\Java\jdk1.8.0_40\jre\lib\charsets.jar;D:\Java\jdk1.8.0_40\jre\lib\jfr.jar;D:\Java\jdk1.8.0_40\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}  
[DEBUG] 2015-12-01 15:23:47,051(2688) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[DEBUG] 2015-12-01 15:23:47,054(2691) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3604) –> [main] Static SQL for entity: com.it_sucre.entity.TestEntity  
[DEBUG] 2015-12-01 15:23:47,054(2691) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3609) –> [main]  Version select: select id from test where id =?  
[DEBUG] 2015-12-01 15:23:47,055(2692) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3612) –> [main]  Snapshot select: select testentity_.id, testentity_.name as name2_0_ from test testentity_ where testentity_.id=?  
[DEBUG] 2015-12-01 15:23:47,056(2693) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3615) –> [main]  Insert 0: insert into test (name, id) values (?, ?)  
[DEBUG] 2015-12-01 15:23:47,057(2694) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3616) –> [main]  Update 0: update test set name=? where id=?  
[DEBUG] 2015-12-01 15:23:47,057(2694) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3617) –> [main]  Delete 0: delete from test where id=?  
[DEBUG] 2015-12-01 15:23:47,058(2695) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [NONE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:23:47,059(2696) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:23:47,060(2697) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:23:47,061(2698) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [UPGRADE_NOWAIT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:23:47,062(2699) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [FORCE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:23:47,063(2700) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? lock in share mode  
[DEBUG] 2015-12-01 15:23:47,064(2701) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_WRITE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:23:47,065(2702) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [PESSIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update  
[DEBUG] 2015-12-01 15:23:47,066(2703) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:23:47,067(2704) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity com.it_sucre.entity.TestEntity [OPTIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:23:47,068(2705) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:23:47,069(2706) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity com.it_sucre.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?  
[DEBUG] 2015-12-01 15:23:47,069(2706) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:75) –> [main] Registering SessionFactory: 58f9057e-95ae-4623-a9b5-0d9411aa3ef3 (<unnamed>)  
[DEBUG] 2015-12-01 15:23:47,070(2707) org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:82) –> [main] Not binding SessionFactory to JNDI, no JNDI name configured  
[DEBUG] 2015-12-01 15:23:47,070(2707) org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:492) –> [main] Instantiated session factory  
[INFO ] 2015-12-01 15:23:47,071(2708) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:182) –> [main] HHH000228: Running hbm2ddl schema update  
[INFO ] 2015-12-01 15:23:47,071(2708) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:193) –> [main] HHH000102: Fetching database metadata  
[INFO ] 2015-12-01 15:23:47,072(2709) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:205) –> [main] HHH000396: Updating schema  
[DEBUG] 2015-12-01 15:23:47,073(2710) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3528) –> [main] Processing hbm.xml files  
[DEBUG] 2015-12-01 15:23:47,073(2710) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3558) –> [main] Process annotated classes  
[DEBUG] 2015-12-01 15:23:47,074(2711) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1444) –> [main] Processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-12-01 15:23:47,075(2712) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1631) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:23:47,076(2713) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1689) –> [main] Processing extends queue  
[DEBUG] 2015-12-01 15:23:47,076(2713) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1634) –> [main] Processing collection mappings  
[DEBUG] 2015-12-01 15:23:47,077(2714) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1644) –> [main] Processing native query and ResultSetMapping mappings  
[DEBUG] 2015-12-01 15:23:47,078(2715) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1652) –> [main] Processing association property references  
[DEBUG] 2015-12-01 15:23:47,078(2715) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1674) –> [main] Creating tables' unique integer identifiers  
[DEBUG] 2015-12-01 15:23:47,079(2716) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1675) –> [main] Processing foreign key constraints  
[INFO ] 2015-12-01 15:23:47,101(2738) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] HHH000261: Table found: Test.test  
[INFO ] 2015-12-01 15:23:47,102(2739) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:67) –> [main] HHH000037: Columns: [name, id]  
[INFO ] 2015-12-01 15:23:47,103(2740) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] HHH000108: Foreign keys: []  
[INFO ] 2015-12-01 15:23:47,103(2740) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:70) –> [main] HHH000126: Indexes: [primary]  
[DEBUG] 2015-12-01 15:23:47,104(2741) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-12-01 15:23:47,105(2742) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:242) –> [main] HHH000232: Schema update complete  
[DEBUG] 2015-12-01 15:23:47,105(2742) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1073) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-12-01 15:23:47,106(2743) org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1096) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-12-01 15:23:47,107(2744) org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:110) –> [main] Statistics initialized [enabled=false]  
[DEBUG] 2015-12-01 15:23:47,591(3228) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:212) –> [main] Obtaining JDBC connection  
[DEBUG] 2015-12-01 15:23:47,591(3228) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:218) –> [main] Obtained JDBC connection  
[DEBUG] 2015-12-01 15:23:47,607(3244) org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) –> [main] begin  
[DEBUG] 2015-12-01 15:23:47,607(3244) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) –> [main] initial autocommit status: true  
[DEBUG] 2015-12-01 15:23:47,607(3244) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) –> [main] disabling autocommit  
[DEBUG] 2015-12-01 15:23:47,732(3369) org.hibernate.engine.transaction.spi.AbstractTransactionImpl.rollback(AbstractTransactionImpl.java:203) –> [main] rolling back  
[DEBUG] 2015-12-01 15:23:47,732(3369) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doRollback(JdbcTransaction.java:164) –> [main] rolled JDBC Connection  
[DEBUG] 2015-12-01 15:23:47,732(3369) org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) –> [main] re-enabling autocommit  
[DEBUG] 2015-12-01 15:23:47,732(3369) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:232) –> [main] Releasing JDBC connection  
[DEBUG] 2015-12-01 15:23:47,732(3369) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:250) –> [main] Released JDBC connection  
[DEBUG] 2015-12-01 15:23:47,794(3431) org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1374) –> [Thread-2] HHH000031: Closing  
[DEBUG] 2015-12-01 15:23:47,794(3431) org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1374) –> [Thread-2] HHH000031: Closing  
[DEBUG] 2015-12-01 15:25:05,411(0) org.hibernate.cfg.Configuration.<clinit>(Configuration.java:184) –> [main] Logging Provider: org.jboss.logging.Log4jLoggerProvider  
[DEBUG] 2015-12-01 15:25:05,441(30) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@22e357dc  
[DEBUG] 2015-12-01 15:25:05,442(31) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@22e357dc  
[DEBUG] 2015-12-01 15:25:05,443(32) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@22e357dc  
[DEBUG] 2015-12-01 15:25:05,447(36) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@48974e45  
[DEBUG] 2015-12-01 15:25:05,451(40) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@57af006c  
[DEBUG] 2015-12-01 15:25:05,454(43) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@2fd1433e  
[DEBUG] 2015-12-01 15:25:05,459(48) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@37654521  
[DEBUG] 2015-12-01 15:25:05,461(50) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@37654521  
[DEBUG] 2015-12-01 15:25:05,463(52) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@37654521  
[DEBUG] 2015-12-01 15:25:05,466(55) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@7ea9e1e2  
[DEBUG] 2015-12-01 15:25:05,467(56) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@7ea9e1e2  
[DEBUG] 2015-12-01 15:25:05,467(56) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7ea9e1e2  
[DEBUG] 2015-12-01 15:25:05,470(59) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@14555e0a  
[DEBUG] 2015-12-01 15:25:05,471(60) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration short -> org.hibernate.type.ShortType@14555e0a  
[DEBUG] 2015-12-01 15:25:05,471(60) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@14555e0a  
[DEBUG] 2015-12-01 15:25:05,473(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@10d307f1  
[DEBUG] 2015-12-01 15:25:05,474(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@10d307f1  
[DEBUG] 2015-12-01 15:25:05,474(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@10d307f1  
[DEBUG] 2015-12-01 15:25:05,478(67) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@1b1426f4  
[DEBUG] 2015-12-01 15:25:05,479(68) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration long -> org.hibernate.type.LongType@1b1426f4  
[DEBUG] 2015-12-01 15:25:05,479(68) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@1b1426f4  
[DEBUG] 2015-12-01 15:25:05,482(71) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@2a54a73f  
[DEBUG] 2015-12-01 15:25:05,483(72) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration float -> org.hibernate.type.FloatType@2a54a73f  
[DEBUG] 2015-12-01 15:25:05,483(72) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2a54a73f  
[DEBUG] 2015-12-01 15:25:05,486(75) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@16610890  
[DEBUG] 2015-12-01 15:25:05,487(76) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@16610890  
[DEBUG] 2015-12-01 15:25:05,487(76) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@16610890  
[DEBUG] 2015-12-01 15:25:05,490(79) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@28f2a10f  
[DEBUG] 2015-12-01 15:25:05,491(80) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@28f2a10f  
[DEBUG] 2015-12-01 15:25:05,495(84) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@20ccf40b  
[DEBUG] 2015-12-01 15:25:05,498(87) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@20ccf40b  
[DEBUG] 2015-12-01 15:25:05,502(91) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration string -> org.hibernate.type.StringType@6283d8b8  
[DEBUG] 2015-12-01 15:25:05,503(92) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@6283d8b8  
[DEBUG] 2015-12-01 15:25:05,506(95) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@a530d0a  
[DEBUG] 2015-12-01 15:25:05,508(97) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4738a206  
[DEBUG] 2015-12-01 15:25:05,510(99) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration url -> org.hibernate.type.UrlType@58695725  
[DEBUG] 2015-12-01 15:25:05,512(101) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@58695725  
[DEBUG] 2015-12-01 15:25:05,517(106) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration date -> org.hibernate.type.DateType@58d75e99  
[DEBUG] 2015-12-01 15:25:05,517(106) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@58d75e99  
[DEBUG] 2015-12-01 15:25:05,520(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration time -> org.hibernate.type.TimeType@e15b7e8  
[DEBUG] 2015-12-01 15:25:05,521(110) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@e15b7e8  
[DEBUG] 2015-12-01 15:25:05,524(113) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@485966cc  
[DEBUG] 2015-12-01 15:25:05,525(114) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@485966cc  
[DEBUG] 2015-12-01 15:25:05,525(114) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@485966cc  
[DEBUG] 2015-12-01 15:25:05,530(119) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@57cf54e1  
[DEBUG] 2015-12-01 15:25:05,533(122) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@3ee37e5a  
[DEBUG] 2015-12-01 15:25:05,533(122) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3ee37e5a  
[DEBUG] 2015-12-01 15:25:05,534(123) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3ee37e5a  
[DEBUG] 2015-12-01 15:25:05,535(124) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@f0da945  
[DEBUG] 2015-12-01 15:25:05,537(126) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@3e11f9e9  
[DEBUG] 2015-12-01 15:25:05,538(127) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3e11f9e9  
[DEBUG] 2015-12-01 15:25:05,540(129) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@4dbb42b7  
[DEBUG] 2015-12-01 15:25:05,541(130) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4dbb42b7  
[DEBUG] 2015-12-01 15:25:05,544(133) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@23c30a20  
[DEBUG] 2015-12-01 15:25:05,545(134) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@23c30a20  
[DEBUG] 2015-12-01 15:25:05,548(137) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration class -> org.hibernate.type.ClassType@49049a04  
[DEBUG] 2015-12-01 15:25:05,549(138) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@49049a04  
[DEBUG] 2015-12-01 15:25:05,551(140) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@26e356f0  
[DEBUG] 2015-12-01 15:25:05,552(141) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@26e356f0  
[DEBUG] 2015-12-01 15:25:05,553(142) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1151e434  
[DEBUG] 2015-12-01 15:25:05,555(144) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@428640fa  
[DEBUG] 2015-12-01 15:25:05,557(146) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@6bd61f98  
[DEBUG] 2015-12-01 15:25:05,558(147) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@6bd61f98  
[DEBUG] 2015-12-01 15:25:05,559(148) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@6bd61f98  
[DEBUG] 2015-12-01 15:25:05,566(155) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@53aac487  
[DEBUG] 2015-12-01 15:25:05,567(156) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@53aac487  
[DEBUG] 2015-12-01 15:25:05,568(157) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@53aac487  
[DEBUG] 2015-12-01 15:25:05,571(160) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration image -> org.hibernate.type.ImageType@2d52216b  
[DEBUG] 2015-12-01 15:25:05,576(165) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@5a45133e  
[DEBUG] 2015-12-01 15:25:05,577(166) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@5a45133e  
[DEBUG] 2015-12-01 15:25:05,578(167) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@5a45133e  
[DEBUG] 2015-12-01 15:25:05,584(173) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5d534f5d  
[DEBUG] 2015-12-01 15:25:05,585(174) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5d534f5d  
[DEBUG] 2015-12-01 15:25:05,586(175) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5d534f5d  
[DEBUG] 2015-12-01 15:25:05,589(178) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) –> [main] Adding type registration text -> org.hibernate.type.TextType@6221a451  
